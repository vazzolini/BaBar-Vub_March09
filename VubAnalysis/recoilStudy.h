//////////////////////////////////////////////////////////
//   This class has been automatically generated 
//     (Fri Sep  6 03:48:41 2002 by ROOT version3.01/06)
//   from TTree h1/CompBRecoNtuple
//   found on file: /nfs/farm/babar/AWG7/ISL/sx-071802/data/2002/output/outputdir/newAlleEvents_2002_on-1071_split1.root
//////////////////////////////////////////////////////////


#ifndef recoilStudy_h
#define recoilStudy_h

#include <TROOT.h>
#include <TChain.h>
#include <TFile.h>

class recoilStudy {
   protected:

   int indexdau[7], lunddau[7], bestB0;  
   int indexbestB;
   Double_t brecosig[6000], brecobkg[6000], brecointpur[6000];  
   Double_t mes;
   Double_t ELMASS, MUMASS, PIPMASS, PIZMASS, KAPMASS, KAZMASS, DSTARMASS, BPMASS, BZMASS, BMASS, BQMASS, A0;
   TFile *fHistFile;
   TH1 *h;
   TString *thename, *thedir, histfile;

   public :
   TTree           *fChain;   //pointer to the analyzed TTree or TChain
   Int_t           fCurrent; //current Tree number in a TChain
//Declaration of leaves types
   Int_t           event;
   Int_t           runNumber;
   Int_t           platform;
   Int_t           partition;
   Int_t           upperID;
   Int_t           lowerID;
   Float_t         primVtxX;
   Float_t         primVtxY;
   Float_t         primVtxZ;
   Float_t         primVtxCovXX;
   Float_t         primVtxCovYY;
   Float_t         primVtxCovZZ;
   Float_t         primVtxCovXY;
   Float_t         primVtxCovYZ;
   Float_t         primVtxCovXZ;
   Float_t         primVtxChi2;
   Int_t           primVtxNdof;
   UChar_t         BCountFilter;
   UChar_t         DchTrig;
   UChar_t         EmcTrig;
   Float_t         R2All;
   Int_t           nGTLFid;
   Int_t           nChgFid;
   Float_t         eTotFid;
   Float_t         PrimVtxdr;
   Float_t         PrimVtxdz;
   Float_t         VtxProb;
   Float_t         beamSX;
   Float_t         beamSY;
   Float_t         beamSZ;
   Float_t         beamSCovXX;
   Float_t         beamSCovYY;
   Float_t         beamSCovZZ;
   Float_t         beamSCovXZ;
   Float_t         pxUps;
   Float_t         pyUps;
   Float_t         pzUps;
   Float_t         eUps;
   Int_t           nTrkTot;
   Float_t         W2;
   Float_t         FoxWol2;
   Float_t         FoxWol2Neu;
   Float_t         thrust;
   Float_t         thrustNeu;
   Int_t           nB0;
   Float_t         massB0[100];
   Float_t         pB0[100];
   Float_t         thB0[100];
   Float_t         phiB0[100];
   Float_t         errMassB0[100];
   Float_t         m0B0[100];
   Float_t         xB0[100];
   Float_t         yB0[100];
   Float_t         zB0[100];
   Float_t         s2xB0[100];
   Float_t         s2yB0[100];
   Float_t         s2zB0[100];
   Float_t         chi2B0[100];
   Int_t           dofB0[100];
   Int_t           stB0[100];
   Int_t           ndauB0[100];
   Float_t         mseB0[100];
   Float_t         mHatB0[100];
   Float_t         deltaeB0[100];
   Float_t         ThruB0[100];
   Float_t         thThruB0[100];
   Float_t         phiThruB0[100];
   Float_t         cosTBB0[100];
   Int_t           d1B0Index[100];
   Int_t           d1B0Lund[100];
   Int_t           d2B0Index[100];
   Int_t           d2B0Lund[100];
   Int_t           d3B0Index[100];
   Int_t           d3B0Lund[100];
   Int_t           d4B0Index[100];
   Int_t           d4B0Lund[100];
   Int_t           d5B0Index[100];
   Int_t           d5B0Lund[100];
   Int_t           d6B0Index[100];
   Int_t           d6B0Lund[100];
   Int_t           d7B0Index[100];
   Int_t           d7B0Lund[100];
   Int_t           modeB0[100];
   Float_t         purB0[100];
   Float_t         intpurB0[100];
   Float_t         VtxXLepB0[100];
   Float_t         VtxYLepB0[100];
   Float_t         VtxZLepB0[100];
   Float_t         VtxCovXXLepB0[100];
   Float_t         VtxCovYYLepB0[100];
   Float_t         VtxCovXYLepB0[100];
   Float_t         VtxCovZZLepB0[100];
   Float_t         VtxCovXZLepB0[100];
   Float_t         VtxCovYZLepB0[100];
   Float_t         VtxChiSqLepB0[100];
   Float_t         VtxNDofLepB0[100];
   Int_t           VtxStatLepB0[100];
   Int_t           VtxNUsedLepB0[100];
   Float_t         DocaLepB0[100];
   Float_t         DocaErrLepB0[100];
   Float_t         VtxXXB0[100];
   Float_t         VtxYXB0[100];
   Float_t         VtxZXB0[100];
   Float_t         VtxCovXXXB0[100];
   Float_t         VtxCovYYXB0[100];
   Float_t         VtxCovXYXB0[100];
   Float_t         VtxCovZZXB0[100];
   Float_t         VtxCovXZXB0[100];
   Float_t         VtxCovYZXB0[100];
   Float_t         VtxChiSqXB0[100];
   Float_t         VtxNDofXB0[100];
   Int_t           VtxStatXB0[100];
   Int_t           VtxNUsedXB0[100];
   Float_t         VtxPXB0[100];
   Float_t         VtxPhiXB0[100];
   Float_t         VtxThetaXB0[100];
   Float_t         ThrustXB0[100];
   Float_t         ThrustXPhiB0[100];
   Float_t         ThrustXThetaB0[100];
   Float_t         MassPB0[100];
   Float_t         MassPhiB0[100];
   Float_t         MassThetaB0[100];
   Float_t         Cov00B0[100];
   Float_t         Cov10B0[100];
   Float_t         Cov11B0[100];
   Float_t         Cov20B0[100];
   Float_t         Cov21B0[100];
   Float_t         Cov22B0[100];
   Float_t         Cov30B0[100];
   Float_t         Cov31B0[100];
   Float_t         Cov32B0[100];
   Float_t         Cov33B0[100];
   Int_t           nChB;
   Float_t         massChB[100];
   Float_t         pChB[100];
   Float_t         thChB[100];
   Float_t         phiChB[100];
   Float_t         errMassChB[100];
   Float_t         m0ChB[100];
   Float_t         xChB[100];
   Float_t         yChB[100];
   Float_t         zChB[100];
   Float_t         s2xChB[100];
   Float_t         s2yChB[100];
   Float_t         s2zChB[100];
   Float_t         chi2ChB[100];
   Int_t           dofChB[100];
   Int_t           stChB[100];
   Int_t           ndauChB[100];
   Float_t         mseChB[100];
   Float_t         mHatChB[100];
   Float_t         deltaeChB[100];
   Float_t         ThruChB[100];
   Float_t         thThruChB[100];
   Float_t         phiThruChB[100];
   Float_t         cosTBChB[100];
   Int_t           d1ChBIndex[100];
   Int_t           d1ChBLund[100];
   Int_t           d2ChBIndex[100];
   Int_t           d2ChBLund[100];
   Int_t           d3ChBIndex[100];
   Int_t           d3ChBLund[100];
   Int_t           d4ChBIndex[100];
   Int_t           d4ChBLund[100];
   Int_t           d5ChBIndex[100];
   Int_t           d5ChBLund[100];
   Int_t           d6ChBIndex[100];
   Int_t           d6ChBLund[100];
   Int_t           d7ChBIndex[100];
   Int_t           d7ChBLund[100];
   Int_t           modeChB[100];
   Float_t         purChB[100];
   Float_t         intpurChB[100];
   Float_t         VtxXLepChB[100];
   Float_t         VtxYLepChB[100];
   Float_t         VtxZLepChB[100];
   Float_t         VtxCovXXLepChB[100];
   Float_t         VtxCovYYLepChB[100];
   Float_t         VtxCovXYLepChB[100];
   Float_t         VtxCovZZLepChB[100];
   Float_t         VtxCovXZLepChB[100];
   Float_t         VtxCovYZLepChB[100];
   Float_t         VtxChiSqLepChB[100];
   Float_t         VtxNDofLepChB[100];
   Int_t           VtxStatLepChB[100];
   Int_t           VtxNUsedLepChB[100];
   Float_t         DocaLepChB[100];
   Float_t         DocaErrLepChB[100];
   Float_t         VtxXXChB[100];
   Float_t         VtxYXChB[100];
   Float_t         VtxZXChB[100];
   Float_t         VtxCovXXXChB[100];
   Float_t         VtxCovYYXChB[100];
   Float_t         VtxCovXYXChB[100];
   Float_t         VtxCovZZXChB[100];
   Float_t         VtxCovXZXChB[100];
   Float_t         VtxCovYZXChB[100];
   Float_t         VtxChiSqXChB[100];
   Float_t         VtxNDofXChB[100];
   Int_t           VtxStatXChB[100];
   Int_t           VtxNUsedXChB[100];
   Float_t         VtxPXChB[100];
   Float_t         VtxPhiXChB[100];
   Float_t         VtxThetaXChB[100];
   Float_t         ThrustXChB[100];
   Float_t         ThrustXPhiChB[100];
   Float_t         ThrustXThetaChB[100];
   Float_t         MassPChB[100];
   Float_t         MassPhiChB[100];
   Float_t         MassThetaChB[100];
   Float_t         Cov00ChB[100];
   Float_t         Cov10ChB[100];
   Float_t         Cov11ChB[100];
   Float_t         Cov20ChB[100];
   Float_t         Cov21ChB[100];
   Float_t         Cov22ChB[100];
   Float_t         Cov30ChB[100];
   Float_t         Cov31ChB[100];
   Float_t         Cov32ChB[100];
   Float_t         Cov33ChB[100];
   Int_t           nDstar;
   Float_t         massDstar[100];
   Float_t         pDstar[100];
   Float_t         thDstar[100];
   Float_t         phiDstar[100];
   Float_t         errMassDstar[100];
   Float_t         m0Dstar[100];
   Float_t         xDstar[100];
   Float_t         yDstar[100];
   Float_t         zDstar[100];
   Float_t         s2xDstar[100];
   Float_t         s2yDstar[100];
   Float_t         s2zDstar[100];
   Float_t         chi2Dstar[100];
   Int_t           dofDstar[100];
   Int_t           stDstar[100];
   Int_t           ndauDstar[100];
   Int_t           d1DstarIndex[100];
   Int_t           d1DstarLund[100];
   Int_t           d2DstarIndex[100];
   Int_t           d2DstarLund[100];
   Int_t           nDstarBS;
   Float_t         massDstarBS[100];
   Float_t         chi2DstarBS[100];
   Int_t           dofDstarBS[100];
   Float_t         spixDstarBS[100];
   Float_t         spiyDstarBS[100];
   Float_t         spizDstarBS[100];
   Int_t           nDstar0;
   Float_t         massDstar0[100];
   Float_t         pDstar0[100];
   Float_t         thDstar0[100];
   Float_t         phiDstar0[100];
   Float_t         errMassDstar0[100];
   Float_t         m0Dstar0[100];
   Float_t         xDstar0[100];
   Float_t         yDstar0[100];
   Float_t         zDstar0[100];
   Float_t         s2xDstar0[100];
   Float_t         s2yDstar0[100];
   Float_t         s2zDstar0[100];
   Float_t         chi2Dstar0[100];
   Int_t           dofDstar0[100];
   Int_t           stDstar0[100];
   Int_t           ndauDstar0[100];
   Int_t           d1Dstar0Index[100];
   Int_t           d1Dstar0Lund[100];
   Int_t           d2Dstar0Index[100];
   Int_t           d2Dstar0Lund[100];
   Int_t           nD0;
   Float_t         massD0[100];
   Float_t         pD0[100];
   Float_t         thD0[100];
   Float_t         phiD0[100];
   Float_t         errMassD0[100];
   Float_t         m0D0[100];
   Float_t         xD0[100];
   Float_t         yD0[100];
   Float_t         zD0[100];
   Float_t         s2xD0[100];
   Float_t         s2yD0[100];
   Float_t         s2zD0[100];
   Float_t         chi2D0[100];
   Int_t           dofD0[100];
   Int_t           stD0[100];
   Int_t           ndauD0[100];
   Int_t           d1D0Index[100];
   Int_t           d1D0Lund[100];
   Int_t           d2D0Index[100];
   Int_t           d2D0Lund[100];
   Int_t           d3D0Index[100];
   Int_t           d3D0Lund[100];
   Int_t           d4D0Index[100];
   Int_t           d4D0Lund[100];
   Int_t           nChD;
   Float_t         massChD[100];
   Float_t         pChD[100];
   Float_t         thChD[100];
   Float_t         phiChD[100];
   Float_t         errMassChD[100];
   Float_t         m0ChD[100];
   Float_t         xChD[100];
   Float_t         yChD[100];
   Float_t         zChD[100];
   Float_t         s2xChD[100];
   Float_t         s2yChD[100];
   Float_t         s2zChD[100];
   Float_t         chi2ChD[100];
   Int_t           dofChD[100];
   Int_t           stChD[100];
   Int_t           ndauChD[100];
   Int_t           d1ChDIndex[100];
   Int_t           d1ChDLund[100];
   Int_t           d2ChDIndex[100];
   Int_t           d2ChDLund[100];
   Int_t           d3ChDIndex[100];
   Int_t           d3ChDLund[100];
   Int_t           d4ChDIndex[100];
   Int_t           d4ChDLund[100];
   Int_t           nJpsi;
   Float_t         massJpsi[50];
   Float_t         pJpsi[50];
   Float_t         thJpsi[50];
   Float_t         phiJpsi[50];
   Float_t         errMassJpsi[50];
   Float_t         m0Jpsi[50];
   Float_t         xJpsi[50];
   Float_t         yJpsi[50];
   Float_t         zJpsi[50];
   Float_t         s2xJpsi[50];
   Float_t         s2yJpsi[50];
   Float_t         s2zJpsi[50];
   Float_t         chi2Jpsi[50];
   Int_t           dofJpsi[50];
   Int_t           stJpsi[50];
   Int_t           ndauJpsi[50];
   Int_t           d1JpsiIndex[50];
   Int_t           d1JpsiLund[50];
   Int_t           d1JpsiGamIndex[50];
   Int_t           d1JpsiGamBrIndex[50];
   Int_t           d1JpsiGamNumBr[50];
   Int_t           d2JpsiIndex[50];
   Int_t           d2JpsiLund[50];
   Int_t           d2JpsiGamIndex[50];
   Int_t           d2JpsiGamBrIndex[50];
   Int_t           d2JpsiGamNumBr[50];
   Int_t           nKs;
   Float_t         massKs[50];
   Float_t         pKs[50];
   Float_t         thKs[50];
   Float_t         phiKs[50];
   Float_t         errMassKs[50];
   Float_t         m0Ks[50];
   Float_t         xKs[50];
   Float_t         yKs[50];
   Float_t         zKs[50];
   Float_t         s2xKs[50];
   Float_t         s2yKs[50];
   Float_t         s2zKs[50];
   Float_t         chi2Ks[50];
   Int_t           dofKs[50];
   Int_t           stKs[50];
   Int_t           ndauKs[50];
   Int_t           d1KsIndex[50];
   Int_t           d1KsLund[50];
   Int_t           d2KsIndex[50];
   Int_t           d2KsLund[50];
   Int_t           nPi0;
   Float_t         massPi0[150];
   Float_t         pPi0[150];
   Float_t         thPi0[150];
   Float_t         phiPi0[150];
   Float_t         errMassPi0[150];
   Float_t         m0Pi0[150];
   Float_t         xPi0[150];
   Float_t         yPi0[150];
   Float_t         zPi0[150];
   Float_t         s2xPi0[150];
   Float_t         s2yPi0[150];
   Float_t         s2zPi0[150];
   Float_t         chi2Pi0[150];
   Int_t           dofPi0[150];
   Int_t           stPi0[150];
   Int_t           ndauPi0[150];
   Int_t           d1Pi0Index[150];
   Int_t           d1Pi0Lund[150];
   Int_t           d2Pi0Index[150];
   Int_t           d2Pi0Lund[150];
   Int_t           nGConv;
   Float_t         massGConv[10];
   Float_t         pGConv[10];
   Float_t         thGConv[10];
   Float_t         phiGConv[10];
   Float_t         errMassGConv[10];
   Float_t         m0GConv[10];
   Float_t         xGConv[10];
   Float_t         yGConv[10];
   Float_t         zGConv[10];
   Float_t         s2xGConv[10];
   Float_t         s2yGConv[10];
   Float_t         s2zGConv[10];
   Float_t         chi2GConv[10];
   Int_t           dofGConv[10];
   Int_t           stGConv[10];
   Int_t           ndauGConv[10];
   Int_t           d1GConvIndex[10];
   Int_t           d1GConvLund[10];
   Int_t           d2GConvIndex[10];
   Int_t           d2GConvLund[10];
   Int_t           nDalitz;
   Float_t         massDalitz[10];
   Float_t         pDalitz[10];
   Float_t         thDalitz[10];
   Float_t         phiDalitz[10];
   Float_t         errMassDalitz[10];
   Float_t         m0Dalitz[10];
   Float_t         xDalitz[10];
   Float_t         yDalitz[10];
   Float_t         zDalitz[10];
   Float_t         s2xDalitz[10];
   Float_t         s2yDalitz[10];
   Float_t         s2zDalitz[10];
   Float_t         chi2Dalitz[10];
   Int_t           dofDalitz[10];
   Int_t           stDalitz[10];
   Int_t           ndauDalitz[10];
   Int_t           d1DalitzIndex[10];
   Int_t           d1DalitzLund[10];
   Int_t           d2DalitzIndex[10];
   Int_t           d2DalitzLund[10];
   Int_t           nTrk;
   Int_t           IfrLayTrk[60];
   Int_t           IfrNsTrk[60];
   UChar_t         IfrInnerTrk[60];
   UChar_t         IfrBarrelTrk[60];
   UChar_t         IfrFWDTrk[60];
   UChar_t         IfrBWDTrk[60];
   Float_t         IfrMeasIntLenTrk[60];
   Int_t           IfrFirstHitTrk[60];
   Int_t           IfrLastHitTrk[60];
   Float_t         lMomTrk[60];
   Float_t         ZMom42Trk[60];
   Float_t         ecalTrk[60];
   Float_t         ecalXTrk[60];
   Float_t         ecalYTrk[60];
   Float_t         ecalZTrk[60];
   Int_t           nCryTrk[60];
   Int_t           nBumpTrk[60];
   Float_t         ZMom20Trk[60];
   Float_t         secMomTrk[60];
   Float_t         s1s9Trk[60];
   Float_t         s9s25Trk[60];
   Float_t         erawTrk[60];
   Float_t         phiClusterTrk[60];
   Float_t         thetaClusterTrk[60];
   Float_t         covEETrk[60];
   Float_t         covTTTrk[60];
   Float_t         covPPTrk[60];
   Float_t         covRRTrk[60];
   Float_t         phicMatTrk[60];
   Float_t         trkcMatTrk[60];
   Int_t           nPidTrk[60];
   Int_t           emcStatusTrk[60];
   Float_t         phiAtEMCTrk[60];
   Float_t         thetaAtEMCTrk[60];
   Int_t           isvtTrk[60];
   Int_t           nsvtTrk[60];
   Int_t           fhitTrk[60];
   Int_t           ndchTrk[60];
   Int_t           lhitTrk[60];
   Float_t         tLenTrk[60];
   Int_t           ntdofTrk[60];
   Float_t         tproTrk[60];
   Float_t         tChi2Trk[60];
   Int_t           cPidTrk[60];
   Float_t         sfRangeTrk[60];
   UChar_t         trkFitStatusTrk[60];
   Int_t           chargeTrk[60];
   Float_t         momentumTrk[60];
   Float_t         ppcov00[60];
   Float_t         ppcov10[60];
   Float_t         ppcov11[60];
   Float_t         ppcov20[60];
   Float_t         ppcov21[60];
   Float_t         ppcov22[60];
   Float_t         xPocaTrk[60];
   Float_t         yPocaTrk[60];
   Float_t         zPocaTrk[60];
   Float_t         thetaTrk[60];
   Float_t         phiTrk[60];
   Int_t           muonIdTrk[60];
   Int_t           elecIdTrk[60];
   Int_t           kaonIdTrk[60];
   Int_t           pionIdTrk[60];
   Int_t           protonIdTrk[60];
   Int_t           B0RecTrk[60];
   Int_t           chBRecTrk[60];
   Int_t           nGam;
   Int_t           IfrLayGam[80];
   Int_t           IfrNsGam[80];
   UChar_t         IfrInnerGam[80];
   UChar_t         IfrBarrelGam[80];
   UChar_t         IfrFWDGam[80];
   UChar_t         IfrBWDGam[80];
   Float_t         IfrMeasIntLenGam[80];
   Int_t           IfrFirstHitGam[80];
   Int_t           IfrLastHitGam[80];
   Float_t         IfrExpIntLenGam[80];
   Float_t         IfrIntLenBeforeIronGam[80];
   Float_t         IfrTrkMatchGam[80];
   Float_t         IfrEmcMatchGam[80];
   Int_t           IfrLastBarrelGam[80];
   Float_t         IfrCLFitChi2Gam[80];
   Int_t           IfrStrips0[80];
   Int_t           IfrStrips1[80];
   Int_t           IfrStrips2[80];
   Int_t           IfrStrips3[80];
   Int_t           IfrStrips4[80];
   Int_t           IfrStrips5[80];
   Int_t           IfrStrips6[80];
   Int_t           IfrStrips7[80];
   Int_t           IfrStrips8[80];
   Int_t           IfrStrips9[80];
   Int_t           IfrStrips10[80];
   Int_t           IfrStrips11[80];
   Int_t           IfrStrips12[80];
   Int_t           IfrStrips13[80];
   Int_t           IfrStrips14[80];
   Int_t           IfrStrips15[80];
   Int_t           IfrStrips16[80];
   Int_t           IfrStrips17[80];
   Int_t           IfrStrips18[80];
   Int_t           IfrStrips19[80];
   Float_t         lMomGam[80];
   Float_t         ZMom42Gam[80];
   Float_t         ecalGam[80];
   Float_t         ecalXGam[80];
   Float_t         ecalYGam[80];
   Float_t         ecalZGam[80];
   Int_t           nCryGam[80];
   Int_t           nBumpGam[80];
   Float_t         ZMom20Gam[80];
   Float_t         secMomGam[80];
   Float_t         s1s9Gam[80];
   Float_t         s9s25Gam[80];
   Float_t         erawGam[80];
   Float_t         phiClusterGam[80];
   Float_t         thetaClusterGam[80];
   Float_t         covEEGam[80];
   Float_t         covTTGam[80];
   Float_t         covPPGam[80];
   Float_t         covRRGam[80];
   Int_t           emcStatusGam[80];
   Float_t         thetaGam[80];
   Float_t         phiGam[80];
   Float_t         energyGam[80];
   Int_t           B0RecGam[80];
   Int_t           chBRecGam[80];

//List of branches
   TBranch        *b_event;
   TBranch        *b_runNumber;
   TBranch        *b_platform;
   TBranch        *b_partition;
   TBranch        *b_upperID;
   TBranch        *b_lowerID;
   TBranch        *b_primVtxX;
   TBranch        *b_primVtxY;
   TBranch        *b_primVtxZ;
   TBranch        *b_primVtxCovXX;
   TBranch        *b_primVtxCovYY;
   TBranch        *b_primVtxCovZZ;
   TBranch        *b_primVtxCovXY;
   TBranch        *b_primVtxCovYZ;
   TBranch        *b_primVtxCovXZ;
   TBranch        *b_primVtxChi2;
   TBranch        *b_primVtxNdof;
   TBranch        *b_BCountFilter;
   TBranch        *b_DchTrig;
   TBranch        *b_EmcTrig;
   TBranch        *b_R2All;
   TBranch        *b_nGTLFid;
   TBranch        *b_nChgFid;
   TBranch        *b_eTotFid;
   TBranch        *b_PrimVtxdr;
   TBranch        *b_PrimVtxdz;
   TBranch        *b_VtxProb;
   TBranch        *b_beamSX;
   TBranch        *b_beamSY;
   TBranch        *b_beamSZ;
   TBranch        *b_beamSCovXX;
   TBranch        *b_beamSCovYY;
   TBranch        *b_beamSCovZZ;
   TBranch        *b_beamSCovXZ;
   TBranch        *b_pxUps;
   TBranch        *b_pyUps;
   TBranch        *b_pzUps;
   TBranch        *b_eUps;
   TBranch        *b_nTrkTot;
   TBranch        *b_W2;
   TBranch        *b_FoxWol2;
   TBranch        *b_FoxWol2Neu;
   TBranch        *b_thrust;
   TBranch        *b_thrustNeu;
   TBranch        *b_nB0;
   TBranch        *b_massB0;
   TBranch        *b_pB0;
   TBranch        *b_thB0;
   TBranch        *b_phiB0;
   TBranch        *b_errMassB0;
   TBranch        *b_m0B0;
   TBranch        *b_xB0;
   TBranch        *b_yB0;
   TBranch        *b_zB0;
   TBranch        *b_s2xB0;
   TBranch        *b_s2yB0;
   TBranch        *b_s2zB0;
   TBranch        *b_chi2B0;
   TBranch        *b_dofB0;
   TBranch        *b_stB0;
   TBranch        *b_ndauB0;
   TBranch        *b_mseB0;
   TBranch        *b_mHatB0;
   TBranch        *b_deltaeB0;
   TBranch        *b_ThruB0;
   TBranch        *b_thThruB0;
   TBranch        *b_phiThruB0;
   TBranch        *b_cosTBB0;
   TBranch        *b_d1B0Index;
   TBranch        *b_d1B0Lund;
   TBranch        *b_d2B0Index;
   TBranch        *b_d2B0Lund;
   TBranch        *b_d3B0Index;
   TBranch        *b_d3B0Lund;
   TBranch        *b_d4B0Index;
   TBranch        *b_d4B0Lund;
   TBranch        *b_d5B0Index;
   TBranch        *b_d5B0Lund;
   TBranch        *b_d6B0Index;
   TBranch        *b_d6B0Lund;
   TBranch        *b_d7B0Index;
   TBranch        *b_d7B0Lund;
   TBranch        *b_modeB0;
   TBranch        *b_purB0;
   TBranch        *b_intpurB0;
   TBranch        *b_VtxXLepB0;
   TBranch        *b_VtxYLepB0;
   TBranch        *b_VtxZLepB0;
   TBranch        *b_VtxCovXXLepB0;
   TBranch        *b_VtxCovYYLepB0;
   TBranch        *b_VtxCovXYLepB0;
   TBranch        *b_VtxCovZZLepB0;
   TBranch        *b_VtxCovXZLepB0;
   TBranch        *b_VtxCovYZLepB0;
   TBranch        *b_VtxChiSqLepB0;
   TBranch        *b_VtxNDofLepB0;
   TBranch        *b_VtxStatLepB0;
   TBranch        *b_VtxNUsedLepB0;
   TBranch        *b_DocaLepB0;
   TBranch        *b_DocaErrLepB0;
   TBranch        *b_VtxXXB0;
   TBranch        *b_VtxYXB0;
   TBranch        *b_VtxZXB0;
   TBranch        *b_VtxCovXXXB0;
   TBranch        *b_VtxCovYYXB0;
   TBranch        *b_VtxCovXYXB0;
   TBranch        *b_VtxCovZZXB0;
   TBranch        *b_VtxCovXZXB0;
   TBranch        *b_VtxCovYZXB0;
   TBranch        *b_VtxChiSqXB0;
   TBranch        *b_VtxNDofXB0;
   TBranch        *b_VtxStatXB0;
   TBranch        *b_VtxNUsedXB0;
   TBranch        *b_VtxPXB0;
   TBranch        *b_VtxPhiXB0;
   TBranch        *b_VtxThetaXB0;
   TBranch        *b_ThrustXB0;
   TBranch        *b_ThrustXPhiB0;
   TBranch        *b_ThrustXThetaB0;
   TBranch        *b_MassPB0;
   TBranch        *b_MassPhiB0;
   TBranch        *b_MassThetaB0;
   TBranch        *b_Cov00B0;
   TBranch        *b_Cov10B0;
   TBranch        *b_Cov11B0;
   TBranch        *b_Cov20B0;
   TBranch        *b_Cov21B0;
   TBranch        *b_Cov22B0;
   TBranch        *b_Cov30B0;
   TBranch        *b_Cov31B0;
   TBranch        *b_Cov32B0;
   TBranch        *b_Cov33B0;
   TBranch        *b_nChB;
   TBranch        *b_massChB;
   TBranch        *b_pChB;
   TBranch        *b_thChB;
   TBranch        *b_phiChB;
   TBranch        *b_errMassChB;
   TBranch        *b_m0ChB;
   TBranch        *b_xChB;
   TBranch        *b_yChB;
   TBranch        *b_zChB;
   TBranch        *b_s2xChB;
   TBranch        *b_s2yChB;
   TBranch        *b_s2zChB;
   TBranch        *b_chi2ChB;
   TBranch        *b_dofChB;
   TBranch        *b_stChB;
   TBranch        *b_ndauChB;
   TBranch        *b_mseChB;
   TBranch        *b_mHatChB;
   TBranch        *b_deltaeChB;
   TBranch        *b_ThruChB;
   TBranch        *b_thThruChB;
   TBranch        *b_phiThruChB;
   TBranch        *b_cosTBChB;
   TBranch        *b_d1ChBIndex;
   TBranch        *b_d1ChBLund;
   TBranch        *b_d2ChBIndex;
   TBranch        *b_d2ChBLund;
   TBranch        *b_d3ChBIndex;
   TBranch        *b_d3ChBLund;
   TBranch        *b_d4ChBIndex;
   TBranch        *b_d4ChBLund;
   TBranch        *b_d5ChBIndex;
   TBranch        *b_d5ChBLund;
   TBranch        *b_d6ChBIndex;
   TBranch        *b_d6ChBLund;
   TBranch        *b_d7ChBIndex;
   TBranch        *b_d7ChBLund;
   TBranch        *b_modeChB;
   TBranch        *b_purChB;
   TBranch        *b_intpurChB;
   TBranch        *b_VtxXLepChB;
   TBranch        *b_VtxYLepChB;
   TBranch        *b_VtxZLepChB;
   TBranch        *b_VtxCovXXLepChB;
   TBranch        *b_VtxCovYYLepChB;
   TBranch        *b_VtxCovXYLepChB;
   TBranch        *b_VtxCovZZLepChB;
   TBranch        *b_VtxCovXZLepChB;
   TBranch        *b_VtxCovYZLepChB;
   TBranch        *b_VtxChiSqLepChB;
   TBranch        *b_VtxNDofLepChB;
   TBranch        *b_VtxStatLepChB;
   TBranch        *b_VtxNUsedLepChB;
   TBranch        *b_DocaLepChB;
   TBranch        *b_DocaErrLepChB;
   TBranch        *b_VtxXXChB;
   TBranch        *b_VtxYXChB;
   TBranch        *b_VtxZXChB;
   TBranch        *b_VtxCovXXXChB;
   TBranch        *b_VtxCovYYXChB;
   TBranch        *b_VtxCovXYXChB;
   TBranch        *b_VtxCovZZXChB;
   TBranch        *b_VtxCovXZXChB;
   TBranch        *b_VtxCovYZXChB;
   TBranch        *b_VtxChiSqXChB;
   TBranch        *b_VtxNDofXChB;
   TBranch        *b_VtxStatXChB;
   TBranch        *b_VtxNUsedXChB;
   TBranch        *b_VtxPXChB;
   TBranch        *b_VtxPhiXChB;
   TBranch        *b_VtxThetaXChB;
   TBranch        *b_ThrustXChB;
   TBranch        *b_ThrustXPhiChB;
   TBranch        *b_ThrustXThetaChB;
   TBranch        *b_MassPChB;
   TBranch        *b_MassPhiChB;
   TBranch        *b_MassThetaChB;
   TBranch        *b_Cov00ChB;
   TBranch        *b_Cov10ChB;
   TBranch        *b_Cov11ChB;
   TBranch        *b_Cov20ChB;
   TBranch        *b_Cov21ChB;
   TBranch        *b_Cov22ChB;
   TBranch        *b_Cov30ChB;
   TBranch        *b_Cov31ChB;
   TBranch        *b_Cov32ChB;
   TBranch        *b_Cov33ChB;
   TBranch        *b_nDstar;
   TBranch        *b_massDstar;
   TBranch        *b_pDstar;
   TBranch        *b_thDstar;
   TBranch        *b_phiDstar;
   TBranch        *b_errMassDstar;
   TBranch        *b_m0Dstar;
   TBranch        *b_xDstar;
   TBranch        *b_yDstar;
   TBranch        *b_zDstar;
   TBranch        *b_s2xDstar;
   TBranch        *b_s2yDstar;
   TBranch        *b_s2zDstar;
   TBranch        *b_chi2Dstar;
   TBranch        *b_dofDstar;
   TBranch        *b_stDstar;
   TBranch        *b_ndauDstar;
   TBranch        *b_d1DstarIndex;
   TBranch        *b_d1DstarLund;
   TBranch        *b_d2DstarIndex;
   TBranch        *b_d2DstarLund;
   TBranch        *b_nDstarBS;
   TBranch        *b_massDstarBS;
   TBranch        *b_chi2DstarBS;
   TBranch        *b_dofDstarBS;
   TBranch        *b_spixDstarBS;
   TBranch        *b_spiyDstarBS;
   TBranch        *b_spizDstarBS;
   TBranch        *b_nDstar0;
   TBranch        *b_massDstar0;
   TBranch        *b_pDstar0;
   TBranch        *b_thDstar0;
   TBranch        *b_phiDstar0;
   TBranch        *b_errMassDstar0;
   TBranch        *b_m0Dstar0;
   TBranch        *b_xDstar0;
   TBranch        *b_yDstar0;
   TBranch        *b_zDstar0;
   TBranch        *b_s2xDstar0;
   TBranch        *b_s2yDstar0;
   TBranch        *b_s2zDstar0;
   TBranch        *b_chi2Dstar0;
   TBranch        *b_dofDstar0;
   TBranch        *b_stDstar0;
   TBranch        *b_ndauDstar0;
   TBranch        *b_d1Dstar0Index;
   TBranch        *b_d1Dstar0Lund;
   TBranch        *b_d2Dstar0Index;
   TBranch        *b_d2Dstar0Lund;
   TBranch        *b_nD0;
   TBranch        *b_massD0;
   TBranch        *b_pD0;
   TBranch        *b_thD0;
   TBranch        *b_phiD0;
   TBranch        *b_errMassD0;
   TBranch        *b_m0D0;
   TBranch        *b_xD0;
   TBranch        *b_yD0;
   TBranch        *b_zD0;
   TBranch        *b_s2xD0;
   TBranch        *b_s2yD0;
   TBranch        *b_s2zD0;
   TBranch        *b_chi2D0;
   TBranch        *b_dofD0;
   TBranch        *b_stD0;
   TBranch        *b_ndauD0;
   TBranch        *b_d1D0Index;
   TBranch        *b_d1D0Lund;
   TBranch        *b_d2D0Index;
   TBranch        *b_d2D0Lund;
   TBranch        *b_d3D0Index;
   TBranch        *b_d3D0Lund;
   TBranch        *b_d4D0Index;
   TBranch        *b_d4D0Lund;
   TBranch        *b_nChD;
   TBranch        *b_massChD;
   TBranch        *b_pChD;
   TBranch        *b_thChD;
   TBranch        *b_phiChD;
   TBranch        *b_errMassChD;
   TBranch        *b_m0ChD;
   TBranch        *b_xChD;
   TBranch        *b_yChD;
   TBranch        *b_zChD;
   TBranch        *b_s2xChD;
   TBranch        *b_s2yChD;
   TBranch        *b_s2zChD;
   TBranch        *b_chi2ChD;
   TBranch        *b_dofChD;
   TBranch        *b_stChD;
   TBranch        *b_ndauChD;
   TBranch        *b_d1ChDIndex;
   TBranch        *b_d1ChDLund;
   TBranch        *b_d2ChDIndex;
   TBranch        *b_d2ChDLund;
   TBranch        *b_d3ChDIndex;
   TBranch        *b_d3ChDLund;
   TBranch        *b_d4ChDIndex;
   TBranch        *b_d4ChDLund;
   TBranch        *b_nJpsi;
   TBranch        *b_massJpsi;
   TBranch        *b_pJpsi;
   TBranch        *b_thJpsi;
   TBranch        *b_phiJpsi;
   TBranch        *b_errMassJpsi;
   TBranch        *b_m0Jpsi;
   TBranch        *b_xJpsi;
   TBranch        *b_yJpsi;
   TBranch        *b_zJpsi;
   TBranch        *b_s2xJpsi;
   TBranch        *b_s2yJpsi;
   TBranch        *b_s2zJpsi;
   TBranch        *b_chi2Jpsi;
   TBranch        *b_dofJpsi;
   TBranch        *b_stJpsi;
   TBranch        *b_ndauJpsi;
   TBranch        *b_d1JpsiIndex;
   TBranch        *b_d1JpsiLund;
   TBranch        *b_d1JpsiGamIndex;
   TBranch        *b_d1JpsiGamBrIndex;
   TBranch        *b_d1JpsiGamNumBr;
   TBranch        *b_d2JpsiIndex;
   TBranch        *b_d2JpsiLund;
   TBranch        *b_d2JpsiGamIndex;
   TBranch        *b_d2JpsiGamBrIndex;
   TBranch        *b_d2JpsiGamNumBr;
   TBranch        *b_nKs;
   TBranch        *b_massKs;
   TBranch        *b_pKs;
   TBranch        *b_thKs;
   TBranch        *b_phiKs;
   TBranch        *b_errMassKs;
   TBranch        *b_m0Ks;
   TBranch        *b_xKs;
   TBranch        *b_yKs;
   TBranch        *b_zKs;
   TBranch        *b_s2xKs;
   TBranch        *b_s2yKs;
   TBranch        *b_s2zKs;
   TBranch        *b_chi2Ks;
   TBranch        *b_dofKs;
   TBranch        *b_stKs;
   TBranch        *b_ndauKs;
   TBranch        *b_d1KsIndex;
   TBranch        *b_d1KsLund;
   TBranch        *b_d2KsIndex;
   TBranch        *b_d2KsLund;
   TBranch        *b_nPi0;
   TBranch        *b_massPi0;
   TBranch        *b_pPi0;
   TBranch        *b_thPi0;
   TBranch        *b_phiPi0;
   TBranch        *b_errMassPi0;
   TBranch        *b_m0Pi0;
   TBranch        *b_xPi0;
   TBranch        *b_yPi0;
   TBranch        *b_zPi0;
   TBranch        *b_s2xPi0;
   TBranch        *b_s2yPi0;
   TBranch        *b_s2zPi0;
   TBranch        *b_chi2Pi0;
   TBranch        *b_dofPi0;
   TBranch        *b_stPi0;
   TBranch        *b_ndauPi0;
   TBranch        *b_d1Pi0Index;
   TBranch        *b_d1Pi0Lund;
   TBranch        *b_d2Pi0Index;
   TBranch        *b_d2Pi0Lund;
   TBranch        *b_nGConv;
   TBranch        *b_massGConv;
   TBranch        *b_pGConv;
   TBranch        *b_thGConv;
   TBranch        *b_phiGConv;
   TBranch        *b_errMassGConv;
   TBranch        *b_m0GConv;
   TBranch        *b_xGConv;
   TBranch        *b_yGConv;
   TBranch        *b_zGConv;
   TBranch        *b_s2xGConv;
   TBranch        *b_s2yGConv;
   TBranch        *b_s2zGConv;
   TBranch        *b_chi2GConv;
   TBranch        *b_dofGConv;
   TBranch        *b_stGConv;
   TBranch        *b_ndauGConv;
   TBranch        *b_d1GConvIndex;
   TBranch        *b_d1GConvLund;
   TBranch        *b_d2GConvIndex;
   TBranch        *b_d2GConvLund;
   TBranch        *b_nDalitz;
   TBranch        *b_massDalitz;
   TBranch        *b_pDalitz;
   TBranch        *b_thDalitz;
   TBranch        *b_phiDalitz;
   TBranch        *b_errMassDalitz;
   TBranch        *b_m0Dalitz;
   TBranch        *b_xDalitz;
   TBranch        *b_yDalitz;
   TBranch        *b_zDalitz;
   TBranch        *b_s2xDalitz;
   TBranch        *b_s2yDalitz;
   TBranch        *b_s2zDalitz;
   TBranch        *b_chi2Dalitz;
   TBranch        *b_dofDalitz;
   TBranch        *b_stDalitz;
   TBranch        *b_ndauDalitz;
   TBranch        *b_d1DalitzIndex;
   TBranch        *b_d1DalitzLund;
   TBranch        *b_d2DalitzIndex;
   TBranch        *b_d2DalitzLund;
   TBranch        *b_nTrk;
   TBranch        *b_IfrLayTrk;
   TBranch        *b_IfrNsTrk;
   TBranch        *b_IfrInnerTrk;
   TBranch        *b_IfrBarrelTrk;
   TBranch        *b_IfrFWDTrk;
   TBranch        *b_IfrBWDTrk;
   TBranch        *b_IfrMeasIntLenTrk;
   TBranch        *b_IfrFirstHitTrk;
   TBranch        *b_IfrLastHitTrk;
   TBranch        *b_lMomTrk;
   TBranch        *b_ZMom42Trk;
   TBranch        *b_ecalTrk;
   TBranch        *b_ecalXTrk;
   TBranch        *b_ecalYTrk;
   TBranch        *b_ecalZTrk;
   TBranch        *b_nCryTrk;
   TBranch        *b_nBumpTrk;
   TBranch        *b_ZMom20Trk;
   TBranch        *b_secMomTrk;
   TBranch        *b_s1s9Trk;
   TBranch        *b_s9s25Trk;
   TBranch        *b_erawTrk;
   TBranch        *b_phiClusterTrk;
   TBranch        *b_thetaClusterTrk;
   TBranch        *b_covEETrk;
   TBranch        *b_covTTTrk;
   TBranch        *b_covPPTrk;
   TBranch        *b_covRRTrk;
   TBranch        *b_phicMatTrk;
   TBranch        *b_trkcMatTrk;
   TBranch        *b_nPidTrk;
   TBranch        *b_emcStatusTrk;
   TBranch        *b_phiAtEMCTrk;
   TBranch        *b_thetaAtEMCTrk;
   TBranch        *b_isvtTrk;
   TBranch        *b_nsvtTrk;
   TBranch        *b_fhitTrk;
   TBranch        *b_ndchTrk;
   TBranch        *b_lhitTrk;
   TBranch        *b_tLenTrk;
   TBranch        *b_ntdofTrk;
   TBranch        *b_tproTrk;
   TBranch        *b_tChi2Trk;
   TBranch        *b_cPidTrk;
   TBranch        *b_sfRangeTrk;
   TBranch        *b_trkFitStatusTrk;
   TBranch        *b_chargeTrk;
   TBranch        *b_momentumTrk;
   TBranch        *b_ppcov00;
   TBranch        *b_ppcov10;
   TBranch        *b_ppcov11;
   TBranch        *b_ppcov20;
   TBranch        *b_ppcov21;
   TBranch        *b_ppcov22;
   TBranch        *b_xPocaTrk;
   TBranch        *b_yPocaTrk;
   TBranch        *b_zPocaTrk;
   TBranch        *b_thetaTrk;
   TBranch        *b_phiTrk;
   TBranch        *b_muonIdTrk;
   TBranch        *b_elecIdTrk;
   TBranch        *b_kaonIdTrk;
   TBranch        *b_pionIdTrk;
   TBranch        *b_protonIdTrk;
   TBranch        *b_B0RecTrk;
   TBranch        *b_chBRecTrk;
   TBranch        *b_nGam;
   TBranch        *b_IfrLayGam;
   TBranch        *b_IfrNsGam;
   TBranch        *b_IfrInnerGam;
   TBranch        *b_IfrBarrelGam;
   TBranch        *b_IfrFWDGam;
   TBranch        *b_IfrBWDGam;
   TBranch        *b_IfrMeasIntLenGam;
   TBranch        *b_IfrFirstHitGam;
   TBranch        *b_IfrLastHitGam;
   TBranch        *b_IfrExpIntLenGam;
   TBranch        *b_IfrIntLenBeforeIronGam;
   TBranch        *b_IfrTrkMatchGam;
   TBranch        *b_IfrEmcMatchGam;
   TBranch        *b_IfrLastBarrelGam;
   TBranch        *b_IfrCLFitChi2Gam;
   TBranch        *b_IfrStrips0;
   TBranch        *b_IfrStrips1;
   TBranch        *b_IfrStrips2;
   TBranch        *b_IfrStrips3;
   TBranch        *b_IfrStrips4;
   TBranch        *b_IfrStrips5;
   TBranch        *b_IfrStrips6;
   TBranch        *b_IfrStrips7;
   TBranch        *b_IfrStrips8;
   TBranch        *b_IfrStrips9;
   TBranch        *b_IfrStrips10;
   TBranch        *b_IfrStrips11;
   TBranch        *b_IfrStrips12;
   TBranch        *b_IfrStrips13;
   TBranch        *b_IfrStrips14;
   TBranch        *b_IfrStrips15;
   TBranch        *b_IfrStrips16;
   TBranch        *b_IfrStrips17;
   TBranch        *b_IfrStrips18;
   TBranch        *b_IfrStrips19;
   TBranch        *b_lMomGam;
   TBranch        *b_ZMom42Gam;
   TBranch        *b_ecalGam;
   TBranch        *b_ecalXGam;
   TBranch        *b_ecalYGam;
   TBranch        *b_ecalZGam;
   TBranch        *b_nCryGam;
   TBranch        *b_nBumpGam;
   TBranch        *b_ZMom20Gam;
   TBranch        *b_secMomGam;
   TBranch        *b_s1s9Gam;
   TBranch        *b_s9s25Gam;
   TBranch        *b_erawGam;
   TBranch        *b_phiClusterGam;
   TBranch        *b_thetaClusterGam;
   TBranch        *b_covEEGam;
   TBranch        *b_covTTGam;
   TBranch        *b_covPPGam;
   TBranch        *b_covRRGam;
   TBranch        *b_emcStatusGam;
   TBranch        *b_thetaGam;
   TBranch        *b_phiGam;
   TBranch        *b_energyGam;
   TBranch        *b_B0RecGam;
   TBranch        *b_chBRecGam;

   recoilStudy(TString,TString);
   ~recoilStudy();
   Int_t  Cut(Int_t entry);
   Int_t  GetEntry(Int_t entry);
   Int_t  LoadTree(Int_t entry);
   void   Init(TTree *tree);
   void   Loop();
   void   readintpur();
   void   findbestB();
   void   bookHist();
   Bool_t Notify();
   void   Show(Int_t entry = -1);
   void mk4Vector(TLorentzVector &p4, const Float_t p, const Float_t t, const Float_t f, const Float_t m); 
};

#endif

#ifdef recoilStudy_cxx
/* recoilStudy::recoilStudy(TTree *tree) */
/* { */
/* // if parameter tree is not specified (or zero), connect the file */
/* // used to generate this class and read the Tree. */
/*    if (tree == 0) { */
/*       TFile *f = (TFile*)gROOT->GetListOfFiles()->FindObject("/nfs/farm/babar/AWG7/ISL/sx-071802/data/2002/output/outputdir/newAlleEvents_2002_on-1071_split1.root"); */
/*       if (!f) { */
/*          f = new TFile("/nfs/farm/babar/AWG7/ISL/sx-071802/data/2002/output/outputdir/newAlleEvents_2002_on-1071_split1.root"); */
/*       } */
/*       tree = (TTree*)gDirectory->Get("h1"); */

/*    } */
/*    Init(tree); */
/* } */
recoilStudy::recoilStudy(TString thechain, TString dir)
{
// if parameter tree is not specified (or zero), connect the file
// used to generate this class and read the Tree.
  TChain *tree = new TChain("h1");
  TString meta = thechain;
  thename = new TString(thechain); 
  thedir = new TString(dir);
  ifstream is(meta);
  while(meta.ReadLine(is) && (!meta.IsNull())){ 
    cout << meta << endl; 
    tree->Add(meta); 
  }
  
  int fl = thechain.Last('/');
  TString bla(thechain);
  bla.Replace(0, fl+1, ' '); bla.Strip(TString::kLeading, ' ');  bla.Remove(0,1);  
  histfile =  bla + ".root";
    
  if (tree == 0) {
      TFile *f = (TFile*)gROOT->GetListOfFiles()->FindObject("/nfs/farm/babar/AWG7/ISL/sx-071802/data/2002/output/outputdir/newAlleEvents_2002_on-1071_split1.root");
      if (!f) {
         f = new TFile("/nfs/farm/babar/AWG7/ISL/sx-071802/data/2002/output/outputdir/newAlleEvents_2002_on-1071_split1.root");
      }
      tree = (TTree*)gDirectory->Get("h1");

   }
   Init(tree);
}

recoilStudy::~recoilStudy()
{
   if (!fChain) return;
   delete fChain->GetCurrentFile();
}

Int_t recoilStudy::GetEntry(Int_t entry)
{
// Read contents of entry.
   if (!fChain) return 0;
   return fChain->GetEntry(entry);
}
Int_t recoilStudy::LoadTree(Int_t entry)
{
// Set the environment to read one entry
   if (!fChain) return -5;
   Int_t centry = fChain->LoadTree(entry);
   if (centry < 0) return centry;
   if (fChain->IsA() != TChain::Class()) return centry;
   TChain *chain = (TChain*)fChain;
   if (chain->GetTreeNumber() != fCurrent) {
      fCurrent = chain->GetTreeNumber();
      Notify();
   }
   return centry;
}

void recoilStudy::Init(TTree *tree)
{
//   Set branch addresses
   if (tree == 0) return;
   fChain    = tree;
   fCurrent = -1;
   fChain->SetMakeClass(1);

   fChain->SetBranchAddress("event",&event);
   fChain->SetBranchAddress("runNumber",&runNumber);
   fChain->SetBranchAddress("platform",&platform);
   fChain->SetBranchAddress("partition",&partition);
   fChain->SetBranchAddress("upperID",&upperID);
   fChain->SetBranchAddress("lowerID",&lowerID);
   fChain->SetBranchAddress("primVtxX",&primVtxX);
   fChain->SetBranchAddress("primVtxY",&primVtxY);
   fChain->SetBranchAddress("primVtxZ",&primVtxZ);
   fChain->SetBranchAddress("primVtxCovXX",&primVtxCovXX);
   fChain->SetBranchAddress("primVtxCovYY",&primVtxCovYY);
   fChain->SetBranchAddress("primVtxCovZZ",&primVtxCovZZ);
   fChain->SetBranchAddress("primVtxCovXY",&primVtxCovXY);
   fChain->SetBranchAddress("primVtxCovYZ",&primVtxCovYZ);
   fChain->SetBranchAddress("primVtxCovXZ",&primVtxCovXZ);
   fChain->SetBranchAddress("primVtxChi2",&primVtxChi2);
   fChain->SetBranchAddress("primVtxNdof",&primVtxNdof);
   fChain->SetBranchAddress("BCountFilter",&BCountFilter);
   fChain->SetBranchAddress("DchTrig",&DchTrig);
   fChain->SetBranchAddress("EmcTrig",&EmcTrig);
   fChain->SetBranchAddress("R2All",&R2All);
   fChain->SetBranchAddress("nGTLFid",&nGTLFid);
   fChain->SetBranchAddress("nChgFid",&nChgFid);
   fChain->SetBranchAddress("eTotFid",&eTotFid);
   fChain->SetBranchAddress("PrimVtxdr",&PrimVtxdr);
   fChain->SetBranchAddress("PrimVtxdz",&PrimVtxdz);
   fChain->SetBranchAddress("VtxProb",&VtxProb);
   fChain->SetBranchAddress("beamSX",&beamSX);
   fChain->SetBranchAddress("beamSY",&beamSY);
   fChain->SetBranchAddress("beamSZ",&beamSZ);
   fChain->SetBranchAddress("beamSCovXX",&beamSCovXX);
   fChain->SetBranchAddress("beamSCovYY",&beamSCovYY);
   fChain->SetBranchAddress("beamSCovZZ",&beamSCovZZ);
   fChain->SetBranchAddress("beamSCovXZ",&beamSCovXZ);
   fChain->SetBranchAddress("pxUps",&pxUps);
   fChain->SetBranchAddress("pyUps",&pyUps);
   fChain->SetBranchAddress("pzUps",&pzUps);
   fChain->SetBranchAddress("eUps",&eUps);
   fChain->SetBranchAddress("nTrkTot",&nTrkTot);
   fChain->SetBranchAddress("W2",&W2);
   fChain->SetBranchAddress("FoxWol2",&FoxWol2);
   fChain->SetBranchAddress("FoxWol2Neu",&FoxWol2Neu);
   fChain->SetBranchAddress("thrust",&thrust);
   fChain->SetBranchAddress("thrustNeu",&thrustNeu);
   fChain->SetBranchAddress("nB0",&nB0);
   fChain->SetBranchAddress("massB0",massB0);
   fChain->SetBranchAddress("pB0",pB0);
   fChain->SetBranchAddress("thB0",thB0);
   fChain->SetBranchAddress("phiB0",phiB0);
   fChain->SetBranchAddress("errMassB0",errMassB0);
   fChain->SetBranchAddress("m0B0",m0B0);
   fChain->SetBranchAddress("xB0",xB0);
   fChain->SetBranchAddress("yB0",yB0);
   fChain->SetBranchAddress("zB0",zB0);
   fChain->SetBranchAddress("s2xB0",s2xB0);
   fChain->SetBranchAddress("s2yB0",s2yB0);
   fChain->SetBranchAddress("s2zB0",s2zB0);
   fChain->SetBranchAddress("chi2B0",chi2B0);
   fChain->SetBranchAddress("dofB0",dofB0);
   fChain->SetBranchAddress("stB0",stB0);
   fChain->SetBranchAddress("ndauB0",ndauB0);
   fChain->SetBranchAddress("mseB0",mseB0);
   fChain->SetBranchAddress("mHatB0",mHatB0);
   fChain->SetBranchAddress("deltaeB0",deltaeB0);
   fChain->SetBranchAddress("ThruB0",ThruB0);
   fChain->SetBranchAddress("thThruB0",thThruB0);
   fChain->SetBranchAddress("phiThruB0",phiThruB0);
   fChain->SetBranchAddress("cosTBB0",cosTBB0);
   fChain->SetBranchAddress("d1B0Index",d1B0Index);
   fChain->SetBranchAddress("d1B0Lund",d1B0Lund);
   fChain->SetBranchAddress("d2B0Index",d2B0Index);
   fChain->SetBranchAddress("d2B0Lund",d2B0Lund);
   fChain->SetBranchAddress("d3B0Index",d3B0Index);
   fChain->SetBranchAddress("d3B0Lund",d3B0Lund);
   fChain->SetBranchAddress("d4B0Index",d4B0Index);
   fChain->SetBranchAddress("d4B0Lund",d4B0Lund);
   fChain->SetBranchAddress("d5B0Index",d5B0Index);
   fChain->SetBranchAddress("d5B0Lund",d5B0Lund);
   fChain->SetBranchAddress("d6B0Index",d6B0Index);
   fChain->SetBranchAddress("d6B0Lund",d6B0Lund);
   fChain->SetBranchAddress("d7B0Index",d7B0Index);
   fChain->SetBranchAddress("d7B0Lund",d7B0Lund);
   fChain->SetBranchAddress("modeB0",modeB0);
   fChain->SetBranchAddress("purB0",purB0);
   fChain->SetBranchAddress("intpurB0",intpurB0);
   fChain->SetBranchAddress("VtxXLepB0",VtxXLepB0);
   fChain->SetBranchAddress("VtxYLepB0",VtxYLepB0);
   fChain->SetBranchAddress("VtxZLepB0",VtxZLepB0);
   fChain->SetBranchAddress("VtxCovXXLepB0",VtxCovXXLepB0);
   fChain->SetBranchAddress("VtxCovYYLepB0",VtxCovYYLepB0);
   fChain->SetBranchAddress("VtxCovXYLepB0",VtxCovXYLepB0);
   fChain->SetBranchAddress("VtxCovZZLepB0",VtxCovZZLepB0);
   fChain->SetBranchAddress("VtxCovXZLepB0",VtxCovXZLepB0);
   fChain->SetBranchAddress("VtxCovYZLepB0",VtxCovYZLepB0);
   fChain->SetBranchAddress("VtxChiSqLepB0",VtxChiSqLepB0);
   fChain->SetBranchAddress("VtxNDofLepB0",VtxNDofLepB0);
   fChain->SetBranchAddress("VtxStatLepB0",VtxStatLepB0);
   fChain->SetBranchAddress("VtxNUsedLepB0",VtxNUsedLepB0);
   fChain->SetBranchAddress("DocaLepB0",DocaLepB0);
   fChain->SetBranchAddress("DocaErrLepB0",DocaErrLepB0);
   fChain->SetBranchAddress("VtxXXB0",VtxXXB0);
   fChain->SetBranchAddress("VtxYXB0",VtxYXB0);
   fChain->SetBranchAddress("VtxZXB0",VtxZXB0);
   fChain->SetBranchAddress("VtxCovXXXB0",VtxCovXXXB0);
   fChain->SetBranchAddress("VtxCovYYXB0",VtxCovYYXB0);
   fChain->SetBranchAddress("VtxCovXYXB0",VtxCovXYXB0);
   fChain->SetBranchAddress("VtxCovZZXB0",VtxCovZZXB0);
   fChain->SetBranchAddress("VtxCovXZXB0",VtxCovXZXB0);
   fChain->SetBranchAddress("VtxCovYZXB0",VtxCovYZXB0);
   fChain->SetBranchAddress("VtxChiSqXB0",VtxChiSqXB0);
   fChain->SetBranchAddress("VtxNDofXB0",VtxNDofXB0);
   fChain->SetBranchAddress("VtxStatXB0",VtxStatXB0);
   fChain->SetBranchAddress("VtxNUsedXB0",VtxNUsedXB0);
   fChain->SetBranchAddress("VtxPXB0",VtxPXB0);
   fChain->SetBranchAddress("VtxPhiXB0",VtxPhiXB0);
   fChain->SetBranchAddress("VtxThetaXB0",VtxThetaXB0);
   fChain->SetBranchAddress("ThrustXB0",ThrustXB0);
   fChain->SetBranchAddress("ThrustXPhiB0",ThrustXPhiB0);
   fChain->SetBranchAddress("ThrustXThetaB0",ThrustXThetaB0);
   fChain->SetBranchAddress("MassPB0",MassPB0);
   fChain->SetBranchAddress("MassPhiB0",MassPhiB0);
   fChain->SetBranchAddress("MassThetaB0",MassThetaB0);
   fChain->SetBranchAddress("Cov00B0",Cov00B0);
   fChain->SetBranchAddress("Cov10B0",Cov10B0);
   fChain->SetBranchAddress("Cov11B0",Cov11B0);
   fChain->SetBranchAddress("Cov20B0",Cov20B0);
   fChain->SetBranchAddress("Cov21B0",Cov21B0);
   fChain->SetBranchAddress("Cov22B0",Cov22B0);
   fChain->SetBranchAddress("Cov30B0",Cov30B0);
   fChain->SetBranchAddress("Cov31B0",Cov31B0);
   fChain->SetBranchAddress("Cov32B0",Cov32B0);
   fChain->SetBranchAddress("Cov33B0",Cov33B0);
   fChain->SetBranchAddress("nChB",&nChB);
   fChain->SetBranchAddress("massChB",massChB);
   fChain->SetBranchAddress("pChB",pChB);
   fChain->SetBranchAddress("thChB",thChB);
   fChain->SetBranchAddress("phiChB",phiChB);
   fChain->SetBranchAddress("errMassChB",errMassChB);
   fChain->SetBranchAddress("m0ChB",m0ChB);
   fChain->SetBranchAddress("xChB",xChB);
   fChain->SetBranchAddress("yChB",yChB);
   fChain->SetBranchAddress("zChB",zChB);
   fChain->SetBranchAddress("s2xChB",s2xChB);
   fChain->SetBranchAddress("s2yChB",s2yChB);
   fChain->SetBranchAddress("s2zChB",s2zChB);
   fChain->SetBranchAddress("chi2ChB",chi2ChB);
   fChain->SetBranchAddress("dofChB",dofChB);
   fChain->SetBranchAddress("stChB",stChB);
   fChain->SetBranchAddress("ndauChB",ndauChB);
   fChain->SetBranchAddress("mseChB",mseChB);
   fChain->SetBranchAddress("mHatChB",mHatChB);
   fChain->SetBranchAddress("deltaeChB",deltaeChB);
   fChain->SetBranchAddress("ThruChB",ThruChB);
   fChain->SetBranchAddress("thThruChB",thThruChB);
   fChain->SetBranchAddress("phiThruChB",phiThruChB);
   fChain->SetBranchAddress("cosTBChB",cosTBChB);
   fChain->SetBranchAddress("d1ChBIndex",d1ChBIndex);
   fChain->SetBranchAddress("d1ChBLund",d1ChBLund);
   fChain->SetBranchAddress("d2ChBIndex",d2ChBIndex);
   fChain->SetBranchAddress("d2ChBLund",d2ChBLund);
   fChain->SetBranchAddress("d3ChBIndex",d3ChBIndex);
   fChain->SetBranchAddress("d3ChBLund",d3ChBLund);
   fChain->SetBranchAddress("d4ChBIndex",d4ChBIndex);
   fChain->SetBranchAddress("d4ChBLund",d4ChBLund);
   fChain->SetBranchAddress("d5ChBIndex",d5ChBIndex);
   fChain->SetBranchAddress("d5ChBLund",d5ChBLund);
   fChain->SetBranchAddress("d6ChBIndex",d6ChBIndex);
   fChain->SetBranchAddress("d6ChBLund",d6ChBLund);
   fChain->SetBranchAddress("d7ChBIndex",d7ChBIndex);
   fChain->SetBranchAddress("d7ChBLund",d7ChBLund);
   fChain->SetBranchAddress("modeChB",modeChB);
   fChain->SetBranchAddress("purChB",purChB);
   fChain->SetBranchAddress("intpurChB",intpurChB);
   fChain->SetBranchAddress("VtxXLepChB",VtxXLepChB);
   fChain->SetBranchAddress("VtxYLepChB",VtxYLepChB);
   fChain->SetBranchAddress("VtxZLepChB",VtxZLepChB);
   fChain->SetBranchAddress("VtxCovXXLepChB",VtxCovXXLepChB);
   fChain->SetBranchAddress("VtxCovYYLepChB",VtxCovYYLepChB);
   fChain->SetBranchAddress("VtxCovXYLepChB",VtxCovXYLepChB);
   fChain->SetBranchAddress("VtxCovZZLepChB",VtxCovZZLepChB);
   fChain->SetBranchAddress("VtxCovXZLepChB",VtxCovXZLepChB);
   fChain->SetBranchAddress("VtxCovYZLepChB",VtxCovYZLepChB);
   fChain->SetBranchAddress("VtxChiSqLepChB",VtxChiSqLepChB);
   fChain->SetBranchAddress("VtxNDofLepChB",VtxNDofLepChB);
   fChain->SetBranchAddress("VtxStatLepChB",VtxStatLepChB);
   fChain->SetBranchAddress("VtxNUsedLepChB",VtxNUsedLepChB);
   fChain->SetBranchAddress("DocaLepChB",DocaLepChB);
   fChain->SetBranchAddress("DocaErrLepChB",DocaErrLepChB);
   fChain->SetBranchAddress("VtxXXChB",VtxXXChB);
   fChain->SetBranchAddress("VtxYXChB",VtxYXChB);
   fChain->SetBranchAddress("VtxZXChB",VtxZXChB);
   fChain->SetBranchAddress("VtxCovXXXChB",VtxCovXXXChB);
   fChain->SetBranchAddress("VtxCovYYXChB",VtxCovYYXChB);
   fChain->SetBranchAddress("VtxCovXYXChB",VtxCovXYXChB);
   fChain->SetBranchAddress("VtxCovZZXChB",VtxCovZZXChB);
   fChain->SetBranchAddress("VtxCovXZXChB",VtxCovXZXChB);
   fChain->SetBranchAddress("VtxCovYZXChB",VtxCovYZXChB);
   fChain->SetBranchAddress("VtxChiSqXChB",VtxChiSqXChB);
   fChain->SetBranchAddress("VtxNDofXChB",VtxNDofXChB);
   fChain->SetBranchAddress("VtxStatXChB",VtxStatXChB);
   fChain->SetBranchAddress("VtxNUsedXChB",VtxNUsedXChB);
   fChain->SetBranchAddress("VtxPXChB",VtxPXChB);
   fChain->SetBranchAddress("VtxPhiXChB",VtxPhiXChB);
   fChain->SetBranchAddress("VtxThetaXChB",VtxThetaXChB);
   fChain->SetBranchAddress("ThrustXChB",ThrustXChB);
   fChain->SetBranchAddress("ThrustXPhiChB",ThrustXPhiChB);
   fChain->SetBranchAddress("ThrustXThetaChB",ThrustXThetaChB);
   fChain->SetBranchAddress("MassPChB",MassPChB);
   fChain->SetBranchAddress("MassPhiChB",MassPhiChB);
   fChain->SetBranchAddress("MassThetaChB",MassThetaChB);
   fChain->SetBranchAddress("Cov00ChB",Cov00ChB);
   fChain->SetBranchAddress("Cov10ChB",Cov10ChB);
   fChain->SetBranchAddress("Cov11ChB",Cov11ChB);
   fChain->SetBranchAddress("Cov20ChB",Cov20ChB);
   fChain->SetBranchAddress("Cov21ChB",Cov21ChB);
   fChain->SetBranchAddress("Cov22ChB",Cov22ChB);
   fChain->SetBranchAddress("Cov30ChB",Cov30ChB);
   fChain->SetBranchAddress("Cov31ChB",Cov31ChB);
   fChain->SetBranchAddress("Cov32ChB",Cov32ChB);
   fChain->SetBranchAddress("Cov33ChB",Cov33ChB);
   fChain->SetBranchAddress("nDstar",&nDstar);
   fChain->SetBranchAddress("massDstar",massDstar);
   fChain->SetBranchAddress("pDstar",pDstar);
   fChain->SetBranchAddress("thDstar",thDstar);
   fChain->SetBranchAddress("phiDstar",phiDstar);
   fChain->SetBranchAddress("errMassDstar",errMassDstar);
   fChain->SetBranchAddress("m0Dstar",m0Dstar);
   fChain->SetBranchAddress("xDstar",xDstar);
   fChain->SetBranchAddress("yDstar",yDstar);
   fChain->SetBranchAddress("zDstar",zDstar);
   fChain->SetBranchAddress("s2xDstar",s2xDstar);
   fChain->SetBranchAddress("s2yDstar",s2yDstar);
   fChain->SetBranchAddress("s2zDstar",s2zDstar);
   fChain->SetBranchAddress("chi2Dstar",chi2Dstar);
   fChain->SetBranchAddress("dofDstar",dofDstar);
   fChain->SetBranchAddress("stDstar",stDstar);
   fChain->SetBranchAddress("ndauDstar",ndauDstar);
   fChain->SetBranchAddress("d1DstarIndex",d1DstarIndex);
   fChain->SetBranchAddress("d1DstarLund",d1DstarLund);
   fChain->SetBranchAddress("d2DstarIndex",d2DstarIndex);
   fChain->SetBranchAddress("d2DstarLund",d2DstarLund);
   fChain->SetBranchAddress("nDstarBS",&nDstarBS);
   fChain->SetBranchAddress("massDstarBS",massDstarBS);
   fChain->SetBranchAddress("chi2DstarBS",chi2DstarBS);
   fChain->SetBranchAddress("dofDstarBS",dofDstarBS);
   fChain->SetBranchAddress("spixDstarBS",spixDstarBS);
   fChain->SetBranchAddress("spiyDstarBS",spiyDstarBS);
   fChain->SetBranchAddress("spizDstarBS",spizDstarBS);
   fChain->SetBranchAddress("nDstar0",&nDstar0);
   fChain->SetBranchAddress("massDstar0",massDstar0);
   fChain->SetBranchAddress("pDstar0",pDstar0);
   fChain->SetBranchAddress("thDstar0",thDstar0);
   fChain->SetBranchAddress("phiDstar0",phiDstar0);
   fChain->SetBranchAddress("errMassDstar0",errMassDstar0);
   fChain->SetBranchAddress("m0Dstar0",m0Dstar0);
   fChain->SetBranchAddress("xDstar0",xDstar0);
   fChain->SetBranchAddress("yDstar0",yDstar0);
   fChain->SetBranchAddress("zDstar0",zDstar0);
   fChain->SetBranchAddress("s2xDstar0",s2xDstar0);
   fChain->SetBranchAddress("s2yDstar0",s2yDstar0);
   fChain->SetBranchAddress("s2zDstar0",s2zDstar0);
   fChain->SetBranchAddress("chi2Dstar0",chi2Dstar0);
   fChain->SetBranchAddress("dofDstar0",dofDstar0);
   fChain->SetBranchAddress("stDstar0",stDstar0);
   fChain->SetBranchAddress("ndauDstar0",ndauDstar0);
   fChain->SetBranchAddress("d1Dstar0Index",d1Dstar0Index);
   fChain->SetBranchAddress("d1Dstar0Lund",d1Dstar0Lund);
   fChain->SetBranchAddress("d2Dstar0Index",d2Dstar0Index);
   fChain->SetBranchAddress("d2Dstar0Lund",d2Dstar0Lund);
   fChain->SetBranchAddress("nD0",&nD0);
   fChain->SetBranchAddress("massD0",massD0);
   fChain->SetBranchAddress("pD0",pD0);
   fChain->SetBranchAddress("thD0",thD0);
   fChain->SetBranchAddress("phiD0",phiD0);
   fChain->SetBranchAddress("errMassD0",errMassD0);
   fChain->SetBranchAddress("m0D0",m0D0);
   fChain->SetBranchAddress("xD0",xD0);
   fChain->SetBranchAddress("yD0",yD0);
   fChain->SetBranchAddress("zD0",zD0);
   fChain->SetBranchAddress("s2xD0",s2xD0);
   fChain->SetBranchAddress("s2yD0",s2yD0);
   fChain->SetBranchAddress("s2zD0",s2zD0);
   fChain->SetBranchAddress("chi2D0",chi2D0);
   fChain->SetBranchAddress("dofD0",dofD0);
   fChain->SetBranchAddress("stD0",stD0);
   fChain->SetBranchAddress("ndauD0",ndauD0);
   fChain->SetBranchAddress("d1D0Index",d1D0Index);
   fChain->SetBranchAddress("d1D0Lund",d1D0Lund);
   fChain->SetBranchAddress("d2D0Index",d2D0Index);
   fChain->SetBranchAddress("d2D0Lund",d2D0Lund);
   fChain->SetBranchAddress("d3D0Index",d3D0Index);
   fChain->SetBranchAddress("d3D0Lund",d3D0Lund);
   fChain->SetBranchAddress("d4D0Index",d4D0Index);
   fChain->SetBranchAddress("d4D0Lund",d4D0Lund);
   fChain->SetBranchAddress("nChD",&nChD);
   fChain->SetBranchAddress("massChD",massChD);
   fChain->SetBranchAddress("pChD",pChD);
   fChain->SetBranchAddress("thChD",thChD);
   fChain->SetBranchAddress("phiChD",phiChD);
   fChain->SetBranchAddress("errMassChD",errMassChD);
   fChain->SetBranchAddress("m0ChD",m0ChD);
   fChain->SetBranchAddress("xChD",xChD);
   fChain->SetBranchAddress("yChD",yChD);
   fChain->SetBranchAddress("zChD",zChD);
   fChain->SetBranchAddress("s2xChD",s2xChD);
   fChain->SetBranchAddress("s2yChD",s2yChD);
   fChain->SetBranchAddress("s2zChD",s2zChD);
   fChain->SetBranchAddress("chi2ChD",chi2ChD);
   fChain->SetBranchAddress("dofChD",dofChD);
   fChain->SetBranchAddress("stChD",stChD);
   fChain->SetBranchAddress("ndauChD",ndauChD);
   fChain->SetBranchAddress("d1ChDIndex",d1ChDIndex);
   fChain->SetBranchAddress("d1ChDLund",d1ChDLund);
   fChain->SetBranchAddress("d2ChDIndex",d2ChDIndex);
   fChain->SetBranchAddress("d2ChDLund",d2ChDLund);
   fChain->SetBranchAddress("d3ChDIndex",d3ChDIndex);
   fChain->SetBranchAddress("d3ChDLund",d3ChDLund);
   fChain->SetBranchAddress("d4ChDIndex",d4ChDIndex);
   fChain->SetBranchAddress("d4ChDLund",d4ChDLund);
   fChain->SetBranchAddress("nJpsi",&nJpsi);
   fChain->SetBranchAddress("massJpsi",massJpsi);
   fChain->SetBranchAddress("pJpsi",pJpsi);
   fChain->SetBranchAddress("thJpsi",thJpsi);
   fChain->SetBranchAddress("phiJpsi",phiJpsi);
   fChain->SetBranchAddress("errMassJpsi",errMassJpsi);
   fChain->SetBranchAddress("m0Jpsi",m0Jpsi);
   fChain->SetBranchAddress("xJpsi",xJpsi);
   fChain->SetBranchAddress("yJpsi",yJpsi);
   fChain->SetBranchAddress("zJpsi",zJpsi);
   fChain->SetBranchAddress("s2xJpsi",s2xJpsi);
   fChain->SetBranchAddress("s2yJpsi",s2yJpsi);
   fChain->SetBranchAddress("s2zJpsi",s2zJpsi);
   fChain->SetBranchAddress("chi2Jpsi",chi2Jpsi);
   fChain->SetBranchAddress("dofJpsi",dofJpsi);
   fChain->SetBranchAddress("stJpsi",stJpsi);
   fChain->SetBranchAddress("ndauJpsi",ndauJpsi);
   fChain->SetBranchAddress("d1JpsiIndex",d1JpsiIndex);
   fChain->SetBranchAddress("d1JpsiLund",d1JpsiLund);
   fChain->SetBranchAddress("d1JpsiGamIndex",d1JpsiGamIndex);
   fChain->SetBranchAddress("d1JpsiGamBrIndex",d1JpsiGamBrIndex);
   fChain->SetBranchAddress("d1JpsiGamNumBr",d1JpsiGamNumBr);
   fChain->SetBranchAddress("d2JpsiIndex",d2JpsiIndex);
   fChain->SetBranchAddress("d2JpsiLund",d2JpsiLund);
   fChain->SetBranchAddress("d2JpsiGamIndex",d2JpsiGamIndex);
   fChain->SetBranchAddress("d2JpsiGamBrIndex",d2JpsiGamBrIndex);
   fChain->SetBranchAddress("d2JpsiGamNumBr",d2JpsiGamNumBr);
   fChain->SetBranchAddress("nKs",&nKs);
   fChain->SetBranchAddress("massKs",massKs);
   fChain->SetBranchAddress("pKs",pKs);
   fChain->SetBranchAddress("thKs",thKs);
   fChain->SetBranchAddress("phiKs",phiKs);
   fChain->SetBranchAddress("errMassKs",errMassKs);
   fChain->SetBranchAddress("m0Ks",m0Ks);
   fChain->SetBranchAddress("xKs",xKs);
   fChain->SetBranchAddress("yKs",yKs);
   fChain->SetBranchAddress("zKs",zKs);
   fChain->SetBranchAddress("s2xKs",s2xKs);
   fChain->SetBranchAddress("s2yKs",s2yKs);
   fChain->SetBranchAddress("s2zKs",s2zKs);
   fChain->SetBranchAddress("chi2Ks",chi2Ks);
   fChain->SetBranchAddress("dofKs",dofKs);
   fChain->SetBranchAddress("stKs",stKs);
   fChain->SetBranchAddress("ndauKs",ndauKs);
   fChain->SetBranchAddress("d1KsIndex",d1KsIndex);
   fChain->SetBranchAddress("d1KsLund",d1KsLund);
   fChain->SetBranchAddress("d2KsIndex",d2KsIndex);
   fChain->SetBranchAddress("d2KsLund",d2KsLund);
   fChain->SetBranchAddress("nPi0",&nPi0);
   fChain->SetBranchAddress("massPi0",massPi0);
   fChain->SetBranchAddress("pPi0",pPi0);
   fChain->SetBranchAddress("thPi0",thPi0);
   fChain->SetBranchAddress("phiPi0",phiPi0);
   fChain->SetBranchAddress("errMassPi0",errMassPi0);
   fChain->SetBranchAddress("m0Pi0",m0Pi0);
   fChain->SetBranchAddress("xPi0",xPi0);
   fChain->SetBranchAddress("yPi0",yPi0);
   fChain->SetBranchAddress("zPi0",zPi0);
   fChain->SetBranchAddress("s2xPi0",s2xPi0);
   fChain->SetBranchAddress("s2yPi0",s2yPi0);
   fChain->SetBranchAddress("s2zPi0",s2zPi0);
   fChain->SetBranchAddress("chi2Pi0",chi2Pi0);
   fChain->SetBranchAddress("dofPi0",dofPi0);
   fChain->SetBranchAddress("stPi0",stPi0);
   fChain->SetBranchAddress("ndauPi0",ndauPi0);
   fChain->SetBranchAddress("d1Pi0Index",d1Pi0Index);
   fChain->SetBranchAddress("d1Pi0Lund",d1Pi0Lund);
   fChain->SetBranchAddress("d2Pi0Index",d2Pi0Index);
   fChain->SetBranchAddress("d2Pi0Lund",d2Pi0Lund);
   fChain->SetBranchAddress("nGConv",&nGConv);
   fChain->SetBranchAddress("massGConv",massGConv);
   fChain->SetBranchAddress("pGConv",pGConv);
   fChain->SetBranchAddress("thGConv",thGConv);
   fChain->SetBranchAddress("phiGConv",phiGConv);
   fChain->SetBranchAddress("errMassGConv",errMassGConv);
   fChain->SetBranchAddress("m0GConv",m0GConv);
   fChain->SetBranchAddress("xGConv",xGConv);
   fChain->SetBranchAddress("yGConv",yGConv);
   fChain->SetBranchAddress("zGConv",zGConv);
   fChain->SetBranchAddress("s2xGConv",s2xGConv);
   fChain->SetBranchAddress("s2yGConv",s2yGConv);
   fChain->SetBranchAddress("s2zGConv",s2zGConv);
   fChain->SetBranchAddress("chi2GConv",chi2GConv);
   fChain->SetBranchAddress("dofGConv",dofGConv);
   fChain->SetBranchAddress("stGConv",stGConv);
   fChain->SetBranchAddress("ndauGConv",ndauGConv);
   fChain->SetBranchAddress("d1GConvIndex",d1GConvIndex);
   fChain->SetBranchAddress("d1GConvLund",d1GConvLund);
   fChain->SetBranchAddress("d2GConvIndex",d2GConvIndex);
   fChain->SetBranchAddress("d2GConvLund",d2GConvLund);
   fChain->SetBranchAddress("nDalitz",&nDalitz);
   fChain->SetBranchAddress("massDalitz",massDalitz);
   fChain->SetBranchAddress("pDalitz",pDalitz);
   fChain->SetBranchAddress("thDalitz",thDalitz);
   fChain->SetBranchAddress("phiDalitz",phiDalitz);
   fChain->SetBranchAddress("errMassDalitz",errMassDalitz);
   fChain->SetBranchAddress("m0Dalitz",m0Dalitz);
   fChain->SetBranchAddress("xDalitz",xDalitz);
   fChain->SetBranchAddress("yDalitz",yDalitz);
   fChain->SetBranchAddress("zDalitz",zDalitz);
   fChain->SetBranchAddress("s2xDalitz",s2xDalitz);
   fChain->SetBranchAddress("s2yDalitz",s2yDalitz);
   fChain->SetBranchAddress("s2zDalitz",s2zDalitz);
   fChain->SetBranchAddress("chi2Dalitz",chi2Dalitz);
   fChain->SetBranchAddress("dofDalitz",dofDalitz);
   fChain->SetBranchAddress("stDalitz",stDalitz);
   fChain->SetBranchAddress("ndauDalitz",ndauDalitz);
   fChain->SetBranchAddress("d1DalitzIndex",d1DalitzIndex);
   fChain->SetBranchAddress("d1DalitzLund",d1DalitzLund);
   fChain->SetBranchAddress("d2DalitzIndex",d2DalitzIndex);
   fChain->SetBranchAddress("d2DalitzLund",d2DalitzLund);
   fChain->SetBranchAddress("nTrk",&nTrk);
   fChain->SetBranchAddress("IfrLayTrk",IfrLayTrk);
   fChain->SetBranchAddress("IfrNsTrk",IfrNsTrk);
   fChain->SetBranchAddress("IfrInnerTrk",IfrInnerTrk);
   fChain->SetBranchAddress("IfrBarrelTrk",IfrBarrelTrk);
   fChain->SetBranchAddress("IfrFWDTrk",IfrFWDTrk);
   fChain->SetBranchAddress("IfrBWDTrk",IfrBWDTrk);
   fChain->SetBranchAddress("IfrMeasIntLenTrk",IfrMeasIntLenTrk);
   fChain->SetBranchAddress("IfrFirstHitTrk",IfrFirstHitTrk);
   fChain->SetBranchAddress("IfrLastHitTrk",IfrLastHitTrk);
   fChain->SetBranchAddress("lMomTrk",lMomTrk);
   fChain->SetBranchAddress("ZMom42Trk",ZMom42Trk);
   fChain->SetBranchAddress("ecalTrk",ecalTrk);
   fChain->SetBranchAddress("ecalXTrk",ecalXTrk);
   fChain->SetBranchAddress("ecalYTrk",ecalYTrk);
   fChain->SetBranchAddress("ecalZTrk",ecalZTrk);
   fChain->SetBranchAddress("nCryTrk",nCryTrk);
   fChain->SetBranchAddress("nBumpTrk",nBumpTrk);
   fChain->SetBranchAddress("ZMom20Trk",ZMom20Trk);
   fChain->SetBranchAddress("secMomTrk",secMomTrk);
   fChain->SetBranchAddress("s1s9Trk",s1s9Trk);
   fChain->SetBranchAddress("s9s25Trk",s9s25Trk);
   fChain->SetBranchAddress("erawTrk",erawTrk);
   fChain->SetBranchAddress("phiClusterTrk",phiClusterTrk);
   fChain->SetBranchAddress("thetaClusterTrk",thetaClusterTrk);
   fChain->SetBranchAddress("covEETrk",covEETrk);
   fChain->SetBranchAddress("covTTTrk",covTTTrk);
   fChain->SetBranchAddress("covPPTrk",covPPTrk);
   fChain->SetBranchAddress("covRRTrk",covRRTrk);
   fChain->SetBranchAddress("phicMatTrk",phicMatTrk);
   fChain->SetBranchAddress("trkcMatTrk",trkcMatTrk);
   fChain->SetBranchAddress("nPidTrk",nPidTrk);
   fChain->SetBranchAddress("emcStatusTrk",emcStatusTrk);
   fChain->SetBranchAddress("phiAtEMCTrk",phiAtEMCTrk);
   fChain->SetBranchAddress("thetaAtEMCTrk",thetaAtEMCTrk);
   fChain->SetBranchAddress("isvtTrk",isvtTrk);
   fChain->SetBranchAddress("nsvtTrk",nsvtTrk);
   fChain->SetBranchAddress("fhitTrk",fhitTrk);
   fChain->SetBranchAddress("ndchTrk",ndchTrk);
   fChain->SetBranchAddress("lhitTrk",lhitTrk);
   fChain->SetBranchAddress("tLenTrk",tLenTrk);
   fChain->SetBranchAddress("ntdofTrk",ntdofTrk);
   fChain->SetBranchAddress("tproTrk",tproTrk);
   fChain->SetBranchAddress("tChi2Trk",tChi2Trk);
   fChain->SetBranchAddress("cPidTrk",cPidTrk);
   fChain->SetBranchAddress("sfRangeTrk",sfRangeTrk);
   fChain->SetBranchAddress("trkFitStatusTrk",trkFitStatusTrk);
   fChain->SetBranchAddress("chargeTrk",chargeTrk);
   fChain->SetBranchAddress("momentumTrk",momentumTrk);
   fChain->SetBranchAddress("ppcov00",ppcov00);
   fChain->SetBranchAddress("ppcov10",ppcov10);
   fChain->SetBranchAddress("ppcov11",ppcov11);
   fChain->SetBranchAddress("ppcov20",ppcov20);
   fChain->SetBranchAddress("ppcov21",ppcov21);
   fChain->SetBranchAddress("ppcov22",ppcov22);
   fChain->SetBranchAddress("xPocaTrk",xPocaTrk);
   fChain->SetBranchAddress("yPocaTrk",yPocaTrk);
   fChain->SetBranchAddress("zPocaTrk",zPocaTrk);
   fChain->SetBranchAddress("thetaTrk",thetaTrk);
   fChain->SetBranchAddress("phiTrk",phiTrk);
   fChain->SetBranchAddress("muonIdTrk",muonIdTrk);
   fChain->SetBranchAddress("elecIdTrk",elecIdTrk);
   fChain->SetBranchAddress("kaonIdTrk",kaonIdTrk);
   fChain->SetBranchAddress("pionIdTrk",pionIdTrk);
   fChain->SetBranchAddress("protonIdTrk",protonIdTrk);
   fChain->SetBranchAddress("B0RecTrk",B0RecTrk);
   fChain->SetBranchAddress("chBRecTrk",chBRecTrk);
   fChain->SetBranchAddress("nGam",&nGam);
   fChain->SetBranchAddress("IfrLayGam",IfrLayGam);
   fChain->SetBranchAddress("IfrNsGam",IfrNsGam);
   fChain->SetBranchAddress("IfrInnerGam",IfrInnerGam);
   fChain->SetBranchAddress("IfrBarrelGam",IfrBarrelGam);
   fChain->SetBranchAddress("IfrFWDGam",IfrFWDGam);
   fChain->SetBranchAddress("IfrBWDGam",IfrBWDGam);
   fChain->SetBranchAddress("IfrMeasIntLenGam",IfrMeasIntLenGam);
   fChain->SetBranchAddress("IfrFirstHitGam",IfrFirstHitGam);
   fChain->SetBranchAddress("IfrLastHitGam",IfrLastHitGam);
   fChain->SetBranchAddress("IfrExpIntLenGam",IfrExpIntLenGam);
   fChain->SetBranchAddress("IfrIntLenBeforeIronGam",IfrIntLenBeforeIronGam);
   fChain->SetBranchAddress("IfrTrkMatchGam",IfrTrkMatchGam);
   fChain->SetBranchAddress("IfrEmcMatchGam",IfrEmcMatchGam);
   fChain->SetBranchAddress("IfrLastBarrelGam",IfrLastBarrelGam);
   fChain->SetBranchAddress("IfrCLFitChi2Gam",IfrCLFitChi2Gam);
   fChain->SetBranchAddress("IfrStrips0",IfrStrips0);
   fChain->SetBranchAddress("IfrStrips1",IfrStrips1);
   fChain->SetBranchAddress("IfrStrips2",IfrStrips2);
   fChain->SetBranchAddress("IfrStrips3",IfrStrips3);
   fChain->SetBranchAddress("IfrStrips4",IfrStrips4);
   fChain->SetBranchAddress("IfrStrips5",IfrStrips5);
   fChain->SetBranchAddress("IfrStrips6",IfrStrips6);
   fChain->SetBranchAddress("IfrStrips7",IfrStrips7);
   fChain->SetBranchAddress("IfrStrips8",IfrStrips8);
   fChain->SetBranchAddress("IfrStrips9",IfrStrips9);
   fChain->SetBranchAddress("IfrStrips10",IfrStrips10);
   fChain->SetBranchAddress("IfrStrips11",IfrStrips11);
   fChain->SetBranchAddress("IfrStrips12",IfrStrips12);
   fChain->SetBranchAddress("IfrStrips13",IfrStrips13);
   fChain->SetBranchAddress("IfrStrips14",IfrStrips14);
   fChain->SetBranchAddress("IfrStrips15",IfrStrips15);
   fChain->SetBranchAddress("IfrStrips16",IfrStrips16);
   fChain->SetBranchAddress("IfrStrips17",IfrStrips17);
   fChain->SetBranchAddress("IfrStrips18",IfrStrips18);
   fChain->SetBranchAddress("IfrStrips19",IfrStrips19);
   fChain->SetBranchAddress("lMomGam",lMomGam);
   fChain->SetBranchAddress("ZMom42Gam",ZMom42Gam);
   fChain->SetBranchAddress("ecalGam",ecalGam);
   fChain->SetBranchAddress("ecalXGam",ecalXGam);
   fChain->SetBranchAddress("ecalYGam",ecalYGam);
   fChain->SetBranchAddress("ecalZGam",ecalZGam);
   fChain->SetBranchAddress("nCryGam",nCryGam);
   fChain->SetBranchAddress("nBumpGam",nBumpGam);
   fChain->SetBranchAddress("ZMom20Gam",ZMom20Gam);
   fChain->SetBranchAddress("secMomGam",secMomGam);
   fChain->SetBranchAddress("s1s9Gam",s1s9Gam);
   fChain->SetBranchAddress("s9s25Gam",s9s25Gam);
   fChain->SetBranchAddress("erawGam",erawGam);
   fChain->SetBranchAddress("phiClusterGam",phiClusterGam);
   fChain->SetBranchAddress("thetaClusterGam",thetaClusterGam);
   fChain->SetBranchAddress("covEEGam",covEEGam);
   fChain->SetBranchAddress("covTTGam",covTTGam);
   fChain->SetBranchAddress("covPPGam",covPPGam);
   fChain->SetBranchAddress("covRRGam",covRRGam);
   fChain->SetBranchAddress("emcStatusGam",emcStatusGam);
   fChain->SetBranchAddress("thetaGam",thetaGam);
   fChain->SetBranchAddress("phiGam",phiGam);
   fChain->SetBranchAddress("energyGam",energyGam);
   fChain->SetBranchAddress("B0RecGam",B0RecGam);
   fChain->SetBranchAddress("chBRecGam",chBRecGam);
   Notify();
}

Bool_t recoilStudy::Notify()
{
//   called when loading a new file
//   get branch pointers
   b_event = fChain->GetBranch("event");
   b_runNumber = fChain->GetBranch("runNumber");
   b_platform = fChain->GetBranch("platform");
   b_partition = fChain->GetBranch("partition");
   b_upperID = fChain->GetBranch("upperID");
   b_lowerID = fChain->GetBranch("lowerID");
   b_primVtxX = fChain->GetBranch("primVtxX");
   b_primVtxY = fChain->GetBranch("primVtxY");
   b_primVtxZ = fChain->GetBranch("primVtxZ");
   b_primVtxCovXX = fChain->GetBranch("primVtxCovXX");
   b_primVtxCovYY = fChain->GetBranch("primVtxCovYY");
   b_primVtxCovZZ = fChain->GetBranch("primVtxCovZZ");
   b_primVtxCovXY = fChain->GetBranch("primVtxCovXY");
   b_primVtxCovYZ = fChain->GetBranch("primVtxCovYZ");
   b_primVtxCovXZ = fChain->GetBranch("primVtxCovXZ");
   b_primVtxChi2 = fChain->GetBranch("primVtxChi2");
   b_primVtxNdof = fChain->GetBranch("primVtxNdof");
   b_BCountFilter = fChain->GetBranch("BCountFilter");
   b_DchTrig = fChain->GetBranch("DchTrig");
   b_EmcTrig = fChain->GetBranch("EmcTrig");
   b_R2All = fChain->GetBranch("R2All");
   b_nGTLFid = fChain->GetBranch("nGTLFid");
   b_nChgFid = fChain->GetBranch("nChgFid");
   b_eTotFid = fChain->GetBranch("eTotFid");
   b_PrimVtxdr = fChain->GetBranch("PrimVtxdr");
   b_PrimVtxdz = fChain->GetBranch("PrimVtxdz");
   b_VtxProb = fChain->GetBranch("VtxProb");
   b_beamSX = fChain->GetBranch("beamSX");
   b_beamSY = fChain->GetBranch("beamSY");
   b_beamSZ = fChain->GetBranch("beamSZ");
   b_beamSCovXX = fChain->GetBranch("beamSCovXX");
   b_beamSCovYY = fChain->GetBranch("beamSCovYY");
   b_beamSCovZZ = fChain->GetBranch("beamSCovZZ");
   b_beamSCovXZ = fChain->GetBranch("beamSCovXZ");
   b_pxUps = fChain->GetBranch("pxUps");
   b_pyUps = fChain->GetBranch("pyUps");
   b_pzUps = fChain->GetBranch("pzUps");
   b_eUps = fChain->GetBranch("eUps");
   b_nTrkTot = fChain->GetBranch("nTrkTot");
   b_W2 = fChain->GetBranch("W2");
   b_FoxWol2 = fChain->GetBranch("FoxWol2");
   b_FoxWol2Neu = fChain->GetBranch("FoxWol2Neu");
   b_thrust = fChain->GetBranch("thrust");
   b_thrustNeu = fChain->GetBranch("thrustNeu");
   b_nB0 = fChain->GetBranch("nB0");
   b_massB0 = fChain->GetBranch("massB0");
   b_pB0 = fChain->GetBranch("pB0");
   b_thB0 = fChain->GetBranch("thB0");
   b_phiB0 = fChain->GetBranch("phiB0");
   b_errMassB0 = fChain->GetBranch("errMassB0");
   b_m0B0 = fChain->GetBranch("m0B0");
   b_xB0 = fChain->GetBranch("xB0");
   b_yB0 = fChain->GetBranch("yB0");
   b_zB0 = fChain->GetBranch("zB0");
   b_s2xB0 = fChain->GetBranch("s2xB0");
   b_s2yB0 = fChain->GetBranch("s2yB0");
   b_s2zB0 = fChain->GetBranch("s2zB0");
   b_chi2B0 = fChain->GetBranch("chi2B0");
   b_dofB0 = fChain->GetBranch("dofB0");
   b_stB0 = fChain->GetBranch("stB0");
   b_ndauB0 = fChain->GetBranch("ndauB0");
   b_mseB0 = fChain->GetBranch("mseB0");
   b_mHatB0 = fChain->GetBranch("mHatB0");
   b_deltaeB0 = fChain->GetBranch("deltaeB0");
   b_ThruB0 = fChain->GetBranch("ThruB0");
   b_thThruB0 = fChain->GetBranch("thThruB0");
   b_phiThruB0 = fChain->GetBranch("phiThruB0");
   b_cosTBB0 = fChain->GetBranch("cosTBB0");
   b_d1B0Index = fChain->GetBranch("d1B0Index");
   b_d1B0Lund = fChain->GetBranch("d1B0Lund");
   b_d2B0Index = fChain->GetBranch("d2B0Index");
   b_d2B0Lund = fChain->GetBranch("d2B0Lund");
   b_d3B0Index = fChain->GetBranch("d3B0Index");
   b_d3B0Lund = fChain->GetBranch("d3B0Lund");
   b_d4B0Index = fChain->GetBranch("d4B0Index");
   b_d4B0Lund = fChain->GetBranch("d4B0Lund");
   b_d5B0Index = fChain->GetBranch("d5B0Index");
   b_d5B0Lund = fChain->GetBranch("d5B0Lund");
   b_d6B0Index = fChain->GetBranch("d6B0Index");
   b_d6B0Lund = fChain->GetBranch("d6B0Lund");
   b_d7B0Index = fChain->GetBranch("d7B0Index");
   b_d7B0Lund = fChain->GetBranch("d7B0Lund");
   b_modeB0 = fChain->GetBranch("modeB0");
   b_purB0 = fChain->GetBranch("purB0");
   b_intpurB0 = fChain->GetBranch("intpurB0");
   b_VtxXLepB0 = fChain->GetBranch("VtxXLepB0");
   b_VtxYLepB0 = fChain->GetBranch("VtxYLepB0");
   b_VtxZLepB0 = fChain->GetBranch("VtxZLepB0");
   b_VtxCovXXLepB0 = fChain->GetBranch("VtxCovXXLepB0");
   b_VtxCovYYLepB0 = fChain->GetBranch("VtxCovYYLepB0");
   b_VtxCovXYLepB0 = fChain->GetBranch("VtxCovXYLepB0");
   b_VtxCovZZLepB0 = fChain->GetBranch("VtxCovZZLepB0");
   b_VtxCovXZLepB0 = fChain->GetBranch("VtxCovXZLepB0");
   b_VtxCovYZLepB0 = fChain->GetBranch("VtxCovYZLepB0");
   b_VtxChiSqLepB0 = fChain->GetBranch("VtxChiSqLepB0");
   b_VtxNDofLepB0 = fChain->GetBranch("VtxNDofLepB0");
   b_VtxStatLepB0 = fChain->GetBranch("VtxStatLepB0");
   b_VtxNUsedLepB0 = fChain->GetBranch("VtxNUsedLepB0");
   b_DocaLepB0 = fChain->GetBranch("DocaLepB0");
   b_DocaErrLepB0 = fChain->GetBranch("DocaErrLepB0");
   b_VtxXXB0 = fChain->GetBranch("VtxXXB0");
   b_VtxYXB0 = fChain->GetBranch("VtxYXB0");
   b_VtxZXB0 = fChain->GetBranch("VtxZXB0");
   b_VtxCovXXXB0 = fChain->GetBranch("VtxCovXXXB0");
   b_VtxCovYYXB0 = fChain->GetBranch("VtxCovYYXB0");
   b_VtxCovXYXB0 = fChain->GetBranch("VtxCovXYXB0");
   b_VtxCovZZXB0 = fChain->GetBranch("VtxCovZZXB0");
   b_VtxCovXZXB0 = fChain->GetBranch("VtxCovXZXB0");
   b_VtxCovYZXB0 = fChain->GetBranch("VtxCovYZXB0");
   b_VtxChiSqXB0 = fChain->GetBranch("VtxChiSqXB0");
   b_VtxNDofXB0 = fChain->GetBranch("VtxNDofXB0");
   b_VtxStatXB0 = fChain->GetBranch("VtxStatXB0");
   b_VtxNUsedXB0 = fChain->GetBranch("VtxNUsedXB0");
   b_VtxPXB0 = fChain->GetBranch("VtxPXB0");
   b_VtxPhiXB0 = fChain->GetBranch("VtxPhiXB0");
   b_VtxThetaXB0 = fChain->GetBranch("VtxThetaXB0");
   b_ThrustXB0 = fChain->GetBranch("ThrustXB0");
   b_ThrustXPhiB0 = fChain->GetBranch("ThrustXPhiB0");
   b_ThrustXThetaB0 = fChain->GetBranch("ThrustXThetaB0");
   b_MassPB0 = fChain->GetBranch("MassPB0");
   b_MassPhiB0 = fChain->GetBranch("MassPhiB0");
   b_MassThetaB0 = fChain->GetBranch("MassThetaB0");
   b_Cov00B0 = fChain->GetBranch("Cov00B0");
   b_Cov10B0 = fChain->GetBranch("Cov10B0");
   b_Cov11B0 = fChain->GetBranch("Cov11B0");
   b_Cov20B0 = fChain->GetBranch("Cov20B0");
   b_Cov21B0 = fChain->GetBranch("Cov21B0");
   b_Cov22B0 = fChain->GetBranch("Cov22B0");
   b_Cov30B0 = fChain->GetBranch("Cov30B0");
   b_Cov31B0 = fChain->GetBranch("Cov31B0");
   b_Cov32B0 = fChain->GetBranch("Cov32B0");
   b_Cov33B0 = fChain->GetBranch("Cov33B0");
   b_nChB = fChain->GetBranch("nChB");
   b_massChB = fChain->GetBranch("massChB");
   b_pChB = fChain->GetBranch("pChB");
   b_thChB = fChain->GetBranch("thChB");
   b_phiChB = fChain->GetBranch("phiChB");
   b_errMassChB = fChain->GetBranch("errMassChB");
   b_m0ChB = fChain->GetBranch("m0ChB");
   b_xChB = fChain->GetBranch("xChB");
   b_yChB = fChain->GetBranch("yChB");
   b_zChB = fChain->GetBranch("zChB");
   b_s2xChB = fChain->GetBranch("s2xChB");
   b_s2yChB = fChain->GetBranch("s2yChB");
   b_s2zChB = fChain->GetBranch("s2zChB");
   b_chi2ChB = fChain->GetBranch("chi2ChB");
   b_dofChB = fChain->GetBranch("dofChB");
   b_stChB = fChain->GetBranch("stChB");
   b_ndauChB = fChain->GetBranch("ndauChB");
   b_mseChB = fChain->GetBranch("mseChB");
   b_mHatChB = fChain->GetBranch("mHatChB");
   b_deltaeChB = fChain->GetBranch("deltaeChB");
   b_ThruChB = fChain->GetBranch("ThruChB");
   b_thThruChB = fChain->GetBranch("thThruChB");
   b_phiThruChB = fChain->GetBranch("phiThruChB");
   b_cosTBChB = fChain->GetBranch("cosTBChB");
   b_d1ChBIndex = fChain->GetBranch("d1ChBIndex");
   b_d1ChBLund = fChain->GetBranch("d1ChBLund");
   b_d2ChBIndex = fChain->GetBranch("d2ChBIndex");
   b_d2ChBLund = fChain->GetBranch("d2ChBLund");
   b_d3ChBIndex = fChain->GetBranch("d3ChBIndex");
   b_d3ChBLund = fChain->GetBranch("d3ChBLund");
   b_d4ChBIndex = fChain->GetBranch("d4ChBIndex");
   b_d4ChBLund = fChain->GetBranch("d4ChBLund");
   b_d5ChBIndex = fChain->GetBranch("d5ChBIndex");
   b_d5ChBLund = fChain->GetBranch("d5ChBLund");
   b_d6ChBIndex = fChain->GetBranch("d6ChBIndex");
   b_d6ChBLund = fChain->GetBranch("d6ChBLund");
   b_d7ChBIndex = fChain->GetBranch("d7ChBIndex");
   b_d7ChBLund = fChain->GetBranch("d7ChBLund");
   b_modeChB = fChain->GetBranch("modeChB");
   b_purChB = fChain->GetBranch("purChB");
   b_intpurChB = fChain->GetBranch("intpurChB");
   b_VtxXLepChB = fChain->GetBranch("VtxXLepChB");
   b_VtxYLepChB = fChain->GetBranch("VtxYLepChB");
   b_VtxZLepChB = fChain->GetBranch("VtxZLepChB");
   b_VtxCovXXLepChB = fChain->GetBranch("VtxCovXXLepChB");
   b_VtxCovYYLepChB = fChain->GetBranch("VtxCovYYLepChB");
   b_VtxCovXYLepChB = fChain->GetBranch("VtxCovXYLepChB");
   b_VtxCovZZLepChB = fChain->GetBranch("VtxCovZZLepChB");
   b_VtxCovXZLepChB = fChain->GetBranch("VtxCovXZLepChB");
   b_VtxCovYZLepChB = fChain->GetBranch("VtxCovYZLepChB");
   b_VtxChiSqLepChB = fChain->GetBranch("VtxChiSqLepChB");
   b_VtxNDofLepChB = fChain->GetBranch("VtxNDofLepChB");
   b_VtxStatLepChB = fChain->GetBranch("VtxStatLepChB");
   b_VtxNUsedLepChB = fChain->GetBranch("VtxNUsedLepChB");
   b_DocaLepChB = fChain->GetBranch("DocaLepChB");
   b_DocaErrLepChB = fChain->GetBranch("DocaErrLepChB");
   b_VtxXXChB = fChain->GetBranch("VtxXXChB");
   b_VtxYXChB = fChain->GetBranch("VtxYXChB");
   b_VtxZXChB = fChain->GetBranch("VtxZXChB");
   b_VtxCovXXXChB = fChain->GetBranch("VtxCovXXXChB");
   b_VtxCovYYXChB = fChain->GetBranch("VtxCovYYXChB");
   b_VtxCovXYXChB = fChain->GetBranch("VtxCovXYXChB");
   b_VtxCovZZXChB = fChain->GetBranch("VtxCovZZXChB");
   b_VtxCovXZXChB = fChain->GetBranch("VtxCovXZXChB");
   b_VtxCovYZXChB = fChain->GetBranch("VtxCovYZXChB");
   b_VtxChiSqXChB = fChain->GetBranch("VtxChiSqXChB");
   b_VtxNDofXChB = fChain->GetBranch("VtxNDofXChB");
   b_VtxStatXChB = fChain->GetBranch("VtxStatXChB");
   b_VtxNUsedXChB = fChain->GetBranch("VtxNUsedXChB");
   b_VtxPXChB = fChain->GetBranch("VtxPXChB");
   b_VtxPhiXChB = fChain->GetBranch("VtxPhiXChB");
   b_VtxThetaXChB = fChain->GetBranch("VtxThetaXChB");
   b_ThrustXChB = fChain->GetBranch("ThrustXChB");
   b_ThrustXPhiChB = fChain->GetBranch("ThrustXPhiChB");
   b_ThrustXThetaChB = fChain->GetBranch("ThrustXThetaChB");
   b_MassPChB = fChain->GetBranch("MassPChB");
   b_MassPhiChB = fChain->GetBranch("MassPhiChB");
   b_MassThetaChB = fChain->GetBranch("MassThetaChB");
   b_Cov00ChB = fChain->GetBranch("Cov00ChB");
   b_Cov10ChB = fChain->GetBranch("Cov10ChB");
   b_Cov11ChB = fChain->GetBranch("Cov11ChB");
   b_Cov20ChB = fChain->GetBranch("Cov20ChB");
   b_Cov21ChB = fChain->GetBranch("Cov21ChB");
   b_Cov22ChB = fChain->GetBranch("Cov22ChB");
   b_Cov30ChB = fChain->GetBranch("Cov30ChB");
   b_Cov31ChB = fChain->GetBranch("Cov31ChB");
   b_Cov32ChB = fChain->GetBranch("Cov32ChB");
   b_Cov33ChB = fChain->GetBranch("Cov33ChB");
   b_nDstar = fChain->GetBranch("nDstar");
   b_massDstar = fChain->GetBranch("massDstar");
   b_pDstar = fChain->GetBranch("pDstar");
   b_thDstar = fChain->GetBranch("thDstar");
   b_phiDstar = fChain->GetBranch("phiDstar");
   b_errMassDstar = fChain->GetBranch("errMassDstar");
   b_m0Dstar = fChain->GetBranch("m0Dstar");
   b_xDstar = fChain->GetBranch("xDstar");
   b_yDstar = fChain->GetBranch("yDstar");
   b_zDstar = fChain->GetBranch("zDstar");
   b_s2xDstar = fChain->GetBranch("s2xDstar");
   b_s2yDstar = fChain->GetBranch("s2yDstar");
   b_s2zDstar = fChain->GetBranch("s2zDstar");
   b_chi2Dstar = fChain->GetBranch("chi2Dstar");
   b_dofDstar = fChain->GetBranch("dofDstar");
   b_stDstar = fChain->GetBranch("stDstar");
   b_ndauDstar = fChain->GetBranch("ndauDstar");
   b_d1DstarIndex = fChain->GetBranch("d1DstarIndex");
   b_d1DstarLund = fChain->GetBranch("d1DstarLund");
   b_d2DstarIndex = fChain->GetBranch("d2DstarIndex");
   b_d2DstarLund = fChain->GetBranch("d2DstarLund");
   b_nDstarBS = fChain->GetBranch("nDstarBS");
   b_massDstarBS = fChain->GetBranch("massDstarBS");
   b_chi2DstarBS = fChain->GetBranch("chi2DstarBS");
   b_dofDstarBS = fChain->GetBranch("dofDstarBS");
   b_spixDstarBS = fChain->GetBranch("spixDstarBS");
   b_spiyDstarBS = fChain->GetBranch("spiyDstarBS");
   b_spizDstarBS = fChain->GetBranch("spizDstarBS");
   b_nDstar0 = fChain->GetBranch("nDstar0");
   b_massDstar0 = fChain->GetBranch("massDstar0");
   b_pDstar0 = fChain->GetBranch("pDstar0");
   b_thDstar0 = fChain->GetBranch("thDstar0");
   b_phiDstar0 = fChain->GetBranch("phiDstar0");
   b_errMassDstar0 = fChain->GetBranch("errMassDstar0");
   b_m0Dstar0 = fChain->GetBranch("m0Dstar0");
   b_xDstar0 = fChain->GetBranch("xDstar0");
   b_yDstar0 = fChain->GetBranch("yDstar0");
   b_zDstar0 = fChain->GetBranch("zDstar0");
   b_s2xDstar0 = fChain->GetBranch("s2xDstar0");
   b_s2yDstar0 = fChain->GetBranch("s2yDstar0");
   b_s2zDstar0 = fChain->GetBranch("s2zDstar0");
   b_chi2Dstar0 = fChain->GetBranch("chi2Dstar0");
   b_dofDstar0 = fChain->GetBranch("dofDstar0");
   b_stDstar0 = fChain->GetBranch("stDstar0");
   b_ndauDstar0 = fChain->GetBranch("ndauDstar0");
   b_d1Dstar0Index = fChain->GetBranch("d1Dstar0Index");
   b_d1Dstar0Lund = fChain->GetBranch("d1Dstar0Lund");
   b_d2Dstar0Index = fChain->GetBranch("d2Dstar0Index");
   b_d2Dstar0Lund = fChain->GetBranch("d2Dstar0Lund");
   b_nD0 = fChain->GetBranch("nD0");
   b_massD0 = fChain->GetBranch("massD0");
   b_pD0 = fChain->GetBranch("pD0");
   b_thD0 = fChain->GetBranch("thD0");
   b_phiD0 = fChain->GetBranch("phiD0");
   b_errMassD0 = fChain->GetBranch("errMassD0");
   b_m0D0 = fChain->GetBranch("m0D0");
   b_xD0 = fChain->GetBranch("xD0");
   b_yD0 = fChain->GetBranch("yD0");
   b_zD0 = fChain->GetBranch("zD0");
   b_s2xD0 = fChain->GetBranch("s2xD0");
   b_s2yD0 = fChain->GetBranch("s2yD0");
   b_s2zD0 = fChain->GetBranch("s2zD0");
   b_chi2D0 = fChain->GetBranch("chi2D0");
   b_dofD0 = fChain->GetBranch("dofD0");
   b_stD0 = fChain->GetBranch("stD0");
   b_ndauD0 = fChain->GetBranch("ndauD0");
   b_d1D0Index = fChain->GetBranch("d1D0Index");
   b_d1D0Lund = fChain->GetBranch("d1D0Lund");
   b_d2D0Index = fChain->GetBranch("d2D0Index");
   b_d2D0Lund = fChain->GetBranch("d2D0Lund");
   b_d3D0Index = fChain->GetBranch("d3D0Index");
   b_d3D0Lund = fChain->GetBranch("d3D0Lund");
   b_d4D0Index = fChain->GetBranch("d4D0Index");
   b_d4D0Lund = fChain->GetBranch("d4D0Lund");
   b_nChD = fChain->GetBranch("nChD");
   b_massChD = fChain->GetBranch("massChD");
   b_pChD = fChain->GetBranch("pChD");
   b_thChD = fChain->GetBranch("thChD");
   b_phiChD = fChain->GetBranch("phiChD");
   b_errMassChD = fChain->GetBranch("errMassChD");
   b_m0ChD = fChain->GetBranch("m0ChD");
   b_xChD = fChain->GetBranch("xChD");
   b_yChD = fChain->GetBranch("yChD");
   b_zChD = fChain->GetBranch("zChD");
   b_s2xChD = fChain->GetBranch("s2xChD");
   b_s2yChD = fChain->GetBranch("s2yChD");
   b_s2zChD = fChain->GetBranch("s2zChD");
   b_chi2ChD = fChain->GetBranch("chi2ChD");
   b_dofChD = fChain->GetBranch("dofChD");
   b_stChD = fChain->GetBranch("stChD");
   b_ndauChD = fChain->GetBranch("ndauChD");
   b_d1ChDIndex = fChain->GetBranch("d1ChDIndex");
   b_d1ChDLund = fChain->GetBranch("d1ChDLund");
   b_d2ChDIndex = fChain->GetBranch("d2ChDIndex");
   b_d2ChDLund = fChain->GetBranch("d2ChDLund");
   b_d3ChDIndex = fChain->GetBranch("d3ChDIndex");
   b_d3ChDLund = fChain->GetBranch("d3ChDLund");
   b_d4ChDIndex = fChain->GetBranch("d4ChDIndex");
   b_d4ChDLund = fChain->GetBranch("d4ChDLund");
   b_nJpsi = fChain->GetBranch("nJpsi");
   b_massJpsi = fChain->GetBranch("massJpsi");
   b_pJpsi = fChain->GetBranch("pJpsi");
   b_thJpsi = fChain->GetBranch("thJpsi");
   b_phiJpsi = fChain->GetBranch("phiJpsi");
   b_errMassJpsi = fChain->GetBranch("errMassJpsi");
   b_m0Jpsi = fChain->GetBranch("m0Jpsi");
   b_xJpsi = fChain->GetBranch("xJpsi");
   b_yJpsi = fChain->GetBranch("yJpsi");
   b_zJpsi = fChain->GetBranch("zJpsi");
   b_s2xJpsi = fChain->GetBranch("s2xJpsi");
   b_s2yJpsi = fChain->GetBranch("s2yJpsi");
   b_s2zJpsi = fChain->GetBranch("s2zJpsi");
   b_chi2Jpsi = fChain->GetBranch("chi2Jpsi");
   b_dofJpsi = fChain->GetBranch("dofJpsi");
   b_stJpsi = fChain->GetBranch("stJpsi");
   b_ndauJpsi = fChain->GetBranch("ndauJpsi");
   b_d1JpsiIndex = fChain->GetBranch("d1JpsiIndex");
   b_d1JpsiLund = fChain->GetBranch("d1JpsiLund");
   b_d1JpsiGamIndex = fChain->GetBranch("d1JpsiGamIndex");
   b_d1JpsiGamBrIndex = fChain->GetBranch("d1JpsiGamBrIndex");
   b_d1JpsiGamNumBr = fChain->GetBranch("d1JpsiGamNumBr");
   b_d2JpsiIndex = fChain->GetBranch("d2JpsiIndex");
   b_d2JpsiLund = fChain->GetBranch("d2JpsiLund");
   b_d2JpsiGamIndex = fChain->GetBranch("d2JpsiGamIndex");
   b_d2JpsiGamBrIndex = fChain->GetBranch("d2JpsiGamBrIndex");
   b_d2JpsiGamNumBr = fChain->GetBranch("d2JpsiGamNumBr");
   b_nKs = fChain->GetBranch("nKs");
   b_massKs = fChain->GetBranch("massKs");
   b_pKs = fChain->GetBranch("pKs");
   b_thKs = fChain->GetBranch("thKs");
   b_phiKs = fChain->GetBranch("phiKs");
   b_errMassKs = fChain->GetBranch("errMassKs");
   b_m0Ks = fChain->GetBranch("m0Ks");
   b_xKs = fChain->GetBranch("xKs");
   b_yKs = fChain->GetBranch("yKs");
   b_zKs = fChain->GetBranch("zKs");
   b_s2xKs = fChain->GetBranch("s2xKs");
   b_s2yKs = fChain->GetBranch("s2yKs");
   b_s2zKs = fChain->GetBranch("s2zKs");
   b_chi2Ks = fChain->GetBranch("chi2Ks");
   b_dofKs = fChain->GetBranch("dofKs");
   b_stKs = fChain->GetBranch("stKs");
   b_ndauKs = fChain->GetBranch("ndauKs");
   b_d1KsIndex = fChain->GetBranch("d1KsIndex");
   b_d1KsLund = fChain->GetBranch("d1KsLund");
   b_d2KsIndex = fChain->GetBranch("d2KsIndex");
   b_d2KsLund = fChain->GetBranch("d2KsLund");
   b_nPi0 = fChain->GetBranch("nPi0");
   b_massPi0 = fChain->GetBranch("massPi0");
   b_pPi0 = fChain->GetBranch("pPi0");
   b_thPi0 = fChain->GetBranch("thPi0");
   b_phiPi0 = fChain->GetBranch("phiPi0");
   b_errMassPi0 = fChain->GetBranch("errMassPi0");
   b_m0Pi0 = fChain->GetBranch("m0Pi0");
   b_xPi0 = fChain->GetBranch("xPi0");
   b_yPi0 = fChain->GetBranch("yPi0");
   b_zPi0 = fChain->GetBranch("zPi0");
   b_s2xPi0 = fChain->GetBranch("s2xPi0");
   b_s2yPi0 = fChain->GetBranch("s2yPi0");
   b_s2zPi0 = fChain->GetBranch("s2zPi0");
   b_chi2Pi0 = fChain->GetBranch("chi2Pi0");
   b_dofPi0 = fChain->GetBranch("dofPi0");
   b_stPi0 = fChain->GetBranch("stPi0");
   b_ndauPi0 = fChain->GetBranch("ndauPi0");
   b_d1Pi0Index = fChain->GetBranch("d1Pi0Index");
   b_d1Pi0Lund = fChain->GetBranch("d1Pi0Lund");
   b_d2Pi0Index = fChain->GetBranch("d2Pi0Index");
   b_d2Pi0Lund = fChain->GetBranch("d2Pi0Lund");
   b_nGConv = fChain->GetBranch("nGConv");
   b_massGConv = fChain->GetBranch("massGConv");
   b_pGConv = fChain->GetBranch("pGConv");
   b_thGConv = fChain->GetBranch("thGConv");
   b_phiGConv = fChain->GetBranch("phiGConv");
   b_errMassGConv = fChain->GetBranch("errMassGConv");
   b_m0GConv = fChain->GetBranch("m0GConv");
   b_xGConv = fChain->GetBranch("xGConv");
   b_yGConv = fChain->GetBranch("yGConv");
   b_zGConv = fChain->GetBranch("zGConv");
   b_s2xGConv = fChain->GetBranch("s2xGConv");
   b_s2yGConv = fChain->GetBranch("s2yGConv");
   b_s2zGConv = fChain->GetBranch("s2zGConv");
   b_chi2GConv = fChain->GetBranch("chi2GConv");
   b_dofGConv = fChain->GetBranch("dofGConv");
   b_stGConv = fChain->GetBranch("stGConv");
   b_ndauGConv = fChain->GetBranch("ndauGConv");
   b_d1GConvIndex = fChain->GetBranch("d1GConvIndex");
   b_d1GConvLund = fChain->GetBranch("d1GConvLund");
   b_d2GConvIndex = fChain->GetBranch("d2GConvIndex");
   b_d2GConvLund = fChain->GetBranch("d2GConvLund");
   b_nDalitz = fChain->GetBranch("nDalitz");
   b_massDalitz = fChain->GetBranch("massDalitz");
   b_pDalitz = fChain->GetBranch("pDalitz");
   b_thDalitz = fChain->GetBranch("thDalitz");
   b_phiDalitz = fChain->GetBranch("phiDalitz");
   b_errMassDalitz = fChain->GetBranch("errMassDalitz");
   b_m0Dalitz = fChain->GetBranch("m0Dalitz");
   b_xDalitz = fChain->GetBranch("xDalitz");
   b_yDalitz = fChain->GetBranch("yDalitz");
   b_zDalitz = fChain->GetBranch("zDalitz");
   b_s2xDalitz = fChain->GetBranch("s2xDalitz");
   b_s2yDalitz = fChain->GetBranch("s2yDalitz");
   b_s2zDalitz = fChain->GetBranch("s2zDalitz");
   b_chi2Dalitz = fChain->GetBranch("chi2Dalitz");
   b_dofDalitz = fChain->GetBranch("dofDalitz");
   b_stDalitz = fChain->GetBranch("stDalitz");
   b_ndauDalitz = fChain->GetBranch("ndauDalitz");
   b_d1DalitzIndex = fChain->GetBranch("d1DalitzIndex");
   b_d1DalitzLund = fChain->GetBranch("d1DalitzLund");
   b_d2DalitzIndex = fChain->GetBranch("d2DalitzIndex");
   b_d2DalitzLund = fChain->GetBranch("d2DalitzLund");
   b_nTrk = fChain->GetBranch("nTrk");
   b_IfrLayTrk = fChain->GetBranch("IfrLayTrk");
   b_IfrNsTrk = fChain->GetBranch("IfrNsTrk");
   b_IfrInnerTrk = fChain->GetBranch("IfrInnerTrk");
   b_IfrBarrelTrk = fChain->GetBranch("IfrBarrelTrk");
   b_IfrFWDTrk = fChain->GetBranch("IfrFWDTrk");
   b_IfrBWDTrk = fChain->GetBranch("IfrBWDTrk");
   b_IfrMeasIntLenTrk = fChain->GetBranch("IfrMeasIntLenTrk");
   b_IfrFirstHitTrk = fChain->GetBranch("IfrFirstHitTrk");
   b_IfrLastHitTrk = fChain->GetBranch("IfrLastHitTrk");
   b_lMomTrk = fChain->GetBranch("lMomTrk");
   b_ZMom42Trk = fChain->GetBranch("ZMom42Trk");
   b_ecalTrk = fChain->GetBranch("ecalTrk");
   b_ecalXTrk = fChain->GetBranch("ecalXTrk");
   b_ecalYTrk = fChain->GetBranch("ecalYTrk");
   b_ecalZTrk = fChain->GetBranch("ecalZTrk");
   b_nCryTrk = fChain->GetBranch("nCryTrk");
   b_nBumpTrk = fChain->GetBranch("nBumpTrk");
   b_ZMom20Trk = fChain->GetBranch("ZMom20Trk");
   b_secMomTrk = fChain->GetBranch("secMomTrk");
   b_s1s9Trk = fChain->GetBranch("s1s9Trk");
   b_s9s25Trk = fChain->GetBranch("s9s25Trk");
   b_erawTrk = fChain->GetBranch("erawTrk");
   b_phiClusterTrk = fChain->GetBranch("phiClusterTrk");
   b_thetaClusterTrk = fChain->GetBranch("thetaClusterTrk");
   b_covEETrk = fChain->GetBranch("covEETrk");
   b_covTTTrk = fChain->GetBranch("covTTTrk");
   b_covPPTrk = fChain->GetBranch("covPPTrk");
   b_covRRTrk = fChain->GetBranch("covRRTrk");
   b_phicMatTrk = fChain->GetBranch("phicMatTrk");
   b_trkcMatTrk = fChain->GetBranch("trkcMatTrk");
   b_nPidTrk = fChain->GetBranch("nPidTrk");
   b_emcStatusTrk = fChain->GetBranch("emcStatusTrk");
   b_phiAtEMCTrk = fChain->GetBranch("phiAtEMCTrk");
   b_thetaAtEMCTrk = fChain->GetBranch("thetaAtEMCTrk");
   b_isvtTrk = fChain->GetBranch("isvtTrk");
   b_nsvtTrk = fChain->GetBranch("nsvtTrk");
   b_fhitTrk = fChain->GetBranch("fhitTrk");
   b_ndchTrk = fChain->GetBranch("ndchTrk");
   b_lhitTrk = fChain->GetBranch("lhitTrk");
   b_tLenTrk = fChain->GetBranch("tLenTrk");
   b_ntdofTrk = fChain->GetBranch("ntdofTrk");
   b_tproTrk = fChain->GetBranch("tproTrk");
   b_tChi2Trk = fChain->GetBranch("tChi2Trk");
   b_cPidTrk = fChain->GetBranch("cPidTrk");
   b_sfRangeTrk = fChain->GetBranch("sfRangeTrk");
   b_trkFitStatusTrk = fChain->GetBranch("trkFitStatusTrk");
   b_chargeTrk = fChain->GetBranch("chargeTrk");
   b_momentumTrk = fChain->GetBranch("momentumTrk");
   b_ppcov00 = fChain->GetBranch("ppcov00");
   b_ppcov10 = fChain->GetBranch("ppcov10");
   b_ppcov11 = fChain->GetBranch("ppcov11");
   b_ppcov20 = fChain->GetBranch("ppcov20");
   b_ppcov21 = fChain->GetBranch("ppcov21");
   b_ppcov22 = fChain->GetBranch("ppcov22");
   b_xPocaTrk = fChain->GetBranch("xPocaTrk");
   b_yPocaTrk = fChain->GetBranch("yPocaTrk");
   b_zPocaTrk = fChain->GetBranch("zPocaTrk");
   b_thetaTrk = fChain->GetBranch("thetaTrk");
   b_phiTrk = fChain->GetBranch("phiTrk");
   b_muonIdTrk = fChain->GetBranch("muonIdTrk");
   b_elecIdTrk = fChain->GetBranch("elecIdTrk");
   b_kaonIdTrk = fChain->GetBranch("kaonIdTrk");
   b_pionIdTrk = fChain->GetBranch("pionIdTrk");
   b_protonIdTrk = fChain->GetBranch("protonIdTrk");
   b_B0RecTrk = fChain->GetBranch("B0RecTrk");
   b_chBRecTrk = fChain->GetBranch("chBRecTrk");
   b_nGam = fChain->GetBranch("nGam");
   b_IfrLayGam = fChain->GetBranch("IfrLayGam");
   b_IfrNsGam = fChain->GetBranch("IfrNsGam");
   b_IfrInnerGam = fChain->GetBranch("IfrInnerGam");
   b_IfrBarrelGam = fChain->GetBranch("IfrBarrelGam");
   b_IfrFWDGam = fChain->GetBranch("IfrFWDGam");
   b_IfrBWDGam = fChain->GetBranch("IfrBWDGam");
   b_IfrMeasIntLenGam = fChain->GetBranch("IfrMeasIntLenGam");
   b_IfrFirstHitGam = fChain->GetBranch("IfrFirstHitGam");
   b_IfrLastHitGam = fChain->GetBranch("IfrLastHitGam");
   b_IfrExpIntLenGam = fChain->GetBranch("IfrExpIntLenGam");
   b_IfrIntLenBeforeIronGam = fChain->GetBranch("IfrIntLenBeforeIronGam");
   b_IfrTrkMatchGam = fChain->GetBranch("IfrTrkMatchGam");
   b_IfrEmcMatchGam = fChain->GetBranch("IfrEmcMatchGam");
   b_IfrLastBarrelGam = fChain->GetBranch("IfrLastBarrelGam");
   b_IfrCLFitChi2Gam = fChain->GetBranch("IfrCLFitChi2Gam");
   b_IfrStrips0 = fChain->GetBranch("IfrStrips0");
   b_IfrStrips1 = fChain->GetBranch("IfrStrips1");
   b_IfrStrips2 = fChain->GetBranch("IfrStrips2");
   b_IfrStrips3 = fChain->GetBranch("IfrStrips3");
   b_IfrStrips4 = fChain->GetBranch("IfrStrips4");
   b_IfrStrips5 = fChain->GetBranch("IfrStrips5");
   b_IfrStrips6 = fChain->GetBranch("IfrStrips6");
   b_IfrStrips7 = fChain->GetBranch("IfrStrips7");
   b_IfrStrips8 = fChain->GetBranch("IfrStrips8");
   b_IfrStrips9 = fChain->GetBranch("IfrStrips9");
   b_IfrStrips10 = fChain->GetBranch("IfrStrips10");
   b_IfrStrips11 = fChain->GetBranch("IfrStrips11");
   b_IfrStrips12 = fChain->GetBranch("IfrStrips12");
   b_IfrStrips13 = fChain->GetBranch("IfrStrips13");
   b_IfrStrips14 = fChain->GetBranch("IfrStrips14");
   b_IfrStrips15 = fChain->GetBranch("IfrStrips15");
   b_IfrStrips16 = fChain->GetBranch("IfrStrips16");
   b_IfrStrips17 = fChain->GetBranch("IfrStrips17");
   b_IfrStrips18 = fChain->GetBranch("IfrStrips18");
   b_IfrStrips19 = fChain->GetBranch("IfrStrips19");
   b_lMomGam = fChain->GetBranch("lMomGam");
   b_ZMom42Gam = fChain->GetBranch("ZMom42Gam");
   b_ecalGam = fChain->GetBranch("ecalGam");
   b_ecalXGam = fChain->GetBranch("ecalXGam");
   b_ecalYGam = fChain->GetBranch("ecalYGam");
   b_ecalZGam = fChain->GetBranch("ecalZGam");
   b_nCryGam = fChain->GetBranch("nCryGam");
   b_nBumpGam = fChain->GetBranch("nBumpGam");
   b_ZMom20Gam = fChain->GetBranch("ZMom20Gam");
   b_secMomGam = fChain->GetBranch("secMomGam");
   b_s1s9Gam = fChain->GetBranch("s1s9Gam");
   b_s9s25Gam = fChain->GetBranch("s9s25Gam");
   b_erawGam = fChain->GetBranch("erawGam");
   b_phiClusterGam = fChain->GetBranch("phiClusterGam");
   b_thetaClusterGam = fChain->GetBranch("thetaClusterGam");
   b_covEEGam = fChain->GetBranch("covEEGam");
   b_covTTGam = fChain->GetBranch("covTTGam");
   b_covPPGam = fChain->GetBranch("covPPGam");
   b_covRRGam = fChain->GetBranch("covRRGam");
   b_emcStatusGam = fChain->GetBranch("emcStatusGam");
   b_thetaGam = fChain->GetBranch("thetaGam");
   b_phiGam = fChain->GetBranch("phiGam");
   b_energyGam = fChain->GetBranch("energyGam");
   b_B0RecGam = fChain->GetBranch("B0RecGam");
   b_chBRecGam = fChain->GetBranch("chBRecGam");
   return kTRUE;
}

void recoilStudy::Show(Int_t entry)
{
// Print contents of entry.
// If entry is not specified, print current entry
   if (!fChain) return;
   fChain->Show(entry);
}
Int_t recoilStudy::Cut(Int_t entry)
{
// This function may be called from Loop.
// returns  1 if entry is accepted.
// returns -1 otherwise.
   return 1;
}
#endif // #ifdef recoilStudy_cxx


// ----------------------------------------------------------------------
inline void recoilStudy::mk4Vector(TLorentzVector &p4, const Float_t p, const Float_t t, const Float_t f, const Float_t m) {
  p4.SetXYZM(p*TMath::Sin(t)*TMath::Cos(f), p*TMath::Sin(t)*TMath::Sin(f), p*TMath::Cos(t), m);
}
