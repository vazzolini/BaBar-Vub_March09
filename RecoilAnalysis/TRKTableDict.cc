//
// File generated by /afs/slac.stanford.edu/g/babar/package/root/5.14-00e/Linux24SL3_i386_gcc323/bin/rootcint at Tue Mar  2 05:31:33 2010

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TRKTableDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TCollectionProxy.h"
#include "TIsAProxy.h"
// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TRKTable_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TRKTable(void *p = 0);
   static void *newArray_TRKTable(Long_t size, void *p);
   static void delete_TRKTable(void *p);
   static void deleteArray_TRKTable(void *p);
   static void destruct_TRKTable(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TRKTable*)
   {
      ::TRKTable *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TRKTable >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TRKTable", ::TRKTable::Class_Version(), "TRKTable.hh", 17,
                  typeid(::TRKTable), DefineBehavior(ptr, ptr),
                  &::TRKTable::Dictionary, isa_proxy, 0,
                  sizeof(::TRKTable) );
      instance.SetNew(&new_TRKTable);
      instance.SetNewArray(&newArray_TRKTable);
      instance.SetDelete(&delete_TRKTable);
      instance.SetDeleteArray(&deleteArray_TRKTable);
      instance.SetDestructor(&destruct_TRKTable);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TRKTable*)
   {
      return GenerateInitInstanceLocal((::TRKTable*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TRKTable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TRKTable::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRKTable::Class_Name()
{
   return "TRKTable";
}

//______________________________________________________________________________
const char *TRKTable::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRKTable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRKTable::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRKTable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRKTable::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRKTable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRKTable::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRKTable*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TRKTable::Streamer(TBuffer &R__b)
{
   // Stream an object of class TRKTable.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fDataVector;
      fFileName.Streamer(R__b);
      R__b >> fVerbose;
      R__b >> DR;
      R__b >> fRandom;
      R__b >> fFlat;
      R__b.CheckByteCount(R__s, R__c, TRKTable::IsA());
   } else {
      R__c = R__b.WriteVersion(TRKTable::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fDataVector;
      fFileName.Streamer(R__b);
      R__b << fVerbose;
      R__b << DR;
      R__b << fRandom;
      R__b << fFlat;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TRKTable::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TRKTable.
      TClass *R__cl = ::TRKTable::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fDataVector", &fDataVector);
      R__insp.Inspect(R__cl, R__parent, "fFileName", &fFileName);
      fFileName.ShowMembers(R__insp, strcat(R__parent,"fFileName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fVerbose", &fVerbose);
      R__insp.Inspect(R__cl, R__parent, "DR", &DR);
      R__insp.Inspect(R__cl, R__parent, "*fRandom", &fRandom);
      R__insp.Inspect(R__cl, R__parent, "*fFlat", &fFlat);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TRKTable(void *p) {
      return  p ? new(p) ::TRKTable : new ::TRKTable;
   }
   static void *newArray_TRKTable(Long_t nElements, void *p) {
      return p ? new(p) ::TRKTable[nElements] : new ::TRKTable[nElements];
   }
   // Wrapper around operator delete
   static void delete_TRKTable(void *p) {
      delete ((::TRKTable*)p);
   }
   static void deleteArray_TRKTable(void *p) {
      delete [] ((::TRKTable*)p);
   }
   static void destruct_TRKTable(void *p) {
      typedef ::TRKTable current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TRKTable

/********************************************************
* TRKTableDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableTRKTableDict();

extern "C" void G__set_cpp_environmentTRKTableDict() {
  G__add_compiledheader("TROOT.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TRKTable.hh");
  G__cpp_reset_tagtableTRKTableDict();
}
#include <new>
extern "C" int G__cpp_dllrevTRKTableDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TRKTable */
static int G__TRKTableDict_160_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRKTable* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TRKTable[n];
     } else {
       p = new((void*) gvp) TRKTable[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TRKTable;
     } else {
       p = new((void*) gvp) TRKTable;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__TRKTableDictLN_TRKTable);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRKTable* p = NULL;
   long gvp = G__getgvp();
   //m: 2
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new TRKTable((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TRKTable((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__TRKTableDictLN_TRKTable);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TRKTable*) G__getstructoffset())->readFromFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TRKTable*) G__getstructoffset())->readFromFile();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRKTable*) G__getstructoffset())->setVerbosity((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRKTable*) G__getstructoffset())->printAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRKTable*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRKTable*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRKTable*) G__getstructoffset())->flush();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TRKTable*) G__getstructoffset())->getFileName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TRKTable*) G__getstructoffset())->getData((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TRKTable*) G__getstructoffset())->smear((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TRKTable*) G__getstructoffset())->smear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TRKTable*) G__getstructoffset())->shiftRel((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TRKTable*) G__getstructoffset())->shiftRel();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRKTable*) G__getstructoffset())->w8D((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRKTable*) G__getstructoffset())->w8R((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRKTable*) G__getstructoffset())->w8Derr((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRKTable*) G__getstructoffset())->w8Rerr((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TRKTable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRKTable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TRKTable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TRKTable::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TRKTable*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRKTable*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRKTable*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRKTable*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRKTable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRKTable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRKTable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRKTableDict_160_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRKTable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TRKTableDict_160_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TRKTable* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TRKTable(*(TRKTable*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__TRKTableDictLN_TRKTable);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TRKTable G__TTRKTable;
static int G__TRKTableDict_160_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (TRKTable*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TRKTable*) (soff+(sizeof(TRKTable)*i)))->~G__TTRKTable();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (TRKTable*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((TRKTable*) (soff))->~G__TTRKTable();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TRKTableDict_160_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRKTable* dest = (TRKTable*) G__getstructoffset();
   *dest = *(TRKTable*) libp->para[0].ref;
   const TRKTable& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TRKTable */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTRKTableDict {
 public:
  G__Sizep2memfuncTRKTableDict() {p=&G__Sizep2memfuncTRKTableDict::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTRKTableDict::*p)();
};

size_t G__get_sizep2memfuncTRKTableDict()
{
  G__Sizep2memfuncTRKTableDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTRKTableDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TRKTableDictLN_TRKTable))) {
     TRKTable *G__Lderived;
     G__Lderived=(TRKTable*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TRKTableDictLN_TRKTable),G__get_linked_tagnum(&G__TRKTableDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTRKTableDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__TRKTableDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TRKTableDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TRKTableDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TRKTableDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TRKTableDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TRKTable */
static void G__setup_memvarTRKTable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TRKTableDictLN_TRKTable));
   { TRKTable *p; p=(TRKTable*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__TRKTableDictLN_TList),-1,-1,4,"fDataVector=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__TRKTableDictLN_TString),-1,-1,4,"fFileName=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,-1,-1,4,"fVerbose=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"DR=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__TRKTableDictLN_TF1),-1,-1,4,"fRandom=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__TRKTableDictLN_TF1),-1,-1,4,"fFlat=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__TRKTableDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTRKTableDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTRKTable(void) {
   /* TRKTable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TRKTableDictLN_TRKTable));
   G__memfunc_setup("TRKTable",729,G__TRKTableDict_160_0_1, 105, G__get_linked_tagnum(&G__TRKTableDictLN_TRKTable), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRKTable",729,G__TRKTableDict_160_0_2, 105, G__get_linked_tagnum(&G__TRKTableDictLN_TRKTable), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readFromFile",1200,G__TRKTableDict_160_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 \"bla.dat\" filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVerbosity",1299,G__TRKTableDict_160_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printAll",838,G__TRKTableDict_160_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__TRKTableDict_160_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TRKTableDict_160_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", "clears the data Vector", (void*) NULL, 0);
   G__memfunc_setup("flush",546,G__TRKTableDict_160_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", "fills all cells with 0-0-0-0", (void*) NULL, 0);
   G__memfunc_setup("getFileName",1089,G__TRKTableDict_160_0_9, 117, G__get_linked_tagnum(&G__TRKTableDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getData",698,G__TRKTableDict_160_0_10, 85, G__get_linked_tagnum(&G__TRKTableDictLN_TRKData), -1, 0, 4, 1, 1, 0, 
"d - - 0 - p d - - 0 - m "
"d - - 0 - t d - - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("smear",536,G__TRKTableDict_160_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 0 mode", "replace eff. by smeared (gaussian with sigma = err) value", (void*) NULL, 0);
   G__memfunc_setup("shiftRel",833,G__TRKTableDict_160_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 0.1 shift", "replace eff. by shifted (oldvalue +/- shift*oldvalue) value", (void*) NULL, 0);
   G__memfunc_setup("w8D",243,G__TRKTableDict_160_0_13, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - momentum d - - 0 - mult "
"d - - 0 - theta d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("w8R",257,G__TRKTableDict_160_0_14, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - momentum d - - 0 - mult "
"d - - 0 - theta d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("w8Derr",572,G__TRKTableDict_160_0_15, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - momentum d - - 0 - mult "
"d - - 0 - theta d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("w8Rerr",586,G__TRKTableDict_160_0_16, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - momentum d - - 0 - mult "
"d - - 0 - theta d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printHeader",1142,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TRKTableDict_160_0_18, 85, G__get_linked_tagnum(&G__TRKTableDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&TRKTable::Class), 0);
   G__memfunc_setup("Class_Name",982,G__TRKTableDict_160_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TRKTable::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__TRKTableDict_160_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&TRKTable::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__TRKTableDict_160_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&TRKTable::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__TRKTableDict_160_0_22, 85, G__get_linked_tagnum(&G__TRKTableDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__TRKTableDict_160_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__TRKTableDict_160_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TRKTableDict_160_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TRKTableDict_160_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TRKTable::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TRKTableDict_160_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TRKTable::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__TRKTableDict_160_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TRKTable::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TRKTableDict_160_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TRKTable::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("TRKTable", 729, G__TRKTableDict_160_0_30, (int) ('i'), G__get_linked_tagnum(&G__TRKTableDictLN_TRKTable), -1, 0, 1, 1, 1, 0, "u 'TRKTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TRKTable", 855, G__TRKTableDict_160_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TRKTableDict_160_0_32, (int) ('u'), G__get_linked_tagnum(&G__TRKTableDictLN_TRKTable), -1, 1, 1, 1, 1, 0, "u 'TRKTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTRKTableDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTRKTableDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTRKTableDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TRKTableDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TRKTableDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TRKTableDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TRKTableDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TRKTableDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ofstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__TRKTableDictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__TRKTableDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__TRKTableDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TRKTableDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__TRKTableDictLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__TRKTableDictLN_TRKData = { "TRKData" , 99 , -1 };
G__linked_taginfo G__TRKTableDictLN_TRKTable = { "TRKTable" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTRKTableDict() {
  G__TRKTableDictLN_TClass.tagnum = -1 ;
  G__TRKTableDictLN_TBuffer.tagnum = -1 ;
  G__TRKTableDictLN_TMemberInspector.tagnum = -1 ;
  G__TRKTableDictLN_TObject.tagnum = -1 ;
  G__TRKTableDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__TRKTableDictLN_TList.tagnum = -1 ;
  G__TRKTableDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__TRKTableDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TRKTableDictLN_TString.tagnum = -1 ;
  G__TRKTableDictLN_TF1.tagnum = -1 ;
  G__TRKTableDictLN_TRKData.tagnum = -1 ;
  G__TRKTableDictLN_TRKTable.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTRKTableDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__TRKTableDictLN_TClass);
   G__get_linked_tagnum(&G__TRKTableDictLN_TBuffer);
   G__get_linked_tagnum(&G__TRKTableDictLN_TMemberInspector);
   G__get_linked_tagnum(&G__TRKTableDictLN_TObject);
   G__get_linked_tagnum(&G__TRKTableDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum(&G__TRKTableDictLN_TList);
   G__get_linked_tagnum(&G__TRKTableDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__TRKTableDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__TRKTableDictLN_TString);
   G__get_linked_tagnum(&G__TRKTableDictLN_TF1);
   G__get_linked_tagnum(&G__TRKTableDictLN_TRKData);
   G__tagtable_setup(G__get_linked_tagnum(&G__TRKTableDictLN_TRKTable),sizeof(TRKTable),-1,62720,"Testing TRKTable",G__setup_memvarTRKTable,G__setup_memfuncTRKTable);
}
extern "C" void G__cpp_setupTRKTableDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTRKTableDict()");
  G__set_cpp_environmentTRKTableDict();
  G__cpp_setup_tagtableTRKTableDict();

  G__cpp_setup_inheritanceTRKTableDict();

  G__cpp_setup_typetableTRKTableDict();

  G__cpp_setup_memvarTRKTableDict();

  G__cpp_setup_memfuncTRKTableDict();
  G__cpp_setup_globalTRKTableDict();
  G__cpp_setup_funcTRKTableDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTRKTableDict();
  return;
}
class G__cpp_setup_initTRKTableDict {
  public:
    G__cpp_setup_initTRKTableDict() { G__add_setup_func("TRKTableDict",(G__incsetup)(&G__cpp_setupTRKTableDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTRKTableDict() { G__remove_setup_func("TRKTableDict"); }
};
G__cpp_setup_initTRKTableDict G__cpp_setup_initializerTRKTableDict;

