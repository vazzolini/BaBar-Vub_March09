//
// File generated by /afs/slac.stanford.edu/g/babar/package/root/5.14-00e/Linux24SL3_i386_gcc323/bin/rootcint at Tue Mar  2 05:31:20 2010

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "mesDataDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TCollectionProxy.h"
#include "TIsAProxy.h"
// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void mesData_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_mesData(void *p = 0);
   static void *newArray_mesData(Long_t size, void *p);
   static void delete_mesData(void *p);
   static void deleteArray_mesData(void *p);
   static void destruct_mesData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::mesData*)
   {
      ::mesData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::mesData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("mesData", ::mesData::Class_Version(), "mesData.hh", 8,
                  typeid(::mesData), DefineBehavior(ptr, ptr),
                  &::mesData::Dictionary, isa_proxy, 0,
                  sizeof(::mesData) );
      instance.SetNew(&new_mesData);
      instance.SetNewArray(&newArray_mesData);
      instance.SetDelete(&delete_mesData);
      instance.SetDeleteArray(&deleteArray_mesData);
      instance.SetDestructor(&destruct_mesData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::mesData*)
   {
      return GenerateInitInstanceLocal((::mesData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::mesData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *mesData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *mesData::Class_Name()
{
   return "mesData";
}

//______________________________________________________________________________
const char *mesData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::mesData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int mesData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::mesData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void mesData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::mesData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *mesData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::mesData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void mesData::Streamer(TBuffer &R__b)
{
   // Stream an object of class mesData.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      _name.Streamer(R__b);
      R__b >> _sig;
      R__b >> _sigE;
      R__b >> _bg;
      R__b >> _bgE;
      R__b >> _pu;
      R__b >> _puE;
      R__b >> fSigma;
      R__b >> fSigmaE;
      R__b >> fMean;
      R__b >> fMeanE;
      R__b.CheckByteCount(R__s, R__c, mesData::IsA());
   } else {
      R__c = R__b.WriteVersion(mesData::IsA(), kTRUE);
      _name.Streamer(R__b);
      R__b << _sig;
      R__b << _sigE;
      R__b << _bg;
      R__b << _bgE;
      R__b << _pu;
      R__b << _puE;
      R__b << fSigma;
      R__b << fSigmaE;
      R__b << fMean;
      R__b << fMeanE;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void mesData::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class mesData.
      TClass *R__cl = ::mesData::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_name", &_name);
      _name.ShowMembers(R__insp, strcat(R__parent,"_name.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_sig", &_sig);
      R__insp.Inspect(R__cl, R__parent, "_sigE", &_sigE);
      R__insp.Inspect(R__cl, R__parent, "_bg", &_bg);
      R__insp.Inspect(R__cl, R__parent, "_bgE", &_bgE);
      R__insp.Inspect(R__cl, R__parent, "_pu", &_pu);
      R__insp.Inspect(R__cl, R__parent, "_puE", &_puE);
      R__insp.Inspect(R__cl, R__parent, "fSigma", &fSigma);
      R__insp.Inspect(R__cl, R__parent, "fSigmaE", &fSigmaE);
      R__insp.Inspect(R__cl, R__parent, "fMean", &fMean);
      R__insp.Inspect(R__cl, R__parent, "fMeanE", &fMeanE);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_mesData(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::mesData : new ::mesData;
   }
   static void *newArray_mesData(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::mesData[nElements] : new ::mesData[nElements];
   }
   // Wrapper around operator delete
   static void delete_mesData(void *p) {
      delete ((::mesData*)p);
   }
   static void deleteArray_mesData(void *p) {
      delete [] ((::mesData*)p);
   }
   static void destruct_mesData(void *p) {
      typedef ::mesData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::mesData

/********************************************************
* mesDataDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtablemesDataDict();

extern "C" void G__set_cpp_environmentmesDataDict() {
  G__add_compiledheader("TROOT.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("mesData.hh");
  G__cpp_reset_tagtablemesDataDict();
}
#include <new>
extern "C" int G__cpp_dllrevmesDataDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* mesData */
static int G__mesDataDict_131_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   mesData* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new mesData[n];
     } else {
       p = new((void*) gvp) mesData[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new mesData;
     } else {
       p = new((void*) gvp) mesData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__mesDataDictLN_mesData);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   mesData* p = NULL;
   long gvp = G__getgvp();
   //m: 7
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new mesData(
*((TString*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) mesData(
*((TString*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__mesDataDictLN_mesData);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   mesData* p = NULL;
   long gvp = G__getgvp();
   //m: 1
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new mesData((double) G__double(libp->para[0]));
   } else {
     p = new((void*) gvp) mesData((double) G__double(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__mesDataDictLN_mesData);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   mesData* p = NULL;
   long gvp = G__getgvp();
   //m: 1
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new mesData(*(mesData*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) mesData(*(mesData*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__mesDataDictLN_mesData);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const mesData& obj = ((mesData*) G__getstructoffset())->operator=(*(mesData*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((mesData*) G__getstructoffset())->theName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesData*) G__getstructoffset())->theSig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesData*) G__getstructoffset())->theErrSig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesData*) G__getstructoffset())->theBg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesData*) G__getstructoffset())->theErrBg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesData*) G__getstructoffset())->thePu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesData*) G__getstructoffset())->theErrPu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesData*) G__getstructoffset())->getSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesData*) G__getstructoffset())->getSigmaE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesData*) G__getstructoffset())->getMean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesData*) G__getstructoffset())->getMeanE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mesData*) G__getstructoffset())->setSigma((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mesData*) G__getstructoffset())->setSigmaE((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mesData*) G__getstructoffset())->setMean((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mesData*) G__getstructoffset())->setMeanE((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) mesData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) mesData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) mesData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      mesData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const mesData*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mesData*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mesData*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mesData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) mesData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) mesData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) mesData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesDataDict_131_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) mesData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef mesData G__TmesData;
static int G__mesDataDict_131_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (mesData*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((mesData*) (soff+(sizeof(mesData)*i)))->~G__TmesData();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (mesData*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((mesData*) (soff))->~G__TmesData();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* mesData */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncmesDataDict {
 public:
  G__Sizep2memfuncmesDataDict() {p=&G__Sizep2memfuncmesDataDict::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncmesDataDict::*p)();
};

size_t G__get_sizep2memfuncmesDataDict()
{
  G__Sizep2memfuncmesDataDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancemesDataDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablemesDataDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__mesDataDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__mesDataDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__mesDataDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__mesDataDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__mesDataDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* mesData */
static void G__setup_memvarmesData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__mesDataDictLN_mesData));
   { mesData *p; p=(mesData*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__mesDataDictLN_TString),-1,-1,4,"_name=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"_sig=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"_sigE=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"_bg=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"_bgE=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"_pu=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"_puE=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fSigma=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fSigmaE=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fMean=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fMeanE=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__mesDataDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarmesDataDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncmesData(void) {
   /* mesData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__mesDataDictLN_mesData));
   G__memfunc_setup("mesData",703,G__mesDataDict_131_0_1, 105, G__get_linked_tagnum(&G__mesDataDictLN_mesData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mesData",703,G__mesDataDict_131_0_2, 105, G__get_linked_tagnum(&G__mesDataDictLN_mesData), -1, 0, 7, 1, 1, 0, 
"u 'TString' - 0 - name d - - 0 - sig "
"d - - 0 - sigE d - - 0 - pu "
"d - - 0 - puE d - - 0 - bg "
"d - - 0 - bgE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mesData",703,G__mesDataDict_131_0_3, 105, G__get_linked_tagnum(&G__mesDataDictLN_mesData), -1, 0, 1, 1, 1, 0, "d - - 0 - sig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mesData",703,G__mesDataDict_131_0_4, 105, G__get_linked_tagnum(&G__mesDataDictLN_mesData), -1, 0, 1, 1, 1, 0, "u 'mesData' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__mesDataDict_131_0_5, 117, G__get_linked_tagnum(&G__mesDataDictLN_mesData), -1, 1, 1, 1, 1, 0, "u 'mesData' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theName",706,G__mesDataDict_131_0_6, 117, G__get_linked_tagnum(&G__mesDataDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theSig",612,G__mesDataDict_131_0_7, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theErrSig",909,G__mesDataDict_131_0_8, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theBg",490,G__mesDataDict_131_0_9, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theErrBg",787,G__mesDataDict_131_0_10, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("thePu",518,G__mesDataDict_131_0_11, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theErrPu",815,G__mesDataDict_131_0_12, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSigma",817,G__mesDataDict_131_0_13, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSigmaE",886,G__mesDataDict_131_0_14, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMean",705,G__mesDataDict_131_0_15, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMeanE",774,G__mesDataDict_131_0_16, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSigma",829,G__mesDataDict_131_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSigmaE",898,G__mesDataDict_131_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMean",717,G__mesDataDict_131_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMeanE",786,G__mesDataDict_131_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__mesDataDict_131_0_21, 85, G__get_linked_tagnum(&G__mesDataDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&mesData::Class), 0);
   G__memfunc_setup("Class_Name",982,G__mesDataDict_131_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&mesData::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__mesDataDict_131_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&mesData::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__mesDataDict_131_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&mesData::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__mesDataDict_131_0_25, 85, G__get_linked_tagnum(&G__mesDataDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__mesDataDict_131_0_26, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__mesDataDict_131_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__mesDataDict_131_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__mesDataDict_131_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&mesData::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__mesDataDict_131_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&mesData::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__mesDataDict_131_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&mesData::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__mesDataDict_131_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&mesData::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~mesData", 829, G__mesDataDict_131_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncmesDataDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalmesDataDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcmesDataDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__mesDataDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__mesDataDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__mesDataDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__mesDataDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__mesDataDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__mesDataDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__mesDataDictLN_mesData = { "mesData" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablemesDataDict() {
  G__mesDataDictLN_TClass.tagnum = -1 ;
  G__mesDataDictLN_TBuffer.tagnum = -1 ;
  G__mesDataDictLN_TMemberInspector.tagnum = -1 ;
  G__mesDataDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__mesDataDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__mesDataDictLN_TString.tagnum = -1 ;
  G__mesDataDictLN_mesData.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablemesDataDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__mesDataDictLN_TClass);
   G__get_linked_tagnum(&G__mesDataDictLN_TBuffer);
   G__get_linked_tagnum(&G__mesDataDictLN_TMemberInspector);
   G__get_linked_tagnum(&G__mesDataDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__mesDataDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__mesDataDictLN_TString);
   G__tagtable_setup(G__get_linked_tagnum(&G__mesDataDictLN_mesData),sizeof(mesData),-1,36608,(char*)NULL,G__setup_memvarmesData,G__setup_memfuncmesData);
}
extern "C" void G__cpp_setupmesDataDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupmesDataDict()");
  G__set_cpp_environmentmesDataDict();
  G__cpp_setup_tagtablemesDataDict();

  G__cpp_setup_inheritancemesDataDict();

  G__cpp_setup_typetablemesDataDict();

  G__cpp_setup_memvarmesDataDict();

  G__cpp_setup_memfuncmesDataDict();
  G__cpp_setup_globalmesDataDict();
  G__cpp_setup_funcmesDataDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncmesDataDict();
  return;
}
class G__cpp_setup_initmesDataDict {
  public:
    G__cpp_setup_initmesDataDict() { G__add_setup_func("mesDataDict",(G__incsetup)(&G__cpp_setupmesDataDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initmesDataDict() { G__remove_setup_func("mesDataDict"); }
};
G__cpp_setup_initmesDataDict G__cpp_setup_initializermesDataDict;

