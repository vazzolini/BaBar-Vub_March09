//
// File generated by /afs/slac.stanford.edu/g/babar/package/root/5.14-00e/Linux24SL3_i386_gcc323/bin/rootcint at Tue Mar  2 05:31:43 2010

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "mesFITDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TCollectionProxy.h"
#include "TIsAProxy.h"
// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void mesFIT_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_mesFIT(void *p = 0);
   static void *newArray_mesFIT(Long_t size, void *p);
   static void delete_mesFIT(void *p);
   static void deleteArray_mesFIT(void *p);
   static void destruct_mesFIT(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::mesFIT*)
   {
      ::mesFIT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::mesFIT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("mesFIT", ::mesFIT::Class_Version(), "mesFIT.hh", 8,
                  typeid(::mesFIT), DefineBehavior(ptr, ptr),
                  &::mesFIT::Dictionary, isa_proxy, 0,
                  sizeof(::mesFIT) );
      instance.SetNew(&new_mesFIT);
      instance.SetNewArray(&newArray_mesFIT);
      instance.SetDelete(&delete_mesFIT);
      instance.SetDeleteArray(&deleteArray_mesFIT);
      instance.SetDestructor(&destruct_mesFIT);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::mesFIT*)
   {
      return GenerateInitInstanceLocal((::mesFIT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::mesFIT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *mesFIT::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *mesFIT::Class_Name()
{
   return "mesFIT";
}

//______________________________________________________________________________
const char *mesFIT::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::mesFIT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int mesFIT::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::mesFIT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void mesFIT::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::mesFIT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *mesFIT::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::mesFIT*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void mesFIT::Streamer(TBuffer &R__b)
{
   // Stream an object of class mesFIT.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> htemp;
      R__b >> fHist;
      R__b >> fitHist;
      R__b >> ftemp;
      R__b >> f0;
      R__b >> f1;
      R__b >> f2;
      R__b >> f3;
      R__b >> f4;
      R__b >> _histNameModifier;
      R__b >> _newAlgorithm;
      R__b >> fEbeam;
      R__b >> fFitMode;
      R__b.ReadStaticArray((double*)fPar);
      R__b.ReadStaticArray((double*)fParLo);
      R__b.ReadStaticArray((double*)fParHi);
      R__b.ReadStaticArray((double*)fPar_AR);
      R__b.ReadStaticArray((double*)fPar_ARLo);
      R__b.ReadStaticArray((double*)fPar_ARHi);
      R__b.ReadStaticArray((double*)fPar_ARE);
      R__b >> fchi2;
      R__b.ReadStaticArray((int*)fFixPar);
      R__b.ReadStaticArray((int*)fLimitPar);
      R__b.ReadStaticArray((int*)fChangePar);
      R__b >> fR;
      R__b >> fRE;
      R__b >> fSg;
      R__b >> fSgE;
      R__b >> fBg;
      R__b >> fBgE;
      R__b >> fSb;
      R__b >> fSbE;
      R__b >> fPur;
      R__b >> fPurE;
      R__b >> fSigma;
      R__b >> fSigmaE;
      R__b >> fMean;
      R__b >> fMeanE;
      R__b >> farg1;
      R__b >> farg2;
      R__b >> farg1e;
      R__b >> farg2e;
      R__b >> fDontChange;
      R__b >> fVerbose;
      R__b >> fLo;
      R__b >> fHi;
      R__b >> fSbLo;
      R__b >> fSbHi;
      R__b >> fPrintLevel;
      R__b >> fMesMinEvents;
      R__b >> fMesMin;
      R__b >> fTxtSize;
      R__b >> fTxtX;
      R__b >> fTxtS;
      R__b >> fLabelSize;
      R__b >> fTitleSize;
      R__b >> fOffsetX;
      R__b >> fOffsetY;
      R__b >> fPadShrinkX;
      R__b >> fPadShrinkY;
      R__b >> fMarkerSize;
      R__b >> fMarkerStyle;
      R__b >> fLineW;
      R__b >> tl;
      R__b.ReadStaticArray((char*)line);
      R__b.CheckByteCount(R__s, R__c, mesFIT::IsA());
   } else {
      R__c = R__b.WriteVersion(mesFIT::IsA(), kTRUE);
      R__b << (TObject*)htemp;
      R__b << (TObject*)fHist;
      R__b << (TObject*)fitHist;
      R__b << ftemp;
      R__b << f0;
      R__b << f1;
      R__b << f2;
      R__b << f3;
      R__b << f4;
      R__b << _histNameModifier;
      R__b << _newAlgorithm;
      R__b << fEbeam;
      R__b << fFitMode;
      R__b.WriteArray(fPar, 10);
      R__b.WriteArray(fParLo, 10);
      R__b.WriteArray(fParHi, 10);
      R__b.WriteArray(fPar_AR, 2);
      R__b.WriteArray(fPar_ARLo, 2);
      R__b.WriteArray(fPar_ARHi, 2);
      R__b.WriteArray(fPar_ARE, 2);
      R__b << fchi2;
      R__b.WriteArray(fFixPar, 10);
      R__b.WriteArray(fLimitPar, 10);
      R__b.WriteArray(fChangePar, 10);
      R__b << fR;
      R__b << fRE;
      R__b << fSg;
      R__b << fSgE;
      R__b << fBg;
      R__b << fBgE;
      R__b << fSb;
      R__b << fSbE;
      R__b << fPur;
      R__b << fPurE;
      R__b << fSigma;
      R__b << fSigmaE;
      R__b << fMean;
      R__b << fMeanE;
      R__b << farg1;
      R__b << farg2;
      R__b << farg1e;
      R__b << farg2e;
      R__b << fDontChange;
      R__b << fVerbose;
      R__b << fLo;
      R__b << fHi;
      R__b << fSbLo;
      R__b << fSbHi;
      R__b << fPrintLevel;
      R__b << fMesMinEvents;
      R__b << fMesMin;
      R__b << fTxtSize;
      R__b << fTxtX;
      R__b << fTxtS;
      R__b << fLabelSize;
      R__b << fTitleSize;
      R__b << fOffsetX;
      R__b << fOffsetY;
      R__b << fPadShrinkX;
      R__b << fPadShrinkY;
      R__b << fMarkerSize;
      R__b << fMarkerStyle;
      R__b << fLineW;
      R__b << tl;
      R__b.WriteArray(line, 200);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void mesFIT::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class mesFIT.
      TClass *R__cl = ::mesFIT::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*htemp", &htemp);
      R__insp.Inspect(R__cl, R__parent, "*fHist", &fHist);
      R__insp.Inspect(R__cl, R__parent, "*fitHist", &fitHist);
      R__insp.Inspect(R__cl, R__parent, "*ftemp", &ftemp);
      R__insp.Inspect(R__cl, R__parent, "*f0", &f0);
      R__insp.Inspect(R__cl, R__parent, "*f1", &f1);
      R__insp.Inspect(R__cl, R__parent, "*f2", &f2);
      R__insp.Inspect(R__cl, R__parent, "*f3", &f3);
      R__insp.Inspect(R__cl, R__parent, "*f4", &f4);
      R__insp.Inspect(R__cl, R__parent, "_histNameModifier", &_histNameModifier);
      R__insp.Inspect(R__cl, R__parent, "_newAlgorithm", &_newAlgorithm);
      R__insp.Inspect(R__cl, R__parent, "fEbeam", &fEbeam);
      R__insp.Inspect(R__cl, R__parent, "fFitMode", &fFitMode);
      R__insp.Inspect(R__cl, R__parent, "fPar[10]", fPar);
      R__insp.Inspect(R__cl, R__parent, "fParLo[10]", fParLo);
      R__insp.Inspect(R__cl, R__parent, "fParHi[10]", fParHi);
      R__insp.Inspect(R__cl, R__parent, "fPar_AR[2]", fPar_AR);
      R__insp.Inspect(R__cl, R__parent, "fPar_ARLo[2]", fPar_ARLo);
      R__insp.Inspect(R__cl, R__parent, "fPar_ARHi[2]", fPar_ARHi);
      R__insp.Inspect(R__cl, R__parent, "fPar_ARE[2]", fPar_ARE);
      R__insp.Inspect(R__cl, R__parent, "fchi2", &fchi2);
      R__insp.Inspect(R__cl, R__parent, "fFixPar[10]", fFixPar);
      R__insp.Inspect(R__cl, R__parent, "fLimitPar[10]", fLimitPar);
      R__insp.Inspect(R__cl, R__parent, "fChangePar[10]", fChangePar);
      R__insp.Inspect(R__cl, R__parent, "fR", &fR);
      R__insp.Inspect(R__cl, R__parent, "fRE", &fRE);
      R__insp.Inspect(R__cl, R__parent, "fSg", &fSg);
      R__insp.Inspect(R__cl, R__parent, "fSgE", &fSgE);
      R__insp.Inspect(R__cl, R__parent, "fBg", &fBg);
      R__insp.Inspect(R__cl, R__parent, "fBgE", &fBgE);
      R__insp.Inspect(R__cl, R__parent, "fSb", &fSb);
      R__insp.Inspect(R__cl, R__parent, "fSbE", &fSbE);
      R__insp.Inspect(R__cl, R__parent, "fPur", &fPur);
      R__insp.Inspect(R__cl, R__parent, "fPurE", &fPurE);
      R__insp.Inspect(R__cl, R__parent, "fSigma", &fSigma);
      R__insp.Inspect(R__cl, R__parent, "fSigmaE", &fSigmaE);
      R__insp.Inspect(R__cl, R__parent, "fMean", &fMean);
      R__insp.Inspect(R__cl, R__parent, "fMeanE", &fMeanE);
      R__insp.Inspect(R__cl, R__parent, "farg1", &farg1);
      R__insp.Inspect(R__cl, R__parent, "farg2", &farg2);
      R__insp.Inspect(R__cl, R__parent, "farg1e", &farg1e);
      R__insp.Inspect(R__cl, R__parent, "farg2e", &farg2e);
      R__insp.Inspect(R__cl, R__parent, "fDontChange", &fDontChange);
      R__insp.Inspect(R__cl, R__parent, "fVerbose", &fVerbose);
      R__insp.Inspect(R__cl, R__parent, "fLo", &fLo);
      R__insp.Inspect(R__cl, R__parent, "fHi", &fHi);
      R__insp.Inspect(R__cl, R__parent, "fSbLo", &fSbLo);
      R__insp.Inspect(R__cl, R__parent, "fSbHi", &fSbHi);
      R__insp.Inspect(R__cl, R__parent, "fPrintLevel", &fPrintLevel);
      R__insp.Inspect(R__cl, R__parent, "fMesMinEvents", &fMesMinEvents);
      R__insp.Inspect(R__cl, R__parent, "fMesMin", &fMesMin);
      R__insp.Inspect(R__cl, R__parent, "fTxtSize", &fTxtSize);
      R__insp.Inspect(R__cl, R__parent, "fTxtX", &fTxtX);
      R__insp.Inspect(R__cl, R__parent, "fTxtS", &fTxtS);
      R__insp.Inspect(R__cl, R__parent, "fLabelSize", &fLabelSize);
      R__insp.Inspect(R__cl, R__parent, "fTitleSize", &fTitleSize);
      R__insp.Inspect(R__cl, R__parent, "fOffsetX", &fOffsetX);
      R__insp.Inspect(R__cl, R__parent, "fOffsetY", &fOffsetY);
      R__insp.Inspect(R__cl, R__parent, "fPadShrinkX", &fPadShrinkX);
      R__insp.Inspect(R__cl, R__parent, "fPadShrinkY", &fPadShrinkY);
      R__insp.Inspect(R__cl, R__parent, "fMarkerSize", &fMarkerSize);
      R__insp.Inspect(R__cl, R__parent, "fMarkerStyle", &fMarkerStyle);
      R__insp.Inspect(R__cl, R__parent, "fLineW", &fLineW);
      R__insp.Inspect(R__cl, R__parent, "*tl", &tl);
      R__insp.Inspect(R__cl, R__parent, "line[200]", line);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_mesFIT(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::mesFIT : new ::mesFIT;
   }
   static void *newArray_mesFIT(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::mesFIT[nElements] : new ::mesFIT[nElements];
   }
   // Wrapper around operator delete
   static void delete_mesFIT(void *p) {
      delete ((::mesFIT*)p);
   }
   static void deleteArray_mesFIT(void *p) {
      delete [] ((::mesFIT*)p);
   }
   static void destruct_mesFIT(void *p) {
      typedef ::mesFIT current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::mesFIT

/********************************************************
* mesFITDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtablemesFITDict();

extern "C" void G__set_cpp_environmentmesFITDict() {
  G__add_compiledheader("TROOT.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("mesFIT.hh");
  G__cpp_reset_tagtablemesFITDict();
}
#include <new>
extern "C" int G__cpp_dllrevmesFITDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* mesFIT */
static int G__mesFITDict_206_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   mesFIT* p = NULL;
   long gvp = G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new mesFIT((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) mesFIT((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == G__PVOID) || (gvp == 0)) {
         p = new mesFIT[n];
       } else {
         p = new((void*) gvp) mesFIT[n];
       }
     } else {
       if ((gvp == G__PVOID) || (gvp == 0)) {
         p = new mesFIT;
       } else {
         p = new((void*) gvp) mesFIT;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__mesFITDictLN_mesFIT);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   mesFIT* p = NULL;
   long gvp = G__getgvp();
   switch (libp->paran) {
   case 7:
     //m: 7
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new mesFIT(
(TH1D*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) mesFIT(
(TH1D*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new mesFIT(
(TH1D*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) mesFIT(
(TH1D*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new mesFIT(
(TH1D*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) mesFIT(
(TH1D*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new mesFIT(
(TH1D*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) mesFIT(
(TH1D*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new mesFIT(
(TH1D*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) mesFIT(
(TH1D*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new mesFIT((TH1D*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) mesFIT((TH1D*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new mesFIT((TH1D*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) mesFIT((TH1D*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__mesFITDictLN_mesFIT);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mesFIT*) G__getstructoffset())->hist((TH1D*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((mesFIT*) G__getstructoffset())->fitGauss((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((mesFIT*) G__getstructoffset())->fitGauss((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((mesFIT*) G__getstructoffset())->fitGauss();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((mesFIT*) G__getstructoffset())->fitCB((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((mesFIT*) G__getstructoffset())->fitCB((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((mesFIT*) G__getstructoffset())->fitCB((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((mesFIT*) G__getstructoffset())->fitCB();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mesFIT*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((mesFIT*) G__getstructoffset())->init((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((mesFIT*) G__getstructoffset())->init();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesFIT*) G__getstructoffset())->getSig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesFIT*) G__getstructoffset())->getSigE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesFIT*) G__getstructoffset())->getBg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesFIT*) G__getstructoffset())->getBgE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesFIT*) G__getstructoffset())->getPur());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesFIT*) G__getstructoffset())->getPurE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesFIT*) G__getstructoffset())->getSb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesFIT*) G__getstructoffset())->getSbE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesFIT*) G__getstructoffset())->getR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesFIT*) G__getstructoffset())->getRErr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesFIT*) G__getstructoffset())->getSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesFIT*) G__getstructoffset())->getSigmaE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesFIT*) G__getstructoffset())->getMean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesFIT*) G__getstructoffset())->getMeanE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesFIT*) G__getstructoffset())->getPar((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mesFIT*) G__getstructoffset())->getChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((mesFIT*) G__getstructoffset())->GetResidual((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mesFIT*) G__getstructoffset())->setSigma((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mesFIT*) G__getstructoffset())->setSigmaE((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mesFIT*) G__getstructoffset())->setMean((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mesFIT*) G__getstructoffset())->setMeanE((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((mesFIT*) G__getstructoffset())->setPrintLevel((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((mesFIT*) G__getstructoffset())->setPrintLevel();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((mesFIT*) G__getstructoffset())->setDontChange((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((mesFIT*) G__getstructoffset())->setDontChange();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((mesFIT*) G__getstructoffset())->setTextSize((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((mesFIT*) G__getstructoffset())->setTextSize();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((mesFIT*) G__getstructoffset())->setMesMin((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((mesFIT*) G__getstructoffset())->setMesMin();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((mesFIT*) G__getstructoffset())->setPars((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((mesFIT*) G__getstructoffset())->setPars((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((mesFIT*) G__getstructoffset())->setPars((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((mesFIT*) G__getstructoffset())->setPars((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((mesFIT*) G__getstructoffset())->setPars((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((mesFIT*) G__getstructoffset())->setPars((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((mesFIT*) G__getstructoffset())->setPars();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((mesFIT*) G__getstructoffset())->setTitleSize((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((mesFIT*) G__getstructoffset())->setTitleSize();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((mesFIT*) G__getstructoffset())->setLabelSize((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((mesFIT*) G__getstructoffset())->setLabelSize();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((mesFIT*) G__getstructoffset())->setPadShrinkX((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((mesFIT*) G__getstructoffset())->setPadShrinkX();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((mesFIT*) G__getstructoffset())->setPadShrinkY((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((mesFIT*) G__getstructoffset())->setPadShrinkY();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((mesFIT*) G__getstructoffset())->setOffsetX((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((mesFIT*) G__getstructoffset())->setOffsetX();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((mesFIT*) G__getstructoffset())->setOffsetY((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((mesFIT*) G__getstructoffset())->setOffsetY();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((mesFIT*) G__getstructoffset())->setMarkerSize((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((mesFIT*) G__getstructoffset())->setMarkerSize();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((mesFIT*) G__getstructoffset())->setMarkerStyle((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((mesFIT*) G__getstructoffset())->setMarkerStyle();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((mesFIT*) G__getstructoffset())->setLineWidth((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((mesFIT*) G__getstructoffset())->setLineWidth();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((mesFIT*) G__getstructoffset())->setVerbose((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((mesFIT*) G__getstructoffset())->setVerbose();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mesFIT*) G__getstructoffset())->setPar((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mesFIT*) G__getstructoffset())->fixPar((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mesFIT*) G__getstructoffset())->limitPar((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mesFIT*) G__getstructoffset())->releasePar((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      ((mesFIT*) G__getstructoffset())->setTitles(
(TH1*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5])
, (float) G__double(libp->para[6]), (int) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((mesFIT*) G__getstructoffset())->setTitles(
(TH1*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5])
, (float) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((mesFIT*) G__getstructoffset())->setTitles((TH1*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((mesFIT*) G__getstructoffset())->setTitles((TH1*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((mesFIT*) G__getstructoffset())->setTitles((TH1*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((mesFIT*) G__getstructoffset())->setTitles((TH1*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((mesFIT*) G__getstructoffset())->setHist((TH1*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((mesFIT*) G__getstructoffset())->setHist((TH1*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((mesFIT*) G__getstructoffset())->setHist((TH1*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((mesFIT*) G__getstructoffset())->setHist((TH1*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((mesFIT*) G__getstructoffset())->setHist((TH1*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((mesFIT*) G__getstructoffset())->shrinkPad((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((mesFIT*) G__getstructoffset())->shrinkPad((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((mesFIT*) G__getstructoffset())->shrinkPad((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((mesFIT*) G__getstructoffset())->shrinkPad((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((mesFIT*) G__getstructoffset())->shrinkPad();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) mesFIT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) mesFIT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) mesFIT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      mesFIT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const mesFIT*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mesFIT*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mesFIT*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mesFIT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) mesFIT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) mesFIT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) mesFIT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mesFITDict_206_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) mesFIT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__mesFITDict_206_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   mesFIT* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new mesFIT(*(mesFIT*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__mesFITDictLN_mesFIT);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef mesFIT G__TmesFIT;
static int G__mesFITDict_206_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (mesFIT*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((mesFIT*) (soff+(sizeof(mesFIT)*i)))->~G__TmesFIT();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (mesFIT*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((mesFIT*) (soff))->~G__TmesFIT();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__mesFITDict_206_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   mesFIT* dest = (mesFIT*) G__getstructoffset();
   *dest = *(mesFIT*) libp->para[0].ref;
   const mesFIT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* mesFIT */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncmesFITDict {
 public:
  G__Sizep2memfuncmesFITDict() {p=&G__Sizep2memfuncmesFITDict::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncmesFITDict::*p)();
};

size_t G__get_sizep2memfuncmesFITDict()
{
  G__Sizep2memfuncmesFITDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancemesFITDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablemesFITDict() {

   /* Setting up typedef entry */
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__mesFITDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__mesFITDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__mesFITDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__mesFITDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__mesFITDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<void*,Version_t>",117,G__get_linked_tagnum(&G__mesFITDictLN_multimaplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<void*,short>",117,G__get_linked_tagnum(&G__mesFITDictLN_multimaplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<void*,short,less<void*>>",117,G__get_linked_tagnum(&G__mesFITDictLN_multimaplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__mesFITDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__mesFITDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* mesFIT */
static void G__setup_memvarmesFIT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__mesFITDictLN_mesFIT));
   { mesFIT *p; p=(mesFIT*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__mesFITDictLN_TH1D),-1,-1,4,"htemp=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__mesFITDictLN_TH1D),-1,-1,4,"fHist=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__mesFITDictLN_TH1D),-1,-1,4,"fitHist=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__mesFITDictLN_TF1),-1,-1,4,"ftemp=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__mesFITDictLN_TF1),-1,-1,4,"f0=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__mesFITDictLN_TF1),-1,-1,4,"f1=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__mesFITDictLN_TF1),-1,-1,4,"f2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__mesFITDictLN_TF1),-1,-1,4,"f3=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__mesFITDictLN_TF1),-1,-1,4,"f4=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,-1,-1,4,"_histNameModifier=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,-1,-1,4,"_newAlgorithm=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fEbeam=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,-1,-1,4,"fFitMode=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fPar[10]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fParLo[10]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fParHi[10]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fPar_AR[2]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fPar_ARLo[2]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fPar_ARHi[2]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fPar_ARE[2]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fchi2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,-1,-1,4,"fFixPar[10]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,-1,-1,4,"fLimitPar[10]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,-1,-1,4,"fChangePar[10]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fR=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fRE=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fSg=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fSgE=",0,"signal     in signal region: fLo   .. fHi");
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fBg=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fBgE=",0,"background in signal region: fLo   .. fHi");
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fSb=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fSbE=",0,"integral of sideband:        fSbLo .. fSbHi");
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fPur=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fPurE=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fSigma=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fSigmaE=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fMean=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fMeanE=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"farg1=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"farg2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"farg1e=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"farg2e=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDontChange=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,-1,-1,4,"fVerbose=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fLo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fHi=",0,"signal integration limits");
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fSbLo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fSbHi=",0,"side-band integration limits");
   G__memvar_setup((void*)NULL,105,0,0,-1,-1,-1,4,"fPrintLevel=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fMesMinEvents=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fMesMin=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fTxtSize=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fTxtX=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fTxtS=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fLabelSize=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fTitleSize=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fOffsetX=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fOffsetY=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fPadShrinkX=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fPadShrinkY=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fMarkerSize=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,-1,-1,4,"fMarkerStyle=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,-1,-1,4,"fLineW=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__mesFITDictLN_TLatex),-1,-1,4,"tl=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,99,0,0,-1,-1,-1,4,"line[200]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__mesFITDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarmesFITDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncmesFIT(void) {
   /* mesFIT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__mesFITDictLN_mesFIT));
   G__memfunc_setup("mesFIT",552,G__mesFITDict_206_0_1, 105, G__get_linked_tagnum(&G__mesFITDictLN_mesFIT), -1, 0, 1, 1, 1, 0, "i - - 0 0 histNameModifier", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mesFIT",552,G__mesFITDict_206_0_2, 105, G__get_linked_tagnum(&G__mesFITDictLN_mesFIT), -1, 0, 7, 1, 1, 0, 
"U 'TH1D' - 0 - h C - - 10 \"cb\" f "
"i - - 0 0 setting i - - 0 0 histNameModifier "
"i - - 0 999 algorithm d - - 0 10.5795 en_beam "
"d - - 0 5.26 arg_uplim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hist",440,G__mesFITDict_206_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH1D' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fitGauss",838,G__mesFITDict_206_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 0 printLevel i - - 0 0 setting", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fitCB",456,G__mesFITDict_206_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 0 printLevel i - - 0 0 setting "
"i - - 0 999 newAlgorithm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__mesFITDict_206_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__mesFITDict_206_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 0 pass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSig",611,G__mesFITDict_206_0_8, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSigE",680,G__mesFITDict_206_0_9, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBg",489,G__mesFITDict_206_0_10, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBgE",558,G__mesFITDict_206_0_11, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPur",631,G__mesFITDict_206_0_12, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPurE",700,G__mesFITDict_206_0_13, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSb",501,G__mesFITDict_206_0_14, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSbE",570,G__mesFITDict_206_0_15, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getR",402,G__mesFITDict_206_0_16, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRErr",699,G__mesFITDict_206_0_17, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSigma",817,G__mesFITDict_206_0_18, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSigmaE",886,G__mesFITDict_206_0_19, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMean",705,G__mesFITDict_206_0_20, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMeanE",774,G__mesFITDict_206_0_21, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPar",611,G__mesFITDict_206_0_22, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ipar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChi2",646,G__mesFITDict_206_0_23, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetResidual",1113,G__mesFITDict_206_0_24, 85, G__get_linked_tagnum(&G__mesFITDictLN_TH1D), -1, 0, 1, 1, 1, 0, "i - - 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSigma",829,G__mesFITDict_206_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSigmaE",898,G__mesFITDict_206_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMean",717,G__mesFITDict_206_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMeanE",786,G__mesFITDict_206_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPrintLevel",1361,G__mesFITDict_206_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 15 x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDontChange",1319,G__mesFITDict_206_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 kTRUE x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTextSize",1164,G__mesFITDict_206_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 0.08 x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMesMin",917,G__mesFITDict_206_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 5.2 x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPars",738,G__mesFITDict_206_0_33, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - - 0 5.2 mesmin d - - 0 5.27 messglow "
"d - - 0 5.29 messghi d - - 0 5.21 mesbglow "
"d - - 0 5.26 mesbghi d - - 0 10.5795 ebeam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTitleSize",1257,G__mesFITDict_206_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 0.07 x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLabelSize",1223,G__mesFITDict_206_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 0.06 x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPadShrinkX",1320,G__mesFITDict_206_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 1.0 x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPadShrinkY",1321,G__mesFITDict_206_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 1.0 x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOffsetX",1035,G__mesFITDict_206_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 1.0 x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOffsetY",1036,G__mesFITDict_206_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 1.0 x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMarkerSize",1353,G__mesFITDict_206_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 1.0 x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMarkerStyle",1471,G__mesFITDict_206_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 1 x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLineWidth",1236,G__mesFITDict_206_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 1 x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVerbose",1058,G__mesFITDict_206_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 1 x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPar",623,G__mesFITDict_206_0_44, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - ipar d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fixPar",618,G__mesFITDict_206_0_45, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - ipar d - - 0 - fix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("limitPar",834,G__mesFITDict_206_0_46, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - ipar d - - 0 - lo "
"d - - 0 - hi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("releasePar",1028,G__mesFITDict_206_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ipar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTitles",961,G__mesFITDict_206_0_48, 121, -1, -1, 0, 8, 1, 1, 0, 
"U 'TH1' - 0 - h C - - 10 - sx "
"C - - 10 - sy f - - 0 0.05 size "
"f - - 0 1.1 xoff f - - 0 1.1 yoff "
"f - - 0 0.05 lsize i - - 0 62 font", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHist",740,G__mesFITDict_206_0_49, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'TH1' - 0 - h i - - 0 kBlack color "
"i - - 0 20 symbol d - - 0 1. size "
"d - - 0 2. width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("shrinkPad",932,G__mesFITDict_206_0_50, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 0.1 b d - - 0 0.1 l "
"d - - 0 0.1 r d - - 0 0.1 t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__mesFITDict_206_0_51, 85, G__get_linked_tagnum(&G__mesFITDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&mesFIT::Class), 0);
   G__memfunc_setup("Class_Name",982,G__mesFITDict_206_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&mesFIT::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__mesFITDict_206_0_53, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&mesFIT::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__mesFITDict_206_0_54, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&mesFIT::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__mesFITDict_206_0_55, 85, G__get_linked_tagnum(&G__mesFITDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__mesFITDict_206_0_56, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__mesFITDict_206_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__mesFITDict_206_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__mesFITDict_206_0_59, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&mesFIT::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__mesFITDict_206_0_60, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&mesFIT::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__mesFITDict_206_0_61, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&mesFIT::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__mesFITDict_206_0_62, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&mesFIT::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("mesFIT", 552, G__mesFITDict_206_0_63, (int) ('i'), G__get_linked_tagnum(&G__mesFITDictLN_mesFIT), -1, 0, 1, 1, 1, 0, "u 'mesFIT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~mesFIT", 678, G__mesFITDict_206_0_64, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__mesFITDict_206_0_65, (int) ('u'), G__get_linked_tagnum(&G__mesFITDictLN_mesFIT), -1, 1, 1, 1, 1, 0, "u 'mesFIT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncmesFITDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalmesFITDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcmesFITDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__mesFITDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__mesFITDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__mesFITDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__mesFITDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__mesFITDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__mesFITDictLN_multimaplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR = { "multimap<void*,short,less<void*>,allocator<pair<void* const,short> > >" , 99 , -1 };
G__linked_taginfo G__mesFITDictLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__mesFITDictLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__mesFITDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__mesFITDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__mesFITDictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__mesFITDictLN_TLatex = { "TLatex" , 99 , -1 };
G__linked_taginfo G__mesFITDictLN_mesFIT = { "mesFIT" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablemesFITDict() {
  G__mesFITDictLN_TClass.tagnum = -1 ;
  G__mesFITDictLN_TBuffer.tagnum = -1 ;
  G__mesFITDictLN_TMemberInspector.tagnum = -1 ;
  G__mesFITDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__mesFITDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__mesFITDictLN_multimaplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR.tagnum = -1 ;
  G__mesFITDictLN_TH1.tagnum = -1 ;
  G__mesFITDictLN_TF1.tagnum = -1 ;
  G__mesFITDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__mesFITDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__mesFITDictLN_TH1D.tagnum = -1 ;
  G__mesFITDictLN_TLatex.tagnum = -1 ;
  G__mesFITDictLN_mesFIT.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablemesFITDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__mesFITDictLN_TClass);
   G__get_linked_tagnum(&G__mesFITDictLN_TBuffer);
   G__get_linked_tagnum(&G__mesFITDictLN_TMemberInspector);
   G__get_linked_tagnum(&G__mesFITDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__mesFITDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__mesFITDictLN_multimaplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR);
   G__get_linked_tagnum(&G__mesFITDictLN_TH1);
   G__get_linked_tagnum(&G__mesFITDictLN_TF1);
   G__get_linked_tagnum(&G__mesFITDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum(&G__mesFITDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum(&G__mesFITDictLN_TH1D);
   G__get_linked_tagnum(&G__mesFITDictLN_TLatex);
   G__tagtable_setup(G__get_linked_tagnum(&G__mesFITDictLN_mesFIT),sizeof(mesFIT),-1,33024,"testing mesFIT",G__setup_memvarmesFIT,G__setup_memfuncmesFIT);
}
extern "C" void G__cpp_setupmesFITDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupmesFITDict()");
  G__set_cpp_environmentmesFITDict();
  G__cpp_setup_tagtablemesFITDict();

  G__cpp_setup_inheritancemesFITDict();

  G__cpp_setup_typetablemesFITDict();

  G__cpp_setup_memvarmesFITDict();

  G__cpp_setup_memfuncmesFITDict();
  G__cpp_setup_globalmesFITDict();
  G__cpp_setup_funcmesFITDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncmesFITDict();
  return;
}
class G__cpp_setup_initmesFITDict {
  public:
    G__cpp_setup_initmesFITDict() { G__add_setup_func("mesFITDict",(G__incsetup)(&G__cpp_setupmesFITDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initmesFITDict() { G__remove_setup_func("mesFITDict"); }
};
G__cpp_setup_initmesFITDict G__cpp_setup_initializermesFITDict;

