//
// File generated by /afs/slac.stanford.edu/g/babar/package/root/5.14-00e/Linux24SL3_i386_gcc323/bin/rootcint at Tue Mar  2 05:31:28 2010

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "PIDTableDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TCollectionProxy.h"
#include "TIsAProxy.h"
// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void PIDTable_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_PIDTable(void *p = 0);
   static void *newArray_PIDTable(Long_t size, void *p);
   static void delete_PIDTable(void *p);
   static void deleteArray_PIDTable(void *p);
   static void destruct_PIDTable(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::PIDTable*)
   {
      ::PIDTable *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PIDTable >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PIDTable", ::PIDTable::Class_Version(), "PIDTable.hh", 19,
                  typeid(::PIDTable), DefineBehavior(ptr, ptr),
                  &::PIDTable::Dictionary, isa_proxy, 0,
                  sizeof(::PIDTable) );
      instance.SetNew(&new_PIDTable);
      instance.SetNewArray(&newArray_PIDTable);
      instance.SetDelete(&delete_PIDTable);
      instance.SetDeleteArray(&deleteArray_PIDTable);
      instance.SetDestructor(&destruct_PIDTable);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::PIDTable*)
   {
      return GenerateInitInstanceLocal((::PIDTable*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PIDTable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *PIDTable::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *PIDTable::Class_Name()
{
   return "PIDTable";
}

//______________________________________________________________________________
const char *PIDTable::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PIDTable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PIDTable::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PIDTable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PIDTable::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PIDTable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PIDTable::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PIDTable*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void PIDTable::Streamer(TBuffer &R__b)
{
   // Stream an object of class PIDTable.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fDataVector;
      fFileName.Streamer(R__b);
      R__b >> fVerbose;
      R__b >> fRandom;
      R__b >> fFlat;
      R__b.CheckByteCount(R__s, R__c, PIDTable::IsA());
   } else {
      R__c = R__b.WriteVersion(PIDTable::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fDataVector;
      fFileName.Streamer(R__b);
      R__b << fVerbose;
      R__b << fRandom;
      R__b << fFlat;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void PIDTable::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class PIDTable.
      TClass *R__cl = ::PIDTable::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fDataVector", &fDataVector);
      R__insp.Inspect(R__cl, R__parent, "fFileName", &fFileName);
      fFileName.ShowMembers(R__insp, strcat(R__parent,"fFileName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fVerbose", &fVerbose);
      R__insp.Inspect(R__cl, R__parent, "*fRandom", &fRandom);
      R__insp.Inspect(R__cl, R__parent, "*fFlat", &fFlat);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_PIDTable(void *p) {
      return  p ? new(p) ::PIDTable : new ::PIDTable;
   }
   static void *newArray_PIDTable(Long_t nElements, void *p) {
      return p ? new(p) ::PIDTable[nElements] : new ::PIDTable[nElements];
   }
   // Wrapper around operator delete
   static void delete_PIDTable(void *p) {
      delete ((::PIDTable*)p);
   }
   static void deleteArray_PIDTable(void *p) {
      delete [] ((::PIDTable*)p);
   }
   static void destruct_PIDTable(void *p) {
      typedef ::PIDTable current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::PIDTable

/********************************************************
* PIDTableDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtablePIDTableDict();

extern "C" void G__set_cpp_environmentPIDTableDict() {
  G__add_compiledheader("TROOT.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("PIDTable.hh");
  G__cpp_reset_tagtablePIDTableDict();
}
#include <new>
extern "C" int G__cpp_dllrevPIDTableDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* PIDTable */
static int G__PIDTableDict_233_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PIDTable* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new PIDTable[n];
     } else {
       p = new((void*) gvp) PIDTable[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new PIDTable;
     } else {
       p = new((void*) gvp) PIDTable;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__PIDTableDictLN_PIDTable);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PIDTable* p = NULL;
   long gvp = G__getgvp();
   //m: 2
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new PIDTable((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) PIDTable((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__PIDTableDictLN_PIDTable);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) PIDTable::getDR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((PIDTable*) G__getstructoffset())->readFromFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((PIDTable*) G__getstructoffset())->readFromFile();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDTable*) G__getstructoffset())->readFromHist((TH3D*) G__int(libp->para[0]), (TH3D*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((PIDTable*) G__getstructoffset())->dumpToFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((PIDTable*) G__getstructoffset())->dumpToFile();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDTable*) G__getstructoffset())->setVerbosity((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((PIDTable*) G__getstructoffset())->extractPIDTableStructure((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDTable*) G__getstructoffset())->printAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDTable*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDTable*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDTable*) G__getstructoffset())->flush();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((PIDTable*) G__getstructoffset())->getFileName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((PIDTable*) G__getstructoffset())->getDataR((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((PIDTable*) G__getstructoffset())->getData((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((PIDTable*) G__getstructoffset())->smear((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((PIDTable*) G__getstructoffset())->smear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((PIDTable*) G__getstructoffset())->shiftRel((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((PIDTable*) G__getstructoffset())->shiftRel();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((PIDTable*) G__getstructoffset())->shiftSigma((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((PIDTable*) G__getstructoffset())->shiftSigma();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PIDTable*) G__getstructoffset())->effD((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PIDTable*) G__getstructoffset())->effR((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((PIDTable*) G__getstructoffset())->idD((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((PIDTable*) G__getstructoffset())->idR((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PIDTable*) G__getstructoffset())->errD((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PIDTable*) G__getstructoffset())->errR((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PIDTable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PIDTable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PIDTable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PIDTable::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const PIDTable*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDTable*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDTable*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDTable*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PIDTable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PIDTable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PIDTable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDTableDict_233_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PIDTable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PIDTableDict_233_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   PIDTable* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new PIDTable(*(PIDTable*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__PIDTableDictLN_PIDTable);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PIDTable G__TPIDTable;
static int G__PIDTableDict_233_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (PIDTable*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PIDTable*) (soff+(sizeof(PIDTable)*i)))->~G__TPIDTable();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (PIDTable*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((PIDTable*) (soff))->~G__TPIDTable();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PIDTableDict_233_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PIDTable* dest = (PIDTable*) G__getstructoffset();
   *dest = *(PIDTable*) libp->para[0].ref;
   const PIDTable& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* PIDTable */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncPIDTableDict {
 public:
  G__Sizep2memfuncPIDTableDict() {p=&G__Sizep2memfuncPIDTableDict::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncPIDTableDict::*p)();
};

size_t G__get_sizep2memfuncPIDTableDict()
{
  G__Sizep2memfuncPIDTableDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancePIDTableDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PIDTableDictLN_PIDTable))) {
     PIDTable *G__Lderived;
     G__Lderived=(PIDTable*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PIDTableDictLN_PIDTable),G__get_linked_tagnum(&G__PIDTableDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablePIDTableDict() {

   /* Setting up typedef entry */
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__PIDTableDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PIDTableDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PIDTableDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PIDTableDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PIDTableDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<void*,Version_t>",117,G__get_linked_tagnum(&G__PIDTableDictLN_multimaplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<void*,short>",117,G__get_linked_tagnum(&G__PIDTableDictLN_multimaplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<void*,short,less<void*>>",117,G__get_linked_tagnum(&G__PIDTableDictLN_multimaplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__PIDTableDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__PIDTableDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__PIDTableDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__PIDTableDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* PIDTable */
static void G__setup_memvarPIDTable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PIDTableDictLN_PIDTable));
   { PIDTable *p; p=(PIDTable*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__PIDTableDictLN_TList),-1,-1,4,"fDataVector=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__PIDTableDictLN_TString),-1,-1,4,"fFileName=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,-1,-1,4,"fVerbose=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__PIDTableDictLN_TF1),-1,-1,4,"fRandom=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__PIDTableDictLN_TF1),-1,-1,4,"fFlat=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__PIDTableDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarPIDTableDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncPIDTable(void) {
   /* PIDTable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PIDTableDictLN_PIDTable));
   G__memfunc_setup("PIDTable",709,G__PIDTableDict_233_0_1, 105, G__get_linked_tagnum(&G__PIDTableDictLN_PIDTable), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PIDTable",709,G__PIDTableDict_233_0_2, 105, G__get_linked_tagnum(&G__PIDTableDictLN_PIDTable), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDR",470,G__PIDTableDict_233_0_3, 100, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (double (*)())(&PIDTable::getDR), 0);
   G__memfunc_setup("readFromFile",1200,G__PIDTableDict_233_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 \"bla.dat\" filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readFromHist",1224,G__PIDTableDict_233_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH3D' - 0 - passed U 'TH3D' - 0 - total", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dumpToFile",1017,G__PIDTableDict_233_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 \"bla.dat\" filename", "vanilla dump, nothing is done to the table", (void*) NULL, 0);
   G__memfunc_setup("setVerbosity",1299,G__PIDTableDict_233_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("extractPIDTableStructure",2449,G__PIDTableDict_233_0_8, 85, G__get_linked_tagnum(&G__PIDTableDictLN_TH3D), -1, 0, 1, 1, 1, 0, "C - - 10 - inhistname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printAll",838,G__PIDTableDict_233_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__PIDTableDict_233_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__PIDTableDict_233_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", "clears the data Vector", (void*) NULL, 0);
   G__memfunc_setup("flush",546,G__PIDTableDict_233_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", "fills all cells with 0-0-0-0", (void*) NULL, 0);
   G__memfunc_setup("getFileName",1089,G__PIDTableDict_233_0_13, 117, G__get_linked_tagnum(&G__PIDTableDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDataR",780,G__PIDTableDict_233_0_14, 85, G__get_linked_tagnum(&G__PIDTableDictLN_PIDData), -1, 0, 3, 1, 1, 0, 
"d - - 0 - p d - - 0 - t "
"d - - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getData",698,G__PIDTableDict_233_0_15, 85, G__get_linked_tagnum(&G__PIDTableDictLN_PIDData), -1, 0, 3, 1, 1, 0, 
"d - - 0 - p d - - 0 - t "
"d - - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("smear",536,G__PIDTableDict_233_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 0 mode", "replace cell efficiency by smeared (gaussian with sigma = err) value", (void*) NULL, 0);
   G__memfunc_setup("shiftRel",833,G__PIDTableDict_233_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 0.1 shift", "replace cell efficiency by shifted (oldvalue +/- shift*oldvalue) value", (void*) NULL, 0);
   G__memfunc_setup("shiftSigma",1039,G__PIDTableDict_233_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 0.1 shift", "replace cell efficiency by shifted (oldvalue +/- shift*sigma) value", (void*) NULL, 0);
   G__memfunc_setup("effD",373,G__PIDTableDict_233_0_19, 100, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - momentum d - - 0 - theta "
"d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("effR",387,G__PIDTableDict_233_0_20, 100, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - momentum d - - 0 - theta "
"d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idD",273,G__PIDTableDict_233_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"d - - 0 - momentum d - - 0 - theta "
"d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idR",287,G__PIDTableDict_233_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"d - - 0 - momentum d - - 0 - theta "
"d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("errD",397,G__PIDTableDict_233_0_23, 100, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - momentum d - - 0 - theta "
"d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("errR",411,G__PIDTableDict_233_0_24, 100, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - momentum d - - 0 - theta "
"d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printHeader",1142,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PIDTableDict_233_0_26, 85, G__get_linked_tagnum(&G__PIDTableDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&PIDTable::Class), 0);
   G__memfunc_setup("Class_Name",982,G__PIDTableDict_233_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&PIDTable::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__PIDTableDict_233_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&PIDTable::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__PIDTableDict_233_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&PIDTable::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__PIDTableDict_233_0_30, 85, G__get_linked_tagnum(&G__PIDTableDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__PIDTableDict_233_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__PIDTableDict_233_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PIDTableDict_233_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PIDTableDict_233_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&PIDTable::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PIDTableDict_233_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&PIDTable::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__PIDTableDict_233_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&PIDTable::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PIDTableDict_233_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&PIDTable::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("PIDTable", 709, G__PIDTableDict_233_0_38, (int) ('i'), G__get_linked_tagnum(&G__PIDTableDictLN_PIDTable), -1, 0, 1, 1, 1, 0, "u 'PIDTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PIDTable", 835, G__PIDTableDict_233_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PIDTableDict_233_0_40, (int) ('u'), G__get_linked_tagnum(&G__PIDTableDictLN_PIDTable), -1, 1, 1, 1, 1, 0, "u 'PIDTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncPIDTableDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalPIDTableDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcPIDTableDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__PIDTableDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__PIDTableDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__PIDTableDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__PIDTableDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__PIDTableDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ofstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__PIDTableDictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__PIDTableDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__PIDTableDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__PIDTableDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__PIDTableDictLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__PIDTableDictLN_multimaplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR = { "multimap<void*,short,less<void*>,allocator<pair<void* const,short> > >" , 99 , -1 };
G__linked_taginfo G__PIDTableDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__PIDTableDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__PIDTableDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__PIDTableDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__PIDTableDictLN_TH3D = { "TH3D" , 99 , -1 };
G__linked_taginfo G__PIDTableDictLN_PIDData = { "PIDData" , 99 , -1 };
G__linked_taginfo G__PIDTableDictLN_PIDTable = { "PIDTable" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablePIDTableDict() {
  G__PIDTableDictLN_TClass.tagnum = -1 ;
  G__PIDTableDictLN_TBuffer.tagnum = -1 ;
  G__PIDTableDictLN_TMemberInspector.tagnum = -1 ;
  G__PIDTableDictLN_TObject.tagnum = -1 ;
  G__PIDTableDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__PIDTableDictLN_TList.tagnum = -1 ;
  G__PIDTableDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__PIDTableDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PIDTableDictLN_TString.tagnum = -1 ;
  G__PIDTableDictLN_TF1.tagnum = -1 ;
  G__PIDTableDictLN_multimaplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR.tagnum = -1 ;
  G__PIDTableDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__PIDTableDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__PIDTableDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__PIDTableDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__PIDTableDictLN_TH3D.tagnum = -1 ;
  G__PIDTableDictLN_PIDData.tagnum = -1 ;
  G__PIDTableDictLN_PIDTable.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablePIDTableDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__PIDTableDictLN_TClass);
   G__get_linked_tagnum(&G__PIDTableDictLN_TBuffer);
   G__get_linked_tagnum(&G__PIDTableDictLN_TMemberInspector);
   G__get_linked_tagnum(&G__PIDTableDictLN_TObject);
   G__get_linked_tagnum(&G__PIDTableDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum(&G__PIDTableDictLN_TList);
   G__get_linked_tagnum(&G__PIDTableDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__PIDTableDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__PIDTableDictLN_TString);
   G__get_linked_tagnum(&G__PIDTableDictLN_TF1);
   G__get_linked_tagnum(&G__PIDTableDictLN_multimaplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR);
   G__get_linked_tagnum(&G__PIDTableDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum(&G__PIDTableDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum(&G__PIDTableDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum(&G__PIDTableDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum(&G__PIDTableDictLN_TH3D);
   G__get_linked_tagnum(&G__PIDTableDictLN_PIDData);
   G__tagtable_setup(G__get_linked_tagnum(&G__PIDTableDictLN_PIDTable),sizeof(PIDTable),-1,62720,"Testing PIDTable",G__setup_memvarPIDTable,G__setup_memfuncPIDTable);
}
extern "C" void G__cpp_setupPIDTableDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupPIDTableDict()");
  G__set_cpp_environmentPIDTableDict();
  G__cpp_setup_tagtablePIDTableDict();

  G__cpp_setup_inheritancePIDTableDict();

  G__cpp_setup_typetablePIDTableDict();

  G__cpp_setup_memvarPIDTableDict();

  G__cpp_setup_memfuncPIDTableDict();
  G__cpp_setup_globalPIDTableDict();
  G__cpp_setup_funcPIDTableDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncPIDTableDict();
  return;
}
class G__cpp_setup_initPIDTableDict {
  public:
    G__cpp_setup_initPIDTableDict() { G__add_setup_func("PIDTableDict",(G__incsetup)(&G__cpp_setupPIDTableDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initPIDTableDict() { G__remove_setup_func("PIDTableDict"); }
};
G__cpp_setup_initPIDTableDict G__cpp_setup_initializerPIDTableDict;

