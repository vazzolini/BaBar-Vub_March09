//      -*- Mode: c++ -*-
// ----------------------------------------------------------------------
void baseClass::bookHist(int dump) {
  TH1 *h;
  char name[100], title[100];
  if (!fHistFile) {
    cout << "Call recoilNtp::openHistFile(...) before booking histograms" << endl;
  } else {
    fHistFile->cd();
  }    
	
  cout << "book your histos here" << endl;
  sprintf(name, "bw8");  sprintf(title, "B decay weights");  h = new TH1D(name, title, 200, 0., 2.0); h->Sumw2();
  sprintf(name, "dw8");  sprintf(title, "B decay weights");  h = new TH1D(name, title, 200, 0., 2.0); h->Sumw2();
  sprintf(name, "ew8");  sprintf(title, "Evt weights");  h = new TH1D(name, title, 200, 0., 2.0); h->Sumw2();

  sprintf(name, "dca");  sprintf(title, "dca");  h = new TH1D(name, title, 300, 0., 6.0); h->Sumw2();
  sprintf(name, "dcaz");  sprintf(title, "dcaz");  h = new TH1D(name, title, 220, -11., 11.0); h->Sumw2();

  sprintf(name, "adca");  sprintf(title, "after cuts dca");  h = new TH1D(name, title, 300, 0., 6.0); h->Sumw2();
  sprintf(name, "adcaz");  sprintf(title, "after cuts dcaz");  h = new TH1D(name, title, 220, -11., 11.0); h->Sumw2();

  sprintf(name, "edca");  sprintf(title, "el dca");  h = new TH1D(name, title, 300, 0., 6.0); h->Sumw2();
  sprintf(name, "edcaz");  sprintf(title, "el dcaz");  h = new TH1D(name, title, 220, -11., 11.0); h->Sumw2();

  sprintf(name, "mdca");  sprintf(title, "mu dca");  h = new TH1D(name, title, 300, 0., 6.0); h->Sumw2();
  sprintf(name, "mdcaz");  sprintf(title, "mu dcaz");  h = new TH1D(name, title, 220, -11., 11.0); h->Sumw2();
  sprintf(name, "meszero");  sprintf(title, "mes zero");  h = new TH1D(name, title, 40, 5.2, 5.3);
  sprintf(name, "mesbest");  sprintf(title, "mes best");  h = new TH1D(name, title, 40, 5.2, 5.3);
  sprintf(name, "mesallevents");  sprintf(title, "mes All");  h = new TH1D(name, title, 40, 5.2, 5.3); 
  sprintf(name, "deallevents");  sprintf(title, "delta E All");  h = new TH1D(name, title, 40, -0.1, 0.1); 
  sprintf(name, "mesalleventsBnu");  sprintf(title, "mes All Bnu");  h = new TH1D(name, title, 40, 5.2, 5.3); 
  sprintf(name, "mesalleventsBch");  sprintf(title, "mes All Bch");  h = new TH1D(name, title, 40, 5.2, 5.3); 
  sprintf(name, "mesalleventsS0");  sprintf(title, "mes All seed 0 ");  h = new TH1D(name, title, 40, 5.2, 5.3); 
  sprintf(name, "mesalleventsS1");  sprintf(title, "mes All seed 1 ");  h = new TH1D(name, title, 40, 5.2, 5.3); 
  sprintf(name, "mesalleventsS2");  sprintf(title, "mes All seed 2 ");  h = new TH1D(name, title, 40, 5.2, 5.3); 
  sprintf(name, "mesalleventsS3");  sprintf(title, "mes All seed 3 ");  h = new TH1D(name, title, 40, 5.2, 5.3); 
  sprintf(name, "mesalleventsA");  sprintf(title, "mes Vub enhanced");  h = new TH1D(name, title, 40, 5.2, 5.3); 
  sprintf(name, "mesalleventsB");  sprintf(title, "mes Vub enhanced");  h = new TH1D(name, title, 40, 5.2, 5.3); 
  sprintf(name, "mesalleventsC");  sprintf(title, "mes Vub enhanced");  h = new TH1D(name, title, 40, 5.2, 5.3); 

  sprintf(name, "mesallcutsBnu");  sprintf(title, "mes All Cuts Bnu");  h = new TH1D(name, title, 40, 5.2, 5.3); 
  sprintf(name, "mesallcutsBch");  sprintf(title, "mes All Cuts Bch");  h = new TH1D(name, title, 40, 5.2, 5.3); 

  fHistFile->cd();
  fHistFile->mkdir("SplitOff", "SplitOff");     fHistFile->cd("SplitOff");
  doSplitOffStudy(true);

  fHistFile->cd();
  fHistFile->mkdir("mcTruth", "mcTruth");
  fHistFile->cd("mcTruth");
  sprintf(name, "h100");  sprintf(title, "nVub");  h = new TH1D(name, title, 3, 0., 3.); 
  sprintf(name, "h101");  sprintf(title, "nVcb");  h = new TH1D(name, title, 3, 0., 3.); 
  sprintf(name, "h102");  sprintf(title, "n fully reco Dstar");  h = new TH1D(name, title, 3, 0., 3.); 
  sprintf(name, "h103");  sprintf(title, "n fully reco Dc");  h = new TH1D(name, title, 3, 0., 3.); 
  sprintf(name, "h104");  sprintf(title, "n fully reco Dstar0");  h = new TH1D(name, title, 3, 0., 3.); 
  sprintf(name, "h105");  sprintf(title, "n fully reco D0");  h = new TH1D(name, title, 3, 0., 3.); 
  sprintf(name, "h106");  sprintf(title, "nOther");  h = new TH1D(name, title, 3, 0., 3.); 
  sprintf(name, "h107");  sprintf(title, "fVxbTyp");  h = new TH1D(name, title, 11, -1., 10.); 
  sprintf(name, "h700");  sprintf(title, "id mc");  h = new TH1D(name, title, 100, -600., 600.); 
  sprintf(name, "h9009");  sprintf(title, "type event MC");  h = new TH2D(name, title, 7, 1., 8., 7, 1., 8.); 
  sprintf(name, "h77000");  sprintf(title, "number of leptons");  h = new TH1D(name, title, 4, 0., 4.); 
  sprintf(name, "h121000");  sprintf(title, "generator pcms e/mu");  h = new TH1D(name, title, PCBIN, 0., PCMAX); 
  sprintf(name, "h121005");  sprintf(title, "generator pcms e/mu Vcb"); h = new TH1D(name, title, PCBIN, 0., PCMAX); 
  sprintf(name, "h121006");  sprintf(title, "generator pcms e/mu Vub"); h = new TH1D(name, title, PCBIN, 0., PCMAX); 
  sprintf(name, "h123000");  sprintf(title, "generator Mx one lepton");  h = new TH1D(name, title, XBIN, 0., XMAX); 
  sprintf(name, "h123005");  sprintf(title, "generator Mx one lepton Vcb"); h = new TH1D(name, title, XBIN, 0., XMAX); 
  sprintf(name, "h123006");  sprintf(title, "generator Mx one lepton Vub"); h = new TH1D(name, title, XBIN, 0., XMAX); 
  sprintf(name, "h124000");  sprintf(title, "generator N hadrons with one lepton"); h = new TH1D(name, title, 20, 0., 20.); 
  sprintf(name, "h124005");  sprintf(title, "generator N hadrons with one lepton Vcb"); h = new TH1D(name, title, 20, 0., 20.); 
  sprintf(name, "h124006");  sprintf(title, "generator N hadrons with one lepton Vub"); h = new TH1D(name, title, 20, 0., 20.); 

  int no(0), le(0), i(0);
  char lc[10];

  for (int i = 0; i < 11; ++i) {
    if (i==0) {fHistFile->mkdir("recoil","recoil");  fHistFile->cd("recoil"); gDirectory->mkdir("CutPlots","CutPlots"); }
    if (i==1) {fHistFile->mkdir("bgall","Sideband all");  fHistFile->cd("bgall"); gDirectory->mkdir("CutPlots","CutPlots"); }
    if (i==2) {fHistFile->mkdir("sgall","Signalbox all");  fHistFile->cd("sgall"); gDirectory->mkdir("CutPlots","CutPlots"); }
    if (i==3) {fHistFile->mkdir("bgvcb","Sideband Vub depleted");fHistFile->cd("bgvcb"); gDirectory->mkdir("CutPlots","CutPlots"); }
    if (i==4) {fHistFile->mkdir("sgvcb","Signalbox Vub depleted");fHistFile->cd("sgvcb"); gDirectory->mkdir("CutPlots","CutPlots"); }
    if (i==5) {fHistFile->mkdir("bgvub","Sideband Vub enhanced");fHistFile->cd("bgvub"); gDirectory->mkdir("CutPlots","CutPlots");}
    if (i==6) {fHistFile->mkdir("sgvub","Signalbox Vub enhanced");fHistFile->cd("sgvub"); gDirectory->mkdir("CutPlots","CutPlots");}
    if (i==7) {fHistFile->mkdir("bgallevents","Sideband");fHistFile->cd("bgallevents");gDirectory->mkdir("CutPlots","CutPlots"); }
    if (i==8) {fHistFile->mkdir("sgallevents","Signalbox");fHistFile->cd("sgallevents"); gDirectory->mkdir("CutPlots","CutPlots");}
    if (i==9) {fHistFile->mkdir("bgrecoil","Sideband recoil");  fHistFile->cd("bgrecoil"); gDirectory->mkdir("CutPlots","CutPlots"); }
    if (i==10){fHistFile->mkdir("sgrecoil","Signalbox recoil");  fHistFile->cd("sgrecoil"); gDirectory->mkdir("CutPlots","CutPlots"); }

    sprintf(name,"ks100");  sprintf(title, "mass kshorts");  h = new TH1D(name, title, 50, 0.475, 0.525); h->Sumw2();
    sprintf(name,"ks101");  sprintf(title, "mass kshorts goodLepton");  h = new TH1D(name, title, 50, 0.475, 0.525); h->Sumw2();
    sprintf(name,"ks102");  sprintf(title, "mass kshorts goodMM2");  h = new TH1D(name, title, 50, 0.475, 0.525); h->Sumw2();
    sprintf(name,"ks103");  sprintf(title, "mass kshorts chargeCorr");  h = new TH1D(name, title, 50, 0.475, 0.525); h->Sumw2();
    sprintf(name,"ks104");  sprintf(title, "mass kshorts chargeCons");  h = new TH1D(name, title, 50, 0.475, 0.525); h->Sumw2();
    sprintf(name,"ks105");  sprintf(title, "mass kshorts goodEvent");  h = new TH1D(name, title, 50, 0.475, 0.525); h->Sumw2();
  
    sprintf(name,"ks200");  sprintf(title, "plab k");  h = new TH1D(name, title, 50, 0., 5.); h->Sumw2();
    sprintf(name,"ks210");  sprintf(title, "tlab k");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
    sprintf(name,"ks220");  sprintf(title, "plab k");  h = new TH1D(name, title, 50, 0., 5.); h->Sumw2();
    sprintf(name,"ks201");  sprintf(title, "plab k");  h = new TH1D(name, title, 50, 0., 5.); h->Sumw2();
    sprintf(name,"ks211");  sprintf(title, "tlab k");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
    sprintf(name,"ks221");  sprintf(title, "plab k");  h = new TH1D(name, title, 50, 0., 5.); h->Sumw2();
    sprintf(name,"ks202");  sprintf(title, "plab k");  h = new TH1D(name, title, 50, 0., 5.); h->Sumw2();
    sprintf(name,"ks212");  sprintf(title, "tlab k");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
    sprintf(name,"ks222");  sprintf(title, "plab k");  h = new TH1D(name, title, 50, 0., 5.); h->Sumw2();
    sprintf(name,"ks203");  sprintf(title, "plab k");  h = new TH1D(name, title, 50, 0., 5.); h->Sumw2();
    sprintf(name,"ks213");  sprintf(title, "tlab k");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
    sprintf(name,"ks223");  sprintf(title, "plab k");  h = new TH1D(name, title, 50, 0., 5.); h->Sumw2();
    sprintf(name,"ks204");  sprintf(title, "plab k");  h = new TH1D(name, title, 50, 0., 5.); h->Sumw2();
    sprintf(name,"ks214");  sprintf(title, "tlab k");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
    sprintf(name,"ks224");  sprintf(title, "plab k");  h = new TH1D(name, title, 50, 0., 5.); h->Sumw2();
    sprintf(name,"ks205");  sprintf(title, "plab k");  h = new TH1D(name, title, 50, 0., 5.); h->Sumw2();
    sprintf(name,"ks215");  sprintf(title, "tlab k");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
    sprintf(name,"ks225");  sprintf(title, "plab k");  h = new TH1D(name, title, 50, 0., 5.); h->Sumw2();

    sprintf(name,"kp200");  sprintf(title, "plab k");  h = new TH1D(name, title, 50, 0., 5.); h->Sumw2();
    sprintf(name,"kp210");  sprintf(title, "tlab k");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
    sprintf(name,"kp220");  sprintf(title, "plab k");  h = new TH1D(name, title, 50, 0., 5.); h->Sumw2();
    sprintf(name,"kp201");  sprintf(title, "plab k");  h = new TH1D(name, title, 50, 0., 5.); h->Sumw2();
    sprintf(name,"kp211");  sprintf(title, "tlab k");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
    sprintf(name,"kp221");  sprintf(title, "plab k");  h = new TH1D(name, title, 50, 0., 5.); h->Sumw2();
    sprintf(name,"kp202");  sprintf(title, "plab k");  h = new TH1D(name, title, 50, 0., 5.); h->Sumw2();
    sprintf(name,"kp212");  sprintf(title, "tlab k");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
    sprintf(name,"kp222");  sprintf(title, "plab k");  h = new TH1D(name, title, 50, 0., 5.); h->Sumw2();
    sprintf(name,"kp203");  sprintf(title, "plab k");  h = new TH1D(name, title, 50, 0., 5.); h->Sumw2();
    sprintf(name,"kp213");  sprintf(title, "tlab k");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
    sprintf(name,"kp223");  sprintf(title, "plab k");  h = new TH1D(name, title, 50, 0., 5.); h->Sumw2();
    sprintf(name,"kp204");  sprintf(title, "plab k");  h = new TH1D(name, title, 50, 0., 5.); h->Sumw2();
    sprintf(name,"kp214");  sprintf(title, "tlab k");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
    sprintf(name,"kp224");  sprintf(title, "plab k");  h = new TH1D(name, title, 50, 0., 5.); h->Sumw2();
    sprintf(name,"kp205");  sprintf(title, "plab k");  h = new TH1D(name, title, 50, 0., 5.); h->Sumw2();
    sprintf(name,"kp215");  sprintf(title, "tlab k");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
    sprintf(name,"kp225");  sprintf(title, "plab k");  h = new TH1D(name, title, 50, 0., 5.); h->Sumw2();

    sprintf(name, "s100");  sprintf(title, "gen Breco momentum");  h = new TH1D(name, title, 100, 2.5, 3.5); 
    sprintf(name, "s101");  sprintf(title, "reco Breco momentum");  h = new TH1D(name, title, 100, 2.5, 3.5); 
    sprintf(name, "s102");  sprintf(title, "smeared Breco momentum");  h = new TH1D(name, title, 100, 2.5, 3.5); 
    sprintf(name, "s103");  sprintf(title, "reco-smeared Breco momentum");  h = new TH1D(name, title, 100, -0.5, 0.5); 
    sprintf(name, "s104");  sprintf(title, "reco-generated Breco momentum");  h = new TH1D(name, title, 100, -0.5, 0.5); 
    sprintf(name, "s105");  sprintf(title, "generated-smeared Breco momentum");  h = new TH1D(name, title, 100, -0.5, 0.5); 
      
    
    
    if (i == 0) {
      sprintf(name,"elSelBits");  sprintf(title, "electron selector bits"); h = new TH1D(name, title, 33, -1., 32.);
      sprintf(name,"muSelBits");  sprintf(title, "muon     selector bits"); h = new TH1D(name, title, 33, -1., 32.);
      sprintf(name,"kaSelBits");  sprintf(title, "kaon     selector bits"); h = new TH1D(name, title, 33, -1., 32.);
    }      

#ifndef FAST    
    for (int ik=1; ik<21 ; ik++){
      no = 1600;		     
      sprintf(name,"%s%d%s%d","a",no,"bin",ik);   sprintf(title, "mes plab all had nocut");  h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();
      no = 1610;		     
      sprintf(name,"%s%d%s%d","a",no,"bin",ik);   sprintf(title, "mes plab all had all cuts");  h = new TH1D(name, title, 40, 5.2, 5.3);  h->Sumw2();
      no = 9900;		     
      sprintf(name,"%s%d%s%d","a",no,"bin",ik);   sprintf(title, "mes plab all neu nocut");  h = new TH1D(name, title, 40, 5.2, 5.3);  h->Sumw2();
      no = 9910;		     
      sprintf(name,"%s%d%s%d","a",no,"bin",ik);   sprintf(title, "mes plab all neu all cuts");  h = new TH1D(name, title, 40, 5.2, 5.3);  h->Sumw2();
    }
    
    for (int ik=1; ik<21 ; ik++){
      no = 1600;		     
      sprintf(name,"%s%d%s%d","pur60a",no,"bin",ik);   sprintf(title, "mes plab all had nocut");  h = new TH1D(name, title, 40, 5.2, 5.3);  h->Sumw2();
      no = 1610;		     
      sprintf(name,"%s%d%s%d","pur60a",no,"bin",ik);   sprintf(title, "mes plab all had all cuts");  h = new TH1D(name, title, 40, 5.2, 5.3);  h->Sumw2();
      no = 9900;		     
      sprintf(name,"%s%d%s%d","pur60a",no,"bin",ik);   sprintf(title, "mes plab all neu nocut");  h = new TH1D(name, title, 40, 5.2, 5.3);  h->Sumw2();
      no = 9910;		     
      sprintf(name,"%s%d%s%d","pur60a",no,"bin",ik);   sprintf(title, "mes plab all neu all cuts");  h = new TH1D(name, title, 40, 5.2, 5.3);  h->Sumw2();
    }
    
    
    for (int ik=1; ik<21 ; ik++){
      no = 1600;		     
      sprintf(name,"%s%d%s%d","pur80a",no,"bin",ik);   sprintf(title, "mes plab all had nocut");  h = new TH1D(name, title, 40, 5.2, 5.3);  h->Sumw2();
      no = 1610;		     
      sprintf(name,"%s%d%s%d","pur80a",no,"bin",ik);   sprintf(title, "mes plab all had all cuts");  h = new TH1D(name, title, 40, 5.2, 5.3);  h->Sumw2();
      no = 9900;		     
      sprintf(name,"%s%d%s%d","pur80a",no,"bin",ik);   sprintf(title, "mes plab all neu nocut");  h = new TH1D(name, title, 40, 5.2, 5.3);  h->Sumw2();
      no = 9910;		     
      sprintf(name,"%s%d%s%d","pur80a",no,"bin",ik);   sprintf(title, "mes plab all neu all cuts");  h = new TH1D(name, title, 40, 5.2, 5.3);  h->Sumw2();
    }
#endif


    for (le = 0; le < 5; ++le) {
      if (le == 0) sprintf(lc, "a");
      if (le == 1) sprintf(lc, "e");
      if (le == 2) sprintf(lc, "m");
      if (le == 3) sprintf(lc, "bch");
      if (le == 4) sprintf(lc, "bnu");
      
      // -- mes histograms for cut studies
      no = 1; sprintf(name,"mes%s%d",lc,no); sprintf(title, "mes %d", no); h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();
      no = 2; sprintf(name,"mes%s%d",lc,no); sprintf(title, "mes %d", no); h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();
      no = 3; sprintf(name,"mes%s%d",lc,no); sprintf(title, "mes %d", no); h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();
      no = 4; sprintf(name,"mes%s%d",lc,no); sprintf(title, "mes %d", no); h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();
      no = 5; sprintf(name,"mes%s%d",lc,no); sprintf(title, "mes %d", no); h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();
      no = 6; sprintf(name,"mes%s%d",lc,no); sprintf(title, "mes %d", no); h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();
      no = 7; sprintf(name,"mes%s%d",lc,no); sprintf(title, "mes %d", no); h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();
      no = 8; sprintf(name,"mes%s%d",lc,no); sprintf(title, "mes %d", no); h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();
      
      no =11; sprintf(name,"mes%s%d",lc,no); sprintf(title, "mes %d", no); h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();
      no =12; sprintf(name,"mes%s%d",lc,no); sprintf(title, "mes %d", no); h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();
      no =13; sprintf(name,"mes%s%d",lc,no); sprintf(title, "mes %d", no); h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();
      no =14; sprintf(name,"mes%s%d",lc,no); sprintf(title, "mes %d", no); h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();
      no =15; sprintf(name,"mes%s%d",lc,no); sprintf(title, "mes %d", no); h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();
      no =16; sprintf(name,"mes%s%d",lc,no); sprintf(title, "mes %d", no); h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();
      no =17; sprintf(name,"mes%s%d",lc,no); sprintf(title, "mes %d", no); h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();
      no =18; sprintf(name,"mes%s%d",lc,no); sprintf(title, "mes %d", no); h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();

      no =21; sprintf(name,"mes%s%d",lc,no); sprintf(title, "mes %d", no); h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();
      no =22; sprintf(name,"mes%s%d",lc,no); sprintf(title, "mes %d", no); h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();
      no =23; sprintf(name,"mes%s%d",lc,no); sprintf(title, "mes %d", no); h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();
      no =24; sprintf(name,"mes%s%d",lc,no); sprintf(title, "mes %d", no); h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();
      no =25; sprintf(name,"mes%s%d",lc,no); sprintf(title, "mes %d", no); h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();
      no =26; sprintf(name,"mes%s%d",lc,no); sprintf(title, "mes %d", no); h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();
      no =27; sprintf(name,"mes%s%d",lc,no); sprintf(title, "mes %d", no); h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();
      no =28; sprintf(name,"mes%s%d",lc,no); sprintf(title, "mes %d", no); h = new TH1D(name, title, 40, 5.2, 5.3); h->Sumw2();
      

#ifndef FAST
      // -- Lepton
      no = 1000;
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "pcms all e/mu");      h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "pcms all e/mu Vcb");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "pcms all e/mu Vub");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "pcms all e/mu D    ");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "pcms all e/mu D*   ");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "pcms all e/mu D(*)x");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "pcms all e/mu other");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      
      no = 1010;		     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "pcms all e/mu");      h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "pcms all e/mu Vcb");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "pcms all e/mu Vub");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "pcms all e/mu D");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "pcms all e/mu D*");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "pcms all e/mu D(*)x");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "pcms all e/mu other");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      
      no = 1020;		     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "pcms all e/mu");      h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "pcms all e/mu Vcb");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "pcms all e/mu Vub");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "pcms all e/mu D");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "pcms all e/mu D*");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "pcms all e/mu D(*)x");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "pcms all e/mu other");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      
      no = 1100;         
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "pcms prompt e/mu");      h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "pcms prompt e/mu Vcb");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "pcms prompt e/mu Vub");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "pcms prompt e/mu D    ");h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "pcms prompt e/mu D*   ");h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "pcms prompt e/mu D(*)x");h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "pcms prompt e/mu other");h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();

      no = 1110;         
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "pcms prompt e/mu");      h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "pcms prompt e/mu Vcb");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "pcms prompt e/mu Vub");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "pcms prompt e/mu D    ");h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "pcms prompt e/mu D*   ");h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "pcms prompt e/mu D(*)x");h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "pcms prompt e/mu other");h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();

      no = 1120;         
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "pcms prompt e/mu");      h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "pcms prompt e/mu Vcb");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "pcms prompt e/mu Vub");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "pcms prompt e/mu D    ");h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "pcms prompt e/mu D*   ");h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "pcms prompt e/mu D(*)x");h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "pcms prompt e/mu other");h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();

      no = 1200;           
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "pcms cascad e/mu");      h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "pcms cascad e/mu Vcb");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "pcms cascad e/mu Vub");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "pcms cascad e/mu D    ");h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "pcms cascad e/mu D*   ");h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "pcms cascad e/mu D(*)x");h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "pcms cascad e/mu other");h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();

      no = 1210;           
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "pcms cascad e/mu");      h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "pcms cascad e/mu Vcb");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "pcms cascad e/mu Vub");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "pcms cascad e/mu D    ");h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "pcms cascad e/mu D*   ");h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "pcms cascad e/mu D(*)x");h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "pcms cascad e/mu other");h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();

      no = 1220;           
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "pcms cascad e/mu");      h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "pcms cascad e/mu Vcb");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "pcms cascad e/mu Vub");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "pcms cascad e/mu D    ");h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "pcms cascad e/mu D*   ");h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "pcms cascad e/mu D(*)x");h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "pcms cascad e/mu other");h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();

      no = 1300;           
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "cos#theta e/mu");      h = new TH1D(name, title, 50, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "cos#theta e/mu Vcb");  h = new TH1D(name, title, 50, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "cos#theta e/mu Vub");  h = new TH1D(name, title, 50, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "cos#theta e/mu D    ");  h = new TH1D(name, title, 50, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "cos#theta e/mu D*   ");  h = new TH1D(name, title, 50, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "cos#theta e/mu D(*)x");  h = new TH1D(name, title, 50, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "cos#theta e/mu other");  h = new TH1D(name, title, 50, -1., 1.); h->Sumw2();

      no = 1310;           
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "cos#theta e/mu");      h = new TH1D(name, title, 50, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "cos#theta e/mu Vcb");  h = new TH1D(name, title, 50, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "cos#theta e/mu Vub");  h = new TH1D(name, title, 50, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "cos#theta e/mu D    ");  h = new TH1D(name, title, 50, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "cos#theta e/mu D*   ");  h = new TH1D(name, title, 50, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "cos#theta e/mu D(*)x");  h = new TH1D(name, title, 50, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "cos#theta e/mu other");  h = new TH1D(name, title, 50, -1., 1.); h->Sumw2();

      no = 1320;           
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "cos#theta e/mu");      h = new TH1D(name, title, 50, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "cos#theta e/mu Vcb");  h = new TH1D(name, title, 50, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "cos#theta e/mu Vub");  h = new TH1D(name, title, 50, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "cos#theta e/mu D    ");  h = new TH1D(name, title, 50, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "cos#theta e/mu D*   ");  h = new TH1D(name, title, 50, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "cos#theta e/mu D(*)x");  h = new TH1D(name, title, 50, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "cos#theta e/mu other");  h = new TH1D(name, title, 50, -1., 1.); h->Sumw2();
				     
      no = 1400;		     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "pups all e/mu");      h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "pups all e/mu Vcb");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "pups all e/mu Vub");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "pups all e/mu D    ");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "pups all e/mu D*   ");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "pups all e/mu D(*)x");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "pups all e/mu other");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
				     
      no = 1410;		     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "pups all e/mu");      h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "pups all e/mu Vcb");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "pups all e/mu Vub");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "pups all e/mu D");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "pups all e/mu D*");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "pups all e/mu D(*)x");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "pups all e/mu other");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();

      no = 1420;		     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "pups all e/mu");      h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "pups all e/mu Vcb");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "pups all e/mu Vub");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "pups all e/mu D");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "pups all e/mu D*");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "pups all e/mu D(*)x");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "pups all e/mu other");  h = new TH1D(name, title, PCBIN, 0., PCMAX); h->Sumw2();

      no = 1500;           
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "theta lep");      h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "theta lep Vcb");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "theta lep Vub");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "theta lep D    ");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "theta lep D*   ");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "theta lep D(*)x");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "theta lep other");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
						    
      no = 1510;           			    
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "theta lep");      h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "theta lep Vcb");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "theta lep Vub");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "theta lep D    ");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "theta lep D*   ");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "theta lep D(*)x");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "theta lep other");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
						    
      no = 1520;           			    
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "theta lep");      h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "theta lep Vcb");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "theta lep Vub");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "theta lep D    ");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "theta lep D*   ");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "theta lep D(*)x");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "theta lep other");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();


      no = 1600;		     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "plab all had");      h = new TH1D(name, title, 2*PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "plab all had Vcb");  h = new TH1D(name, title, 2*PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "plab all had Vub");  h = new TH1D(name, title, 2*PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "plab all had D    ");  h = new TH1D(name, title, 2*PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "plab all had D*   ");  h = new TH1D(name, title, 2*PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "plab all had D(*)x");  h = new TH1D(name, title, 2*PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "plab all had other");  h = new TH1D(name, title, 2*PCBIN, 0., PCMAX); h->Sumw2();
				     
      no = 1610;		     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "plab all had");      h = new TH1D(name, title, 2*PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "plab all had Vcb");  h = new TH1D(name, title, 2*PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "plab all had Vub");  h = new TH1D(name, title, 2*PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "plab all had D");  h = new TH1D(name, title, 2*PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "plab all had D*");  h = new TH1D(name, title, 2*PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "plab all had D(*)x");  h = new TH1D(name, title, 2*PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "plab all had other");  h = new TH1D(name, title, 2*PCBIN, 0., PCMAX); h->Sumw2();

      no = 1620;		     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "plab all had");      h = new TH1D(name, title, 2*PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "plab all had Vcb");  h = new TH1D(name, title, 2*PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "plab all had Vub");  h = new TH1D(name, title, 2*PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "plab all had D");  h = new TH1D(name, title, 2*PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "plab all had D*");  h = new TH1D(name, title, 2*PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "plab all had D(*)x");  h = new TH1D(name, title, 2*PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "plab all had other");  h = new TH1D(name, title, 2*PCBIN, 0., PCMAX); h->Sumw2();


      no = 1700;           
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "theta had");      h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "theta had Vcb");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "theta had Vub");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "theta had D    ");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "theta had D*   ");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "theta had D(*)x");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "theta had other");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
						    
      no = 1710;           			    
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "theta had");      h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "theta had Vcb");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "theta had Vub");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "theta had D    ");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "theta had D*   ");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "theta had D(*)x");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "theta had other");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
						    
      no = 1720;           			    
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "theta had");      h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "theta had Vcb");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "theta had Vub");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "theta had D    ");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "theta had D*   ");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "theta had D(*)x");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "theta had other");  h = new TH1D(name, title, 36, 0., 180.); h->Sumw2();

      no = 1800;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "plab all photons");      h = new TH1D(name, title, 4*PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "plab all photons Vcb");  h = new TH1D(name, title, 4*PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "plab all photons Vub");  h = new TH1D(name, title, 4*PCBIN, 0., PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "plab all photons D    ");  h = new TH1D(name, title, 4*PCBIN, 0.,PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "plab all photons D*   ");  h = new TH1D(name, title, 4*PCBIN, 0.,PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "plab all photons D(*)x");  h = new TH1D(name, title, 4*PCBIN, 0.,PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "plab all photons other");  h = new TH1D(name, title, 4*PCBIN, 0.,PCMAX); h->Sumw2();
      
      no = 1810;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "plab all photons");      h = new TH1D(name, title, 4*PCBIN, 0.,PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "plab all photons Vcb");  h = new TH1D(name, title, 4*PCBIN, 0.,PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "plab all photons Vub");  h = new TH1D(name, title, 4*PCBIN, 0.,PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "plab all photons D");  h = new TH1D(name, title, 4*PCBIN, 0.,PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "plab all photons D*");  h = new TH1D(name, title, 4*PCBIN, 0.,PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "plab all photons D(*)x");  h = new TH1D(name, title, 4*PCBIN, 0.,PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "plab all photons other");  h = new TH1D(name, title, 4*PCBIN, 0.,PCMAX); h->Sumw2();

      no = 1820;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "plab all photons");      h = new TH1D(name, title, 4*PCBIN, 0.,PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "plab all photons Vcb");  h = new TH1D(name, title, 4*PCBIN, 0.,PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "plab all photons Vub");  h = new TH1D(name, title, 4*PCBIN, 0.,PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "plab all photons D");  h = new TH1D(name, title, 4*PCBIN, 0.,PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "plab all photons D*");  h = new TH1D(name, title, 4*PCBIN, 0.,PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "plab all photons D(*)x");  h = new TH1D(name, title, 4*PCBIN, 0.,PCMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "plab all photons other");  h = new TH1D(name, title, 4*PCBIN, 0.,PCMAX); h->Sumw2();

      no = 1900;           
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "theta photons");      h = new TH1D(name, title, 60, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "theta photons Vcb");  h = new TH1D(name, title, 60, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "theta photons Vub");  h = new TH1D(name, title, 60, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "theta photons D    ");  h = new TH1D(name, title, 60, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "theta photons D*   ");  h = new TH1D(name, title, 60, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "theta photons D(*)x");  h = new TH1D(name, title, 60, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "theta photons other");  h = new TH1D(name, title, 60, 0., 180.); h->Sumw2();
                                                  
      no = 1910;                                  
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "theta photons");      h = new TH1D(name, title, 60, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "theta photons Vcb");  h = new TH1D(name, title, 60, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "theta photons Vub");  h = new TH1D(name, title, 60, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "theta photons D    ");  h = new TH1D(name, title, 60, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "theta photons D*   ");  h = new TH1D(name, title, 60, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "theta photons D(*)x");  h = new TH1D(name, title, 60, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "theta photons other");  h = new TH1D(name, title, 60, 0., 180.); h->Sumw2();
                                                  
      no = 1920;                                  
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "theta photons");      h = new TH1D(name, title, 60, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "theta photons Vcb");  h = new TH1D(name, title, 60, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "theta photons Vub");  h = new TH1D(name, title, 60, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "theta photons D    ");  h = new TH1D(name, title, 60, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "theta photons D*   ");  h = new TH1D(name, title, 60, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "theta photons D(*)x");  h = new TH1D(name, title, 60, 0., 180.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "theta photons other");  h = new TH1D(name, title, 60, 0., 180.); h->Sumw2();


				     
      // -- Recoil		     
      no = 2000;		     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "xhad mass");     h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "xhad mass Vcb"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "xhad mass Vub"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "xhad mass D    "); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "xhad mass D*   "); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "xhad mass D(*)x"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "xhad mass other"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
				     
      no = 2010;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "xhad mass");     h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "xhad mass Vcb"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "xhad mass Vub"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "xhad mass D    "); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "xhad mass D*   "); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "xhad mass D(*)x"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "xhad mass other"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();

      no = 2020;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "xhad mass");     h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "xhad mass Vcb"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "xhad mass Vub"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "xhad mass D    "); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "xhad mass D*   "); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "xhad mass D(*)x"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "xhad mass other"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
				     
      no = 2100;		     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "xhad mass");     h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "xhad mass Vcb"); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "xhad mass Vub"); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "xhad mass D    "); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "xhad mass D*   "); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "xhad mass D(*)x"); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "xhad mass other"); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      				     
      no = 2110;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "xhad mass");     h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "xhad mass Vcb"); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "xhad mass Vub"); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "xhad mass D    "); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "xhad mass D*   "); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "xhad mass D(*)x"); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "xhad mass other"); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();

      no = 2120;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "xhad mass");     h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "xhad mass Vcb"); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "xhad mass Vub"); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "xhad mass D    "); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "xhad mass D*   "); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "xhad mass D(*)x"); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "xhad mass other"); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
				     
      no = 2200;		     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "xhadgen mass");     h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "xhadgen mass Vcb"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "xhadgen mass Vub"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "xhadgen mass D    "); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "xhadgen mass D*   "); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "xhadgen mass D(*)x"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "xhadgen mass other"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      				     
      no = 2210;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "xhadgen mass");     h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "xhadgen mass Vcb"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "xhadgen mass Vub"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "xhadgen mass D    "); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "xhadgen mass D*   "); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "xhadgen mass D(*)x"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "xhadgen mass other"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();

      no = 2220;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "xhadgen mass");     h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "xhadgen mass Vcb"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "xhadgen mass Vub"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "xhadgen mass D    "); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "xhadgen mass D*   "); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "xhadgen mass D(*)x"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "xhadgen mass other"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
				     
      no = 2400;		     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "xhad mass fit");     h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "xhad mass fit Vcb"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "xhad mass fit Vub"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "xhad mass fit D    "); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "xhad mass fit D*   "); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "xhad mass fit D(*)x"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "xhad mass fit other"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
				     
      no = 2410;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "xhad mass fit");     h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "xhad mass fit Vcb"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "xhad mass fit Vub"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "xhad mass fit D    "); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "xhad mass fit D*   "); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "xhad mass fit D(*)x"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "xhad mass fit other"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();

      no = 2420;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "xhad mass fit");     h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "xhad mass fit Vcb"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "xhad mass fit Vub"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "xhad mass fit D    "); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "xhad mass fit D*   "); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "xhad mass fit D(*)x"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "xhad mass fit other"); h = new TH1D(name, title, XBIN, 0., XMAX); h->Sumw2();
				     

      no = 2500;		     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "xhad mass fit");     h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "xhad mass fit Vcb"); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "xhad mass fit Vub"); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "xhad mass fit D    "); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "xhad mass fit D*   "); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "xhad mass fit D(*)x"); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "xhad mass fit other"); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      				     
      no = 2510;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "xhad mass fit");     h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "xhad mass fit Vcb"); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "xhad mass fit Vub"); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "xhad mass fit D    "); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "xhad mass fit D*   "); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "xhad mass fit D(*)x"); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "xhad mass fit other"); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();

      no = 2520;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "xhad mass fit");     h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "xhad mass fit Vcb"); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "xhad mass fit Vub"); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "xhad mass fit D    "); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "xhad mass fit D*   "); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "xhad mass fit D(*)x"); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "xhad mass fit other"); h = new TH1D(name, title, XBIN/10, 0., XMAX); h->Sumw2();

      
      no = 2600;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "cos#theta pmiss");  h = new TH1D(name, title, 20, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "cos#theta pmiss");  h = new TH1D(name, title, 20, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "cos#theta pmiss");  h = new TH1D(name, title, 20, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "cos#theta pmiss");  h = new TH1D(name, title, 20, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "cos#theta pmiss");  h = new TH1D(name, title, 20, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "cos#theta pmiss");  h = new TH1D(name, title, 20, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "cos#theta pmiss");  h = new TH1D(name, title, 20, -1., 1.); h->Sumw2();
				     
      no = 2610;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "cos#theta pmiss");  h = new TH1D(name, title, 20, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "cos#theta pmiss");  h = new TH1D(name, title, 20, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "cos#theta pmiss");  h = new TH1D(name, title, 20, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "cos#theta pmiss");  h = new TH1D(name, title, 20, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "cos#theta pmiss");  h = new TH1D(name, title, 20, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "cos#theta pmiss");  h = new TH1D(name, title, 20, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "cos#theta pmiss");  h = new TH1D(name, title, 20, -1., 1.); h->Sumw2();

      no = 2620;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "cos#theta pmiss");  h = new TH1D(name, title, 20, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "cos#theta pmiss");  h = new TH1D(name, title, 20, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "cos#theta pmiss");  h = new TH1D(name, title, 20, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "cos#theta pmiss");  h = new TH1D(name, title, 20, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "cos#theta pmiss");  h = new TH1D(name, title, 20, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "cos#theta pmiss");  h = new TH1D(name, title, 20, -1., 1.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "cos#theta pmiss");  h = new TH1D(name, title, 20, -1., 1.); h->Sumw2();

      no = 2700;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "pmiss");  h = new TH1D(name, title, 25, 0., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "pmiss");  h = new TH1D(name, title, 25, 0., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "pmiss");  h = new TH1D(name, title, 25, 0., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "pmiss");  h = new TH1D(name, title, 25, 0., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "pmiss");  h = new TH1D(name, title, 25, 0., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "pmiss");  h = new TH1D(name, title, 25, 0., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "pmiss");  h = new TH1D(name, title, 25, 0., 5.); h->Sumw2();

      no = 2710;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "pmiss");  h = new TH1D(name, title, 25, 0., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "pmiss");  h = new TH1D(name, title, 25, 0., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "pmiss");  h = new TH1D(name, title, 25, 0., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "pmiss");  h = new TH1D(name, title, 25, 0., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "pmiss");  h = new TH1D(name, title, 25, 0., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "pmiss");  h = new TH1D(name, title, 25, 0., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "pmiss");  h = new TH1D(name, title, 25, 0., 5.); h->Sumw2();

      no = 2720;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "pmiss");  h = new TH1D(name, title, 25, 0., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "pmiss");  h = new TH1D(name, title, 25, 0., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "pmiss");  h = new TH1D(name, title, 25, 0., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "pmiss");  h = new TH1D(name, title, 25, 0., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "pmiss");  h = new TH1D(name, title, 25, 0., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "pmiss");  h = new TH1D(name, title, 25, 0., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "pmiss");  h = new TH1D(name, title, 25, 0., 5.); h->Sumw2();

      
      Float_t MXCUT = 1.6;
      Int_t nbins = 13;
      Int_t nbins2 = 10;
      Float_t ranges[14] = {0.,.3,.6,1.1,MXCUT,1.9,2.2,2.5,2.8,3.1,3.4,3.7,4.2,5.};
      Float_t ranges2[11] = {0.,MXCUT,1.9,2.2,2.5,2.8,3.1,3.4,3.7,4.2,5.};

      no = 2800;		     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "xhad mass");     h = new TH1D(name, title, nbins, ranges); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "xhad mass Vcb"); h = new TH1D(name, title, nbins, ranges); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "xhad mass Vub"); h = new TH1D(name, title, nbins, ranges); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "xhad mass D    "); h = new TH1D(name, title, nbins, ranges); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "xhad mass D*   "); h = new TH1D(name, title, nbins, ranges); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "xhad mass D(*)x"); h = new TH1D(name, title, nbins, ranges); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "xhad mass other"); h = new TH1D(name, title, nbins, ranges); h->Sumw2();
      				     
      no = 2810;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "xhad mass");     h = new TH1D(name, title, nbins, ranges); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "xhad mass Vcb"); h = new TH1D(name, title, nbins, ranges); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "xhad mass Vub"); h = new TH1D(name, title, nbins, ranges); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "xhad mass D    "); h = new TH1D(name, title, nbins, ranges); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "xhad mass D*   "); h = new TH1D(name, title, nbins, ranges); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "xhad mass D(*)x"); h = new TH1D(name, title, nbins, ranges); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "xhad mass other"); h = new TH1D(name, title, nbins, ranges); h->Sumw2();

      no = 2820;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "xhad mass");     h = new TH1D(name, title, nbins, ranges); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "xhad mass Vcb"); h = new TH1D(name, title, nbins, ranges); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "xhad mass Vub"); h = new TH1D(name, title, nbins, ranges); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "xhad mass D    "); h = new TH1D(name, title, nbins, ranges); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "xhad mass D*   "); h = new TH1D(name, title, nbins, ranges); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "xhad mass D(*)x"); h = new TH1D(name, title, nbins, ranges); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "xhad mass other"); h = new TH1D(name, title, nbins, ranges); h->Sumw2();

      no = 2900;		     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "xhad mass");     h = new TH1D(name, title, nbins2, ranges2); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "xhad mass Vcb"); h = new TH1D(name, title, nbins2, ranges2); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "xhad mass Vub"); h = new TH1D(name, title, nbins2, ranges2); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "xhad mass D    "); h = new TH1D(name, title, nbins2, ranges2); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "xhad mass D*   "); h = new TH1D(name, title, nbins2, ranges2); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "xhad mass D(*)x"); h = new TH1D(name, title, nbins2, ranges2); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "xhad mass other"); h = new TH1D(name, title, nbins2, ranges2); h->Sumw2();
      				     
      no = 2910;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "xhad mass");     h = new TH1D(name, title, nbins2, ranges2); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "xhad mass Vcb"); h = new TH1D(name, title, nbins2, ranges2); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "xhad mass Vub"); h = new TH1D(name, title, nbins2, ranges2); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "xhad mass D    "); h = new TH1D(name, title, nbins2, ranges2); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "xhad mass D*   "); h = new TH1D(name, title, nbins2, ranges2); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "xhad mass D(*)x"); h = new TH1D(name, title, nbins2, ranges2); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "xhad mass other"); h = new TH1D(name, title, nbins2, ranges2); h->Sumw2();

      no = 2920;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "xhad mass");     h = new TH1D(name, title, nbins2, ranges2); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "xhad mass Vcb"); h = new TH1D(name, title, nbins2, ranges2); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "xhad mass Vub"); h = new TH1D(name, title, nbins2, ranges2); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "xhad mass D    "); h = new TH1D(name, title, nbins2, ranges2); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "xhad mass D*   "); h = new TH1D(name, title, nbins2, ranges2); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "xhad mass D(*)x"); h = new TH1D(name, title, nbins2, ranges2); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "xhad mass other"); h = new TH1D(name, title, nbins2, ranges2); h->Sumw2();
				     



      no = 3000;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "mm2");     h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "mm2 Vcb"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "mm2 Vub"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "mm2 D    "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "mm2 D*   "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "mm2 D(*)x"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "mm2 other"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
				     
      no = 3010;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "mm2");     h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "mm2 Vcb"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "mm2 Vub"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "mm2 D    "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "mm2 D*   "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "mm2 D(*)x"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "mm2 other"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();

      no = 3020;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "mm2");     h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "mm2 Vcb"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "mm2 Vub"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "mm2 D    "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "mm2 D*   "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "mm2 D(*)x"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "mm2 other"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();

      no = 3100;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "mm2");     h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "mm2 Vcb"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "mm2 Vub"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "mm2 D    "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "mm2 D*   "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "mm2 D(*)x"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "mm2 other"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
				     
      no = 3110;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "mm2");     h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "mm2 Vcb"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "mm2 Vub"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "mm2 D    "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "mm2 D*   "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "mm2 D(*)x"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "mm2 other"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();

      no = 3120;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "mm2");     h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "mm2 Vcb"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "mm2 Vub"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "mm2 D    "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "mm2 D*   "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "mm2 D(*)x"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "mm2 other"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();

      no = 3200;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "mm2");     h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "mm2 Vcb"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "mm2 Vub"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "mm2 D    "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "mm2 D*   "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "mm2 D(*)x"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "mm2 other"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
				     
      no = 3210;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "mm2");     h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "mm2 Vcb"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "mm2 Vub"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "mm2 D    "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "mm2 D*   "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "mm2 D(*)x"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "mm2 other"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();

      no = 3220;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "mm2");     h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "mm2 Vcb"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "mm2 Vub"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "mm2 D    "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "mm2 D*   "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "mm2 D(*)x"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "mm2 other"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();

      no = 3300;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "mm2");     h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "mm2 Vcb"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "mm2 Vub"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "mm2 D    "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "mm2 D*   "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "mm2 D(*)x"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "mm2 other"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
				     
      no = 3310;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "mm2");     h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "mm2 Vcb"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "mm2 Vub"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "mm2 D    "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "mm2 D*   "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "mm2 D(*)x"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "mm2 other"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();

      no = 3320;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "mm2");     h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "mm2 Vcb"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "mm2 Vub"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "mm2 D    "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "mm2 D*   "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "mm2 D(*)x"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "mm2 other"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();

      no = 3400;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "mm2");     h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "mm2 Vcb"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "mm2 Vub"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "mm2 D    "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "mm2 D*   "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "mm2 D(*)x"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "mm2 other"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
				     
      no = 3410;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "mm2");     h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "mm2 Vcb"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "mm2 Vub"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "mm2 D    "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "mm2 D*   "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "mm2 D(*)x"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "mm2 other"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();

      no = 3420;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "mm2");     h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "mm2 Vcb"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "mm2 Vub"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "mm2 D    "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "mm2 D*   "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "mm2 D(*)x"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "mm2 other"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();

      no = 3500;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "mm2");     h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "mm2 Vcb"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "mm2 Vub"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "mm2 D    "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "mm2 D*   "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "mm2 D(*)x"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "mm2 other"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
				     
      no = 3510;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "mm2");     h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "mm2 Vcb"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "mm2 Vub"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "mm2 D    "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "mm2 D*   "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "mm2 D(*)x"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "mm2 other"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();

      no = 3520;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "mm2");     h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "mm2 Vcb"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "mm2 Vub"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "mm2 D    "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "mm2 D*   "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "mm2 D(*)x"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "mm2 other"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();

      no = 3600;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "mm2");     h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "mm2 Vcb"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "mm2 Vub"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "mm2 D    "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "mm2 D*   "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "mm2 D(*)x"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "mm2 other"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
				     
      no = 3610;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "mm2");     h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "mm2 Vcb"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "mm2 Vub"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "mm2 D    "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "mm2 D*   "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "mm2 D(*)x"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "mm2 other"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();

      no = 3620;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "mm2");     h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "mm2 Vcb"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "mm2 Vub"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "mm2 D    "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "mm2 D*   "); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "mm2 D(*)x"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "mm2 other"); h = new TH1D(name, title, XBIN, -XMAX, XMAX); h->Sumw2();

      no = 3800;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "Q2");  h = new TH1D(name, title, 30, 0., 15.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "Q2");  h = new TH1D(name, title, 30, 0., 15.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "Q2");  h = new TH1D(name, title, 30, 0., 15.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "Q2");  h = new TH1D(name, title, 30, 0., 15.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "Q2");  h = new TH1D(name, title, 30, 0., 15.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "Q2");  h = new TH1D(name, title, 30, 0., 15.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "Q2");  h = new TH1D(name, title, 30, 0., 15.); h->Sumw2();
				     
      no = 3810;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "Q2");  h = new TH1D(name, title, 30, 0., 15.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "Q2");  h = new TH1D(name, title, 30, 0., 15.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "Q2");  h = new TH1D(name, title, 30, 0., 15.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "Q2");  h = new TH1D(name, title, 30, 0., 15.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "Q2");  h = new TH1D(name, title, 30, 0., 15.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "Q2");  h = new TH1D(name, title, 30, 0., 15.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "Q2");  h = new TH1D(name, title, 30, 0., 15.); h->Sumw2();

      no = 3820;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "Q2");  h = new TH1D(name, title, 30, 0., 15.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "Q2");  h = new TH1D(name, title, 30, 0., 15.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "Q2");  h = new TH1D(name, title, 30, 0., 15.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "Q2");  h = new TH1D(name, title, 30, 0., 15.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "Q2");  h = new TH1D(name, title, 30, 0., 15.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "Q2");  h = new TH1D(name, title, 30, 0., 15.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "Q2");  h = new TH1D(name, title, 30, 0., 15.); h->Sumw2();


      no = 3900;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "emax");  h = new TH1D(name, title, 30, 0., 3.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "emax");  h = new TH1D(name, title, 30, 0., 3.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "emax");  h = new TH1D(name, title, 30, 0., 3.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "emax");  h = new TH1D(name, title, 30, 0., 3.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "emax");  h = new TH1D(name, title, 30, 0., 3.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "emax");  h = new TH1D(name, title, 30, 0., 3.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "emax");  h = new TH1D(name, title, 30, 0., 3.); h->Sumw2();

      no = 3910;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "emax");  h = new TH1D(name, title, 30, 0., 3.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "emax");  h = new TH1D(name, title, 30, 0., 3.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "emax");  h = new TH1D(name, title, 30, 0., 3.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "emax");  h = new TH1D(name, title, 30, 0., 3.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "emax");  h = new TH1D(name, title, 30, 0., 3.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "emax");  h = new TH1D(name, title, 30, 0., 3.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "emax");  h = new TH1D(name, title, 30, 0., 3.); h->Sumw2();

      no = 3920;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "emax");  h = new TH1D(name, title, 30, 0., 3.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "emax");  h = new TH1D(name, title, 30, 0., 3.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "emax");  h = new TH1D(name, title, 30, 0., 3.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "emax");  h = new TH1D(name, title, 30, 0., 3.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "emax");  h = new TH1D(name, title, 30, 0., 3.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "emax");  h = new TH1D(name, title, 30, 0., 3.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "emax");  h = new TH1D(name, title, 30, 0., 3.); h->Sumw2();
      				     
      no = 4000;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "nTrk");      h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "nTrk Vcb");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "nTrk Vub");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "nTrk D    ");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "nTrk D*   ");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "nTrk D(*)x");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "nTrk other");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();

      no = 4010;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "nTrk");      h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "nTrk Vcb");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "nTrk Vub");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "nTrk D    ");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "nTrk D*   ");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "nTrk D(*)x");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "nTrk other");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
				     
      no = 4020;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "nTrk");      h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "nTrk Vcb");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "nTrk Vub");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "nTrk D    ");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "nTrk D*   ");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "nTrk D(*)x");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "nTrk other");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      				     
      no = 4100;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "nNut");      h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "nNut Vcb");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "nNut Vub");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "nNut D    ");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "nNut D*   ");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "nNut D(*)x");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "nNut other");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
				     
      no = 4110;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "nNut");      h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "nNut Vcb");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "nNut Vub");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "nNut D    ");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "nNut D*   ");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "nNut D(*)x");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "nNut other");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();

      no = 4120;                   
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "nNut");      h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "nNut Vcb");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "nNut Vub");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "nNut D    ");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "nNut D*   ");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "nNut D(*)x");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "nNut other");  h = new TH1D(name, title, 20, 0., 20.); h->Sumw2();

      				     
      no = 4200;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "chargeRecoil");      h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "chargeRecoil Vcb");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "chargeRecoil Vub");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "chargeRecoil D    ");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "chargeRecoil D*   ");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "chargeRecoil D(*)x");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "chargeRecoil other");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();

      no = 4210;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "chargeRecoil");      h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "chargeRecoil Vcb");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "chargeRecoil Vub");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "chargeRecoil D    ");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "chargeRecoil D*   ");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "chargeRecoil D(*)x");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "chargeRecoil other");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();

      no = 4220;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "chargeRecoil");      h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "chargeRecoil Vcb");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "chargeRecoil Vub");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "chargeRecoil D    ");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "chargeRecoil D*   ");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "chargeRecoil D(*)x");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "chargeRecoil other");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();

      no = 4300;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "charge total");      h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "charge total Vcb");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "charge total Vub");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "charge total D    ");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "charge total D*   ");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "charge total D(*)x");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "charge total other");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
				     			    
      no = 4310;           	     			    
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "charge total");      h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "charge total Vcb");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "charge total Vub");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "charge total D    ");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "charge total D*   ");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "charge total D(*)x");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "charge total other");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
							    
      no = 4320;           	     			    
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "charge total");      h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "charge total Vcb");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "charge total Vub");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "charge total D    ");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "charge total D*   ");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "charge total D(*)x");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "charge total other");  h = new TH1D(name, title, 10, -5., 5.); h->Sumw2();

      no = 4400;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "number of kaons");      h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "number of kaons Vcb");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "number of kaons Vub");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "number of kaons D    ");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "number of kaons D*   ");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "number of kaons D(*)x");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "number of kaons other");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
				     			    
      no = 4410;           	     			    
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "number of kaons");      h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "number of kaons Vcb");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "number of kaons Vub");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "number of kaons D    ");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "number of kaons D*   ");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "number of kaons D(*)x");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "number of kaons other");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
							    
      no = 4420;           	     			    
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "number of kaons");      h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "number of kaons Vcb");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "number of kaons Vub");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "number of kaons D    ");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "number of kaons D*   ");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "number of kaons D(*)x");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "number of kaons other");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();

      no = 4500;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "number of kshorts");      h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "number of kshorts Vcb");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "number of kshorts Vub");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "number of kshorts D    ");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "number of kshorts D*   ");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "number of kshorts D(*)x");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "number of kshorts other");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
				     			    
      no = 4510;           	     			    
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "number of kshorts");      h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "number of kshorts Vcb");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "number of kshorts Vub");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "number of kshorts D    ");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "number of kshorts D*   ");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "number of kshorts D(*)x");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "number of kshorts other");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
							    
      no = 4520;           	     			    
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "number of kshorts");      h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "number of kshorts Vcb");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "number of kshorts Vub");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "number of kshorts D    ");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "number of kshorts D*   ");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "number of kshorts D(*)x");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "number of kshorts other");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();

      no = 4600;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "number of leptons");      h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "number of leptons Vcb");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "number of leptons Vub");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "number of leptons D    ");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "number of leptons D*   ");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "number of leptons D(*)x");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "number of leptons other");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
				     			    
      no = 4610;           	     			    
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "number of leptons");      h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "number of leptons Vcb");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "number of leptons Vub");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "number of leptons D    ");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "number of leptons D*   ");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "number of leptons D(*)x");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "number of leptons other");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
							    
      no = 4620;           	     			    
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "number of leptons");      h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "number of leptons Vcb");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "number of leptons Vub");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "number of leptons D    ");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "number of leptons D*   ");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "number of leptons D(*)x");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "number of leptons other");  h = new TH1D(name, title, 10, 0., 10.); h->Sumw2();

      no = 9000;
          

      sprintf(name,"%s%d",lc,no+0); sprintf(title, "res xhad mass");      h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "res xhad mass Vcb");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "res xhad mass Vub");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "res xhad mass D    ");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "res xhad mass D*   ");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "res xhad mass D(*)x");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "res xhad mass other");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
				     
      no = 9010;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "res xhad mass");      h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "res xhad mass Vcb");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "res xhad mass Vub");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "res xhad mass D    ");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "res xhad mass D*   ");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "res xhad mass D(*)x");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "res xhad mass other");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();

      no = 9020;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "res xhad mass");      h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "res xhad mass Vcb");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "res xhad mass Vub");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "res xhad mass D    ");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "res xhad mass D*   ");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "res xhad mass D(*)x");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "res xhad mass other");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();

      no = 9100;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "res pmiss");      h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "res pmiss Vcb");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "res pmiss Vub");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "res pmiss D    ");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "res pmiss D*   ");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "res pmiss D(*)x");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "res pmiss other");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();

      no = 9110;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "res pmiss");      h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "res pmiss Vcb");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "res pmiss Vub");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "res pmiss D    ");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "res pmiss D*   ");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "res pmiss D(*)x");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "res pmiss other");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();

      no = 9120;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "res pmiss");      h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "res pmiss Vcb");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "res pmiss Vub");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "res pmiss D    ");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "res pmiss D*   ");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "res pmiss D(*)x");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "res pmiss other");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();

      no = 9200;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "res tmiss");      h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "res tmiss Vcb");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "res tmiss Vub");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "res tmiss D    ");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "res tmiss D*   ");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "res tmiss D(*)x");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "res tmiss other");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();

      no = 9210;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "res tmiss");      h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "res tmiss Vcb");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "res tmiss Vub");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "res tmiss D    ");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "res tmiss D*   ");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "res tmiss D(*)x");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "res tmiss other");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();

      no = 9220;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "res tmiss");      h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "res tmiss Vcb");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "res tmiss Vub");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "res tmiss D    ");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "res tmiss D*   ");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "res tmiss D(*)x");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "res tmiss other");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();

      no = 9300;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "res Q2");      h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "res Q2 Vcb");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "res Q2 Vub");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "res Q2 D    ");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "res Q2 D*   ");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "res Q2 D(*)x");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "res Q2 other");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();

      no = 9310;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "res Q2");      h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "res Q2 Vcb");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "res Q2 Vub");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "res Q2 D    ");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "res Q2 D*   ");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "res Q2 D(*)x");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "res Q2 other");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();

      no = 9320;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "res Q2");      h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "res Q2 Vcb");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "res Q2 Vub");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "res Q2 D    ");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "res Q2 D*   ");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "res Q2 D(*)x");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "res Q2 other");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();


      no = 9400;
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "res xhad fitted mass");      h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "res xhad fitted mass Vcb");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "res xhad fitted mass Vub");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "res xhad fitted mass D    ");h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "res xhad fitted mass D*   ");h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "res xhad fitted mass D(*)x");h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "res xhad fitted mass other");h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
				     
      no = 9410;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "res xhad fitted mass");      h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "res xhad fitted mass Vcb");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "res xhad fitted mass Vub");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "res xhad fitted mass D    ");h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "res xhad fitted mass D*   ");h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "res xhad fitted mass D(*)x");h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "res xhad fitted mass other");h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();

      no = 9420;           	     
      sprintf(name,"%s%d",lc,no+0); sprintf(title, "res xhad fitted mass");      h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+1); sprintf(title, "res xhad fitted mass Vcb");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2(); 
      sprintf(name,"%s%d",lc,no+2); sprintf(title, "res xhad fitted mass Vub");  h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+3); sprintf(title, "res xhad fitted mass D    ");h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+4); sprintf(title, "res xhad fitted mass D*   ");h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+5); sprintf(title, "res xhad fitted mass D(*)x");h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
      sprintf(name,"%s%d",lc,no+6); sprintf(title, "res xhad fitted mass other");h = new TH1D(name, title, 50, -5., 5.); h->Sumw2();
				     
#endif

    }


    sprintf(name, "NuTheta");  sprintf(title, "Cos(Theta) angle of neutrino momentum");  h = new TH1D(name, title, 50, -1., 1.0); h->Sumw2();
    sprintf(name, "NuPhi");  sprintf(title, "Phi angle of neutrino momentum");  h = new TH1D(name, title, 50, -3.15, 3.15); h->Sumw2();
    sprintf(name, "mNuSqNC");  sprintf(title, "Missing mass squared");  h = new TH1D(name, title, 100, -3., 8.0); h->Sumw2();
    sprintf(name, "nc_mNuSqNC");  sprintf(title, "Missing mass squared (no cut)");  h = new TH1D(name, title, 100, -3., 8.0); h->Sumw2();
    sprintf(name, "mes all");  sprintf(title, "mes distribution");  h = new TH1D(name, title, 50, 5.2, 5.3); 
    
    if (fOptGammas) {
      gDirectory->cd("CutPlots");
      for(int jv =0; jv<15; jv++) {
	sprintf(name, "Mnu%d", jv);  sprintf(title, "Missing mass squared");  h = new TH1D(name, title, 4, -1.8, 3.0); h->Sumw2();
	sprintf(name, "bin_Mnu%d", jv);  sprintf(title, "Missing mass squared");  h = new TH1D(name, title, 100, -4., 8.0); h->Sumw2();
	sprintf(name, "nc_Mnu%d", jv);  sprintf(title, "Missing mass squared");  h = new TH1D(name, title, 4, -1.8, 3.0); h->Sumw2();
	sprintf(name, "bin_nc_Mnu%d", jv);  sprintf(title, "Missing mass squared");  h = new TH1D(name, title, 100, -4., 8.0); h->Sumw2();
	//Reso block
	sprintf(name, "ResMX%d",jv);  sprintf(title, "Reso Mx");  h = new TH1D(name, title, 100, -4.0, 4.0); h->Sumw2();
	sprintf(name, "nc_ResMX%d",jv);  sprintf(title, "nc_Reso Mx");  h = new TH1D(name, title, 100, -4.0, 4.0); h->Sumw2();
	sprintf(name, "bin_ResMX%d",jv);  sprintf(title, "Reso Mx");  h = new TH1D(name, title, 8, -4.0, 4.0); h->Sumw2();
	sprintf(name, "bin_nc_ResMX%d",jv);  sprintf(title, "nc_Reso Mx");  h = new TH1D(name, title, 8, -4.0, 4.0); h->Sumw2();
	sprintf(name, "ResMXF%d",jv);  sprintf(title, "Reso Mx");  h = new TH1D(name, title, 100, -4.0, 4.0); h->Sumw2();
	sprintf(name, "nc_ResMXF%d",jv);  sprintf(title, "nc_Reso Mx");  h = new TH1D(name, title, 100, -4.0, 4.0); h->Sumw2();
	sprintf(name, "bin_ResMXF%d",jv);  sprintf(title, "Reso Mx");  h = new TH1D(name, title, 8, -4.0, 4.0); h->Sumw2();
	sprintf(name, "bin_nc_ResMXF%d",jv);  sprintf(title, "nc_Reso Mx");  h = new TH1D(name, title, 8, -4.0, 4.0); h->Sumw2();
	// cout<<"Problems with sub directories"<<endl;
	
	for(int iv =0; iv<10; iv++) {
	  sprintf(name, "MNH%d%d", jv,iv);  sprintf(title, "Missing mass squared");  h = new TH1D(name, title, 4, -1.8, 3.0); h->Sumw2();
	  sprintf(name, "bin_MNH%d%d", jv,iv);  sprintf(title, "Missing mass squared");  h = new TH1D(name, title, 100, -4., 8.0); h->Sumw2();
	  //Reso block
	  sprintf(name, "ResNH%d%d",jv,iv);  sprintf(title, "Reso Mx");  h = new TH1D(name, title, 100, -2.0, 2.0); h->Sumw2();
	  sprintf(name, "bin_ResNH%d%d",jv,iv);  sprintf(title, "Reso Mx");  h = new TH1D(name, title, 16, -2.0, 2.0); h->Sumw2();
	  sprintf(name, "MxNH%d%d",jv,iv);  sprintf(title, "Mx");  h = new TH1D(name, title, 100, 0.0, 4.5); h->Sumw2();
	  sprintf(name, "bin_MxNH%d%d",jv,iv);  sprintf(title, "Mx");  h = new TH1D(name, title, 3, 0.0, 4.5); h->Sumw2();
	  //Reso block Fitted
	  sprintf(name, "ResNHF%d%d",jv,iv);  sprintf(title, "Reso Mx");  h = new TH1D(name, title, 100, -2.0, 2.0); h->Sumw2();
	  sprintf(name, "bin_ResNHF%d%d",jv,iv);  sprintf(title, "Reso Mx");  h = new TH1D(name, title, 16, -2.0, 2.0); h->Sumw2();
	  sprintf(name, "MxNHF%d%d",jv,iv);  sprintf(title, "Mx");  h = new TH1D(name, title, 100, 0.0, 4.5); h->Sumw2();
	    sprintf(name, "bin_MxNHF%d%d",jv,iv);  sprintf(title, "Mx");  h = new TH1D(name, title, 3, 0.0, 4.5); h->Sumw2();
	}
	
	//	fHistFile->cd();
      }
    }
    fHistFile->cd();
    gDirectory->cd();
  }
}


// ----------------------------------------------------------------------
void baseClass::switchOffReading(const char *s) {
  fChain->SetBranchStatus(s,0);
}


// ----------------------------------------------------------------------
Int_t baseClass::GetEntry(Int_t entry) {
// Read contents of entry.
   if (!fChain) return 0;
   return fChain->GetEntry(entry);
}

// ----------------------------------------------------------------------
Int_t baseClass::LoadTree(Int_t entry) {
// Set the environment to read one entry
   if (!fChain) return -5;
   Int_t centry = fChain->LoadTree(entry);
   if (centry < 0) return centry;
   if (fChain->IsA() != TChain::Class()) return centry;
   TChain *chain = (TChain*)fChain;
   if (chain->GetTreeNumber() != fCurrent) {
      fCurrent = chain->GetTreeNumber();
      Notify();
   }
   return centry;
}

// ----------------------------------------------------------------------
void baseClass::Init(TTree *tree, int isMC) {
//   Set branch addresses
  
  if (isMC) { 
    fIsMC = kTRUE; 
  } else {
    fIsMC = kFALSE; 
  }
   if (tree == 0) return;
   fChain    = tree;
   fCurrent = -1;
   fChain->SetMakeClass(1);

   fChain->SetBranchAddress("event",&event);
   fChain->SetBranchAddress("runNumber",&runNumber);
   fChain->SetBranchAddress("platform",&platform);
   fChain->SetBranchAddress("partition",&partition);
   fChain->SetBranchAddress("upperID",&upperID);
   fChain->SetBranchAddress("lowerID",&lowerID);

   fChain->SetBranchAddress("primVtxX",&primVtxX);
   fChain->SetBranchAddress("primVtxY",&primVtxY);
   fChain->SetBranchAddress("primVtxZ",&primVtxZ);
   fChain->SetBranchAddress("beamSX",&beamSX);
   fChain->SetBranchAddress("beamSY",&beamSY);
   fChain->SetBranchAddress("beamSZ",&beamSZ);
   fChain->SetBranchAddress("beamSCovXX",&beamSCovXX);
   fChain->SetBranchAddress("beamSCovYY",&beamSCovYY);
   fChain->SetBranchAddress("beamSCovZZ",&beamSCovZZ);
   fChain->SetBranchAddress("beamSCovXZ",&beamSCovXZ);
   fChain->SetBranchAddress("pxUps",&pxUps);
   fChain->SetBranchAddress("pyUps",&pyUps);
   fChain->SetBranchAddress("pzUps",&pzUps);
   fChain->SetBranchAddress("eUps",&eUps);
   fChain->SetBranchAddress("nTrkTot",&nTrkTot);
   fChain->SetBranchAddress("W2",&W2);
   fChain->SetBranchAddress("FoxWol2",&FoxWol2);
   fChain->SetBranchAddress("FoxWol2Neu",&FoxWol2Neu);
   fChain->SetBranchAddress("thrust",&thrust);
   fChain->SetBranchAddress("thrustNeu",&thrustNeu);
   //MC block
   if(isMC) { 
     fChain->SetBranchAddress("nMc",&nMc);
     fChain->SetBranchAddress("pMc",pMc);
     fChain->SetBranchAddress("massMc",massMc);
     fChain->SetBranchAddress("thetaMc",thetaMc);
     fChain->SetBranchAddress("phiMc",phiMc);
     fChain->SetBranchAddress("idMc",idMc);
     fChain->SetBranchAddress("mothMc",mothMc);
     fChain->SetBranchAddress("nDauMc",nDauMc);
     fChain->SetBranchAddress("xMc",xMc);
     fChain->SetBranchAddress("yMc",yMc);
     fChain->SetBranchAddress("zMc",zMc);
   }
   fChain->SetBranchAddress("nB0",&nB0);
   fChain->SetBranchAddress("massB0",massB0);
   fChain->SetBranchAddress("pB0",pB0);
   fChain->SetBranchAddress("thB0",thB0);
   fChain->SetBranchAddress("phiB0",phiB0);
   fChain->SetBranchAddress("errMassB0",errMassB0);
   fChain->SetBranchAddress("m0B0",m0B0);
   fChain->SetBranchAddress("xB0",xB0);
   fChain->SetBranchAddress("yB0",yB0);
   fChain->SetBranchAddress("zB0",zB0);
   fChain->SetBranchAddress("s2xB0",s2xB0);
   fChain->SetBranchAddress("s2yB0",s2yB0);
   fChain->SetBranchAddress("s2zB0",s2zB0);
   fChain->SetBranchAddress("chi2B0",chi2B0);
   fChain->SetBranchAddress("dofB0",dofB0);
   fChain->SetBranchAddress("stB0",stB0);
   fChain->SetBranchAddress("ndauB0",ndauB0);
   if(isMC)   fChain->SetBranchAddress("MCB0",MCB0);
   fChain->SetBranchAddress("mseB0",mseB0);
   fChain->SetBranchAddress("mHatB0",mHatB0);
   fChain->SetBranchAddress("deltaeB0",deltaeB0);
   fChain->SetBranchAddress("ThruB0",ThruB0);
   fChain->SetBranchAddress("thThruB0",thThruB0);
   fChain->SetBranchAddress("phiThruB0",phiThruB0);
   fChain->SetBranchAddress("cosTBB0",cosTBB0);
   fChain->SetBranchAddress("d1B0Index",d1B0Index);
   fChain->SetBranchAddress("d1B0Lund",d1B0Lund);
   fChain->SetBranchAddress("d2B0Index",d2B0Index);
   fChain->SetBranchAddress("d2B0Lund",d2B0Lund);
   fChain->SetBranchAddress("d3B0Index",d3B0Index);
   fChain->SetBranchAddress("d3B0Lund",d3B0Lund);
   fChain->SetBranchAddress("d4B0Index",d4B0Index);
   fChain->SetBranchAddress("d4B0Lund",d4B0Lund);
   fChain->SetBranchAddress("d5B0Index",d5B0Index);
   fChain->SetBranchAddress("d5B0Lund",d5B0Lund);
   fChain->SetBranchAddress("d6B0Index",d6B0Index);
   fChain->SetBranchAddress("d6B0Lund",d6B0Lund);
   fChain->SetBranchAddress("d7B0Index",d7B0Index);
   fChain->SetBranchAddress("d7B0Lund",d7B0Lund);
   fChain->SetBranchAddress("modeB0",modeB0);
   fChain->SetBranchAddress("purB0",purB0);
   fChain->SetBranchAddress("intpurB0",intpurB0);
   fChain->SetBranchAddress("VtxXLepB0",VtxXLepB0);
   fChain->SetBranchAddress("VtxYLepB0",VtxYLepB0);
   fChain->SetBranchAddress("VtxZLepB0",VtxZLepB0);
   fChain->SetBranchAddress("VtxCovXXLepB0",VtxCovXXLepB0);
   fChain->SetBranchAddress("VtxCovYYLepB0",VtxCovYYLepB0);
   fChain->SetBranchAddress("VtxCovXYLepB0",VtxCovXYLepB0);
   fChain->SetBranchAddress("VtxCovZZLepB0",VtxCovZZLepB0);
   fChain->SetBranchAddress("VtxCovXZLepB0",VtxCovXZLepB0);
   fChain->SetBranchAddress("VtxCovYZLepB0",VtxCovYZLepB0);
   fChain->SetBranchAddress("VtxChiSqLepB0",VtxChiSqLepB0);
   fChain->SetBranchAddress("VtxNDofLepB0",VtxNDofLepB0);
   fChain->SetBranchAddress("VtxStatLepB0",VtxStatLepB0);
   fChain->SetBranchAddress("VtxNUsedLepB0",VtxNUsedLepB0);
   fChain->SetBranchAddress("DocaLepB0",DocaLepB0);
   fChain->SetBranchAddress("DocaErrLepB0",DocaErrLepB0);
   fChain->SetBranchAddress("VtxXXB0",VtxXXB0);
   fChain->SetBranchAddress("VtxYXB0",VtxYXB0);
   fChain->SetBranchAddress("VtxZXB0",VtxZXB0);
   fChain->SetBranchAddress("VtxCovXXXB0",VtxCovXXXB0);
   fChain->SetBranchAddress("VtxCovYYXB0",VtxCovYYXB0);
   fChain->SetBranchAddress("VtxCovXYXB0",VtxCovXYXB0);
   fChain->SetBranchAddress("VtxCovZZXB0",VtxCovZZXB0);
   fChain->SetBranchAddress("VtxCovXZXB0",VtxCovXZXB0);
   fChain->SetBranchAddress("VtxCovYZXB0",VtxCovYZXB0);
   fChain->SetBranchAddress("VtxChiSqXB0",VtxChiSqXB0);
   fChain->SetBranchAddress("VtxNDofXB0",VtxNDofXB0);
   fChain->SetBranchAddress("VtxStatXB0",VtxStatXB0);
   fChain->SetBranchAddress("VtxNUsedXB0",VtxNUsedXB0);
   fChain->SetBranchAddress("VtxPXB0",VtxPXB0);
   fChain->SetBranchAddress("VtxPhiXB0",VtxPhiXB0);
   fChain->SetBranchAddress("VtxThetaXB0",VtxThetaXB0);
   fChain->SetBranchAddress("ThrustXB0",ThrustXB0);
   fChain->SetBranchAddress("ThrustXPhiB0",ThrustXPhiB0);
   fChain->SetBranchAddress("ThrustXThetaB0",ThrustXThetaB0);
   fChain->SetBranchAddress("MassPB0",MassPB0);
   fChain->SetBranchAddress("MassPhiB0",MassPhiB0);
   fChain->SetBranchAddress("MassThetaB0",MassThetaB0);
   fChain->SetBranchAddress("Cov00B0",Cov00B0);
   fChain->SetBranchAddress("Cov10B0",Cov10B0);
   fChain->SetBranchAddress("Cov11B0",Cov11B0);
   fChain->SetBranchAddress("Cov20B0",Cov20B0);
   fChain->SetBranchAddress("Cov21B0",Cov21B0);
   fChain->SetBranchAddress("Cov22B0",Cov22B0);
   fChain->SetBranchAddress("Cov30B0",Cov30B0);
   fChain->SetBranchAddress("Cov31B0",Cov31B0);
   fChain->SetBranchAddress("Cov32B0",Cov32B0);
   fChain->SetBranchAddress("Cov33B0",Cov33B0);
   fChain->SetBranchAddress("nChB",&nChB);
   fChain->SetBranchAddress("massChB",massChB);
   fChain->SetBranchAddress("pChB",pChB);
   fChain->SetBranchAddress("thChB",thChB);
   fChain->SetBranchAddress("phiChB",phiChB);
   fChain->SetBranchAddress("errMassChB",errMassChB);
   fChain->SetBranchAddress("m0ChB",m0ChB);
   fChain->SetBranchAddress("xChB",xChB);
   fChain->SetBranchAddress("yChB",yChB);
   fChain->SetBranchAddress("zChB",zChB);
   fChain->SetBranchAddress("s2xChB",s2xChB);
   fChain->SetBranchAddress("s2yChB",s2yChB);
   fChain->SetBranchAddress("s2zChB",s2zChB);
   fChain->SetBranchAddress("chi2ChB",chi2ChB);
   fChain->SetBranchAddress("dofChB",dofChB);
   fChain->SetBranchAddress("stChB",stChB);
   fChain->SetBranchAddress("ndauChB",ndauChB);
   if(isMC)   fChain->SetBranchAddress("MCChB",MCChB);
   fChain->SetBranchAddress("mseChB",mseChB);
   fChain->SetBranchAddress("mHatChB",mHatChB);
   fChain->SetBranchAddress("deltaeChB",deltaeChB);
   fChain->SetBranchAddress("ThruChB",ThruChB);
   fChain->SetBranchAddress("thThruChB",thThruChB);
   fChain->SetBranchAddress("phiThruChB",phiThruChB);
   fChain->SetBranchAddress("cosTBChB",cosTBChB);
   fChain->SetBranchAddress("d1ChBIndex",d1ChBIndex);
   fChain->SetBranchAddress("d1ChBLund",d1ChBLund);
   fChain->SetBranchAddress("d2ChBIndex",d2ChBIndex);
   fChain->SetBranchAddress("d2ChBLund",d2ChBLund);
   fChain->SetBranchAddress("d3ChBIndex",d3ChBIndex);
   fChain->SetBranchAddress("d3ChBLund",d3ChBLund);
   fChain->SetBranchAddress("d4ChBIndex",d4ChBIndex);
   fChain->SetBranchAddress("d4ChBLund",d4ChBLund);
   fChain->SetBranchAddress("d5ChBIndex",d5ChBIndex);
   fChain->SetBranchAddress("d5ChBLund",d5ChBLund);
   fChain->SetBranchAddress("d6ChBIndex",d6ChBIndex);
   fChain->SetBranchAddress("d6ChBLund",d6ChBLund);
   fChain->SetBranchAddress("d7ChBIndex",d7ChBIndex);
   fChain->SetBranchAddress("d7ChBLund",d7ChBLund);
   fChain->SetBranchAddress("modeChB",modeChB);
   fChain->SetBranchAddress("purChB",purChB);
   fChain->SetBranchAddress("intpurChB",intpurChB);
   fChain->SetBranchAddress("VtxXLepChB",VtxXLepChB);
   fChain->SetBranchAddress("VtxYLepChB",VtxYLepChB);
   fChain->SetBranchAddress("VtxZLepChB",VtxZLepChB);
   fChain->SetBranchAddress("VtxCovXXLepChB",VtxCovXXLepChB);
   fChain->SetBranchAddress("VtxCovYYLepChB",VtxCovYYLepChB);
   fChain->SetBranchAddress("VtxCovXYLepChB",VtxCovXYLepChB);
   fChain->SetBranchAddress("VtxCovZZLepChB",VtxCovZZLepChB);
   fChain->SetBranchAddress("VtxCovXZLepChB",VtxCovXZLepChB);
   fChain->SetBranchAddress("VtxCovYZLepChB",VtxCovYZLepChB);
   fChain->SetBranchAddress("VtxChiSqLepChB",VtxChiSqLepChB);
   fChain->SetBranchAddress("VtxNDofLepChB",VtxNDofLepChB);
   fChain->SetBranchAddress("VtxStatLepChB",VtxStatLepChB);
   fChain->SetBranchAddress("VtxNUsedLepChB",VtxNUsedLepChB);
   fChain->SetBranchAddress("DocaLepChB",DocaLepChB);
   fChain->SetBranchAddress("DocaErrLepChB",DocaErrLepChB);
   fChain->SetBranchAddress("VtxXXChB",VtxXXChB);
   fChain->SetBranchAddress("VtxYXChB",VtxYXChB);
   fChain->SetBranchAddress("VtxZXChB",VtxZXChB);
   fChain->SetBranchAddress("VtxCovXXXChB",VtxCovXXXChB);
   fChain->SetBranchAddress("VtxCovYYXChB",VtxCovYYXChB);
   fChain->SetBranchAddress("VtxCovXYXChB",VtxCovXYXChB);
   fChain->SetBranchAddress("VtxCovZZXChB",VtxCovZZXChB);
   fChain->SetBranchAddress("VtxCovXZXChB",VtxCovXZXChB);
   fChain->SetBranchAddress("VtxCovYZXChB",VtxCovYZXChB);
   fChain->SetBranchAddress("VtxChiSqXChB",VtxChiSqXChB);
   fChain->SetBranchAddress("VtxNDofXChB",VtxNDofXChB);
   fChain->SetBranchAddress("VtxStatXChB",VtxStatXChB);
   fChain->SetBranchAddress("VtxNUsedXChB",VtxNUsedXChB);
   fChain->SetBranchAddress("VtxPXChB",VtxPXChB);
   fChain->SetBranchAddress("VtxPhiXChB",VtxPhiXChB);
   fChain->SetBranchAddress("VtxThetaXChB",VtxThetaXChB);
   fChain->SetBranchAddress("ThrustXChB",ThrustXChB);
   fChain->SetBranchAddress("ThrustXPhiChB",ThrustXPhiChB);
   fChain->SetBranchAddress("ThrustXThetaChB",ThrustXThetaChB);
   fChain->SetBranchAddress("MassPChB",MassPChB);
   fChain->SetBranchAddress("MassPhiChB",MassPhiChB);
   fChain->SetBranchAddress("MassThetaChB",MassThetaChB);
   fChain->SetBranchAddress("Cov00ChB",Cov00ChB);
   fChain->SetBranchAddress("Cov10ChB",Cov10ChB);
   fChain->SetBranchAddress("Cov11ChB",Cov11ChB);
   fChain->SetBranchAddress("Cov20ChB",Cov20ChB);
   fChain->SetBranchAddress("Cov21ChB",Cov21ChB);
   fChain->SetBranchAddress("Cov22ChB",Cov22ChB);
   fChain->SetBranchAddress("Cov30ChB",Cov30ChB);
   fChain->SetBranchAddress("Cov31ChB",Cov31ChB);
   fChain->SetBranchAddress("Cov32ChB",Cov32ChB);
   fChain->SetBranchAddress("Cov33ChB",Cov33ChB);
   fChain->SetBranchAddress("nDstar",&nDstar);
   fChain->SetBranchAddress("massDstar",massDstar);
   fChain->SetBranchAddress("pDstar",pDstar);
   fChain->SetBranchAddress("thDstar",thDstar);
   fChain->SetBranchAddress("phiDstar",phiDstar);
   fChain->SetBranchAddress("errMassDstar",errMassDstar);
   fChain->SetBranchAddress("m0Dstar",m0Dstar);
   fChain->SetBranchAddress("xDstar",xDstar);
   fChain->SetBranchAddress("yDstar",yDstar);
   fChain->SetBranchAddress("zDstar",zDstar);
   fChain->SetBranchAddress("s2xDstar",s2xDstar);
   fChain->SetBranchAddress("s2yDstar",s2yDstar);
   fChain->SetBranchAddress("s2zDstar",s2zDstar);
   fChain->SetBranchAddress("chi2Dstar",chi2Dstar);
   fChain->SetBranchAddress("dofDstar",dofDstar);
   fChain->SetBranchAddress("stDstar",stDstar);
   fChain->SetBranchAddress("ndauDstar",ndauDstar);
   if(isMC)   fChain->SetBranchAddress("MCDstar",MCDstar);
   fChain->SetBranchAddress("d1DstarIndex",d1DstarIndex);
   fChain->SetBranchAddress("d1DstarLund",d1DstarLund);
   fChain->SetBranchAddress("d2DstarIndex",d2DstarIndex);
   fChain->SetBranchAddress("d2DstarLund",d2DstarLund);
   fChain->SetBranchAddress("nDstarBS",&nDstarBS);
   fChain->SetBranchAddress("massDstarBS",massDstarBS);
   fChain->SetBranchAddress("chi2DstarBS",chi2DstarBS);
   fChain->SetBranchAddress("dofDstarBS",dofDstarBS);
   fChain->SetBranchAddress("nDstar0",&nDstar0);
   fChain->SetBranchAddress("massDstar0",massDstar0);
   fChain->SetBranchAddress("pDstar0",pDstar0);
   fChain->SetBranchAddress("thDstar0",thDstar0);
   fChain->SetBranchAddress("phiDstar0",phiDstar0);
   fChain->SetBranchAddress("errMassDstar0",errMassDstar0);
   fChain->SetBranchAddress("m0Dstar0",m0Dstar0);
   fChain->SetBranchAddress("xDstar0",xDstar0);
   fChain->SetBranchAddress("yDstar0",yDstar0);
   fChain->SetBranchAddress("zDstar0",zDstar0);
   fChain->SetBranchAddress("s2xDstar0",s2xDstar0);
   fChain->SetBranchAddress("s2yDstar0",s2yDstar0);
   fChain->SetBranchAddress("s2zDstar0",s2zDstar0);
   fChain->SetBranchAddress("chi2Dstar0",chi2Dstar0);
   fChain->SetBranchAddress("dofDstar0",dofDstar0);
   fChain->SetBranchAddress("stDstar0",stDstar0);
   fChain->SetBranchAddress("ndauDstar0",ndauDstar0);
   if(isMC)   fChain->SetBranchAddress("MCDstar0",MCDstar0);
   fChain->SetBranchAddress("d1Dstar0Index",d1Dstar0Index);
   fChain->SetBranchAddress("d1Dstar0Lund",d1Dstar0Lund);
   fChain->SetBranchAddress("d2Dstar0Index",d2Dstar0Index);
   fChain->SetBranchAddress("d2Dstar0Lund",d2Dstar0Lund);
   fChain->SetBranchAddress("nD0",&nD0);
   fChain->SetBranchAddress("massD0",massD0);
   fChain->SetBranchAddress("pD0",pD0);
   fChain->SetBranchAddress("thD0",thD0);
   fChain->SetBranchAddress("phiD0",phiD0);
   fChain->SetBranchAddress("errMassD0",errMassD0);
   fChain->SetBranchAddress("m0D0",m0D0);
   fChain->SetBranchAddress("xD0",xD0);
   fChain->SetBranchAddress("yD0",yD0);
   fChain->SetBranchAddress("zD0",zD0);
   fChain->SetBranchAddress("s2xD0",s2xD0);
   fChain->SetBranchAddress("s2yD0",s2yD0);
   fChain->SetBranchAddress("s2zD0",s2zD0);
   fChain->SetBranchAddress("chi2D0",chi2D0);
   fChain->SetBranchAddress("dofD0",dofD0);
   fChain->SetBranchAddress("stD0",stD0);
   fChain->SetBranchAddress("ndauD0",ndauD0);
   if(isMC)   fChain->SetBranchAddress("MCD0",MCD0);
   fChain->SetBranchAddress("d1D0Index",d1D0Index);
   fChain->SetBranchAddress("d1D0Lund",d1D0Lund);
   fChain->SetBranchAddress("d2D0Index",d2D0Index);
   fChain->SetBranchAddress("d2D0Lund",d2D0Lund);
   fChain->SetBranchAddress("d3D0Index",d3D0Index);
   fChain->SetBranchAddress("d3D0Lund",d3D0Lund);
   fChain->SetBranchAddress("d4D0Index",d4D0Index);
   fChain->SetBranchAddress("d4D0Lund",d4D0Lund);
   fChain->SetBranchAddress("nChD",&nChD);
   fChain->SetBranchAddress("massChD",massChD);
   fChain->SetBranchAddress("pChD",pChD);
   fChain->SetBranchAddress("thChD",thChD);
   fChain->SetBranchAddress("phiChD",phiChD);
   fChain->SetBranchAddress("errMassChD",errMassChD);
   fChain->SetBranchAddress("m0ChD",m0ChD);
   fChain->SetBranchAddress("xChD",xChD);
   fChain->SetBranchAddress("yChD",yChD);
   fChain->SetBranchAddress("zChD",zChD);
   fChain->SetBranchAddress("s2xChD",s2xChD);
   fChain->SetBranchAddress("s2yChD",s2yChD);
   fChain->SetBranchAddress("s2zChD",s2zChD);
   fChain->SetBranchAddress("chi2ChD",chi2ChD);
   fChain->SetBranchAddress("dofChD",dofChD);
   fChain->SetBranchAddress("stChD",stChD);
   fChain->SetBranchAddress("ndauChD",ndauChD);
   if(isMC)   fChain->SetBranchAddress("MCChD",MCChD);
   fChain->SetBranchAddress("d1ChDIndex",d1ChDIndex);
   fChain->SetBranchAddress("d1ChDLund",d1ChDLund);
   fChain->SetBranchAddress("d2ChDIndex",d2ChDIndex);
   fChain->SetBranchAddress("d2ChDLund",d2ChDLund);
   fChain->SetBranchAddress("d3ChDIndex",d3ChDIndex);
   fChain->SetBranchAddress("d3ChDLund",d3ChDLund);
   fChain->SetBranchAddress("d4ChDIndex",d4ChDIndex);
   fChain->SetBranchAddress("d4ChDLund",d4ChDLund);
   fChain->SetBranchAddress("nKs",&nKs);
   fChain->SetBranchAddress("massKs",massKs);
   fChain->SetBranchAddress("pKs",pKs);
   fChain->SetBranchAddress("thKs",thKs);
   fChain->SetBranchAddress("phiKs",phiKs);
   fChain->SetBranchAddress("errMassKs",errMassKs);
   fChain->SetBranchAddress("m0Ks",m0Ks);
   fChain->SetBranchAddress("xKs",xKs);
   fChain->SetBranchAddress("yKs",yKs);
   fChain->SetBranchAddress("zKs",zKs);
   fChain->SetBranchAddress("s2xKs",s2xKs);
   fChain->SetBranchAddress("s2yKs",s2yKs);
   fChain->SetBranchAddress("s2zKs",s2zKs);
   fChain->SetBranchAddress("chi2Ks",chi2Ks);
   fChain->SetBranchAddress("dofKs",dofKs);
   fChain->SetBranchAddress("stKs",stKs);
   fChain->SetBranchAddress("ndauKs",ndauKs);
   if(isMC)   fChain->SetBranchAddress("MCKs",MCKs);
   fChain->SetBranchAddress("d1KsIndex",d1KsIndex);
   fChain->SetBranchAddress("d1KsLund",d1KsLund);
   fChain->SetBranchAddress("d2KsIndex",d2KsIndex);
   fChain->SetBranchAddress("d2KsLund",d2KsLund);
   fChain->SetBranchAddress("nPi0",&nPi0);
   fChain->SetBranchAddress("massPi0",massPi0);
   fChain->SetBranchAddress("pPi0",pPi0);
   fChain->SetBranchAddress("thPi0",thPi0);
   fChain->SetBranchAddress("phiPi0",phiPi0);
   fChain->SetBranchAddress("errMassPi0",errMassPi0);
   fChain->SetBranchAddress("m0Pi0",m0Pi0);
   fChain->SetBranchAddress("xPi0",xPi0);
   fChain->SetBranchAddress("yPi0",yPi0);
   fChain->SetBranchAddress("zPi0",zPi0);
   fChain->SetBranchAddress("s2xPi0",s2xPi0);
   fChain->SetBranchAddress("s2yPi0",s2yPi0);
   fChain->SetBranchAddress("s2zPi0",s2zPi0);
   fChain->SetBranchAddress("chi2Pi0",chi2Pi0);
   fChain->SetBranchAddress("dofPi0",dofPi0);
   fChain->SetBranchAddress("stPi0",stPi0);
   fChain->SetBranchAddress("ndauPi0",ndauPi0);
   if(isMC)   fChain->SetBranchAddress("MCPi0",MCPi0);
   fChain->SetBranchAddress("d1Pi0Index",d1Pi0Index);
   fChain->SetBranchAddress("d1Pi0Lund",d1Pi0Lund);
   fChain->SetBranchAddress("d2Pi0Index",d2Pi0Index);
   fChain->SetBranchAddress("d2Pi0Lund",d2Pi0Lund);
   fChain->SetBranchAddress("nGConv",&nGConv);
   fChain->SetBranchAddress("massGConv",massGConv);
   fChain->SetBranchAddress("pGConv",pGConv);
   fChain->SetBranchAddress("thGConv",thGConv);
   fChain->SetBranchAddress("phiGConv",phiGConv);
   fChain->SetBranchAddress("errMassGConv",errMassGConv);
   fChain->SetBranchAddress("m0GConv",m0GConv);
   fChain->SetBranchAddress("xGConv",xGConv);
   fChain->SetBranchAddress("yGConv",yGConv);
   fChain->SetBranchAddress("zGConv",zGConv);
   fChain->SetBranchAddress("s2xGConv",s2xGConv);
   fChain->SetBranchAddress("s2yGConv",s2yGConv);
   fChain->SetBranchAddress("s2zGConv",s2zGConv);
   fChain->SetBranchAddress("chi2GConv",chi2GConv);
   fChain->SetBranchAddress("dofGConv",dofGConv);
   fChain->SetBranchAddress("stGConv",stGConv);
   fChain->SetBranchAddress("ndauGConv",ndauGConv);
   if(isMC)   fChain->SetBranchAddress("MCGConv",MCGConv);
   fChain->SetBranchAddress("d1GConvIndex",d1GConvIndex);
   fChain->SetBranchAddress("d1GConvLund",d1GConvLund);
   fChain->SetBranchAddress("d2GConvIndex",d2GConvIndex);
   fChain->SetBranchAddress("d2GConvLund",d2GConvLund);
   if (fNewFormat) {
     fChain->SetBranchAddress("nDalitz",&nDalitz);
     fChain->SetBranchAddress("massDalitz",massDalitz);
     fChain->SetBranchAddress("pDalitz",pDalitz);
     fChain->SetBranchAddress("thDalitz",thDalitz);
     fChain->SetBranchAddress("phiDalitz",phiDalitz);
     fChain->SetBranchAddress("errMassDalitz",errMassDalitz);
     fChain->SetBranchAddress("m0Dalitz",m0Dalitz);
     fChain->SetBranchAddress("xDalitz",xDalitz);
     fChain->SetBranchAddress("yDalitz",yDalitz);
     fChain->SetBranchAddress("zDalitz",zDalitz);
     fChain->SetBranchAddress("s2xDalitz",s2xDalitz);
     fChain->SetBranchAddress("s2yDalitz",s2yDalitz);
     fChain->SetBranchAddress("s2zDalitz",s2zDalitz);
     fChain->SetBranchAddress("chi2Dalitz",chi2Dalitz);
     fChain->SetBranchAddress("dofDalitz",dofDalitz);
     fChain->SetBranchAddress("stDalitz",stDalitz);
     fChain->SetBranchAddress("ndauDalitz",ndauDalitz);
     if(isMC)   fChain->SetBranchAddress("MCDalitz",MCDalitz);
     fChain->SetBranchAddress("d1DalitzIndex",d1DalitzIndex);
     fChain->SetBranchAddress("d1DalitzLund",d1DalitzLund);
     fChain->SetBranchAddress("d2DalitzIndex",d2DalitzIndex);
     fChain->SetBranchAddress("d2DalitzLund",d2DalitzLund);
     fChain->SetBranchAddress("nJpsi",&nJpsi);
     fChain->SetBranchAddress("massJpsi",massJpsi);
     fChain->SetBranchAddress("pJpsi",pJpsi);
     fChain->SetBranchAddress("thJpsi",thJpsi);
     fChain->SetBranchAddress("phiJpsi",phiJpsi);
     fChain->SetBranchAddress("errMassJpsi",errMassJpsi);
     fChain->SetBranchAddress("m0Jpsi",m0Jpsi);
     fChain->SetBranchAddress("xJpsi",xJpsi);
     fChain->SetBranchAddress("yJpsi",yJpsi);
     fChain->SetBranchAddress("zJpsi",zJpsi);
     fChain->SetBranchAddress("s2xJpsi",s2xJpsi);
     fChain->SetBranchAddress("s2yJpsi",s2yJpsi);
     fChain->SetBranchAddress("s2zJpsi",s2zJpsi);
     fChain->SetBranchAddress("chi2Jpsi",chi2Jpsi);
     fChain->SetBranchAddress("dofJpsi",dofJpsi);
     fChain->SetBranchAddress("stJpsi",stJpsi);
     fChain->SetBranchAddress("ndauJpsi",ndauJpsi);
     if(isMC)   fChain->SetBranchAddress("MCJpsi",MCJpsi);
     fChain->SetBranchAddress("d1JpsiIndex",d1JpsiIndex);
     fChain->SetBranchAddress("d1JpsiLund",d1JpsiLund);
     fChain->SetBranchAddress("d2JpsiIndex",d2JpsiIndex);
     fChain->SetBranchAddress("d2JpsiLund",d2JpsiLund);
   }   
   fChain->SetBranchAddress("nTrk",&nTrk);
   fChain->SetBranchAddress("IfrLayTrk",IfrLayTrk);
   fChain->SetBranchAddress("IfrNsTrk",IfrNsTrk);
   fChain->SetBranchAddress("IfrInnerTrk",IfrInnerTrk);
   fChain->SetBranchAddress("IfrBarrelTrk",IfrBarrelTrk);
   fChain->SetBranchAddress("IfrFWDTrk",IfrFWDTrk);
   fChain->SetBranchAddress("IfrBWDTrk",IfrBWDTrk);
   fChain->SetBranchAddress("IfrMeasIntLenTrk",IfrMeasIntLenTrk);
   fChain->SetBranchAddress("IfrFirstHitTrk",IfrFirstHitTrk);
   fChain->SetBranchAddress("IfrLastHitTrk",IfrLastHitTrk);
   fChain->SetBranchAddress("lMomTrk",lMomTrk);
   fChain->SetBranchAddress("ZMom42Trk",ZMom42Trk);
   fChain->SetBranchAddress("ecalTrk",ecalTrk);
   fChain->SetBranchAddress("ecalXTrk",ecalXTrk);
   fChain->SetBranchAddress("ecalYTrk",ecalYTrk);
   fChain->SetBranchAddress("ecalZTrk",ecalZTrk);
   fChain->SetBranchAddress("nCryTrk",nCryTrk);
   fChain->SetBranchAddress("nBumpTrk",nBumpTrk);
   fChain->SetBranchAddress("ZMom20Trk",ZMom20Trk);
   fChain->SetBranchAddress("secMomTrk",secMomTrk);
   fChain->SetBranchAddress("s1s9Trk",s1s9Trk);
   fChain->SetBranchAddress("s9s25Trk",s9s25Trk);
   fChain->SetBranchAddress("erawTrk",erawTrk);
   fChain->SetBranchAddress("phiClusterTrk",phiClusterTrk);
   fChain->SetBranchAddress("thetaClusterTrk",thetaClusterTrk);
   fChain->SetBranchAddress("covEETrk",covEETrk);
   fChain->SetBranchAddress("covTTTrk",covTTTrk);
   fChain->SetBranchAddress("covPPTrk",covPPTrk);
   fChain->SetBranchAddress("covRRTrk",covRRTrk);
   fChain->SetBranchAddress("phicMatTrk",phicMatTrk);
   fChain->SetBranchAddress("trkcMatTrk",trkcMatTrk);
   fChain->SetBranchAddress("nPidTrk",nPidTrk);
   fChain->SetBranchAddress("emcStatusTrk",emcStatusTrk);
   fChain->SetBranchAddress("phiAtEMCTrk",phiAtEMCTrk);
   fChain->SetBranchAddress("thetaAtEMCTrk",thetaAtEMCTrk);
   fChain->SetBranchAddress("isvtTrk",isvtTrk);
   fChain->SetBranchAddress("nsvtTrk",nsvtTrk);
   if (fNewFormat) {
     fChain->SetBranchAddress("fhitTrk",fhitTrk);
     fChain->SetBranchAddress("ndchTrk",ndchTrk);
     fChain->SetBranchAddress("lhitTrk",lhitTrk);
     fChain->SetBranchAddress("tLenTrk",tLenTrk);
     fChain->SetBranchAddress("ntdofTrk",ntdofTrk);
     fChain->SetBranchAddress("tproTrk",tproTrk);
     fChain->SetBranchAddress("tChi2Trk",tChi2Trk);
     fChain->SetBranchAddress("cPidTrk",cPidTrk);
     fChain->SetBranchAddress("sfRangeTrk",sfRangeTrk);
     fChain->SetBranchAddress("trkFitStatusTrk",trkFitStatusTrk);
   }
   fChain->SetBranchAddress("chargeTrk",chargeTrk);
   fChain->SetBranchAddress("momentumTrk",momentumTrk);
   fChain->SetBranchAddress("ppcov00",ppcov00);
   fChain->SetBranchAddress("ppcov10",ppcov10);
   fChain->SetBranchAddress("ppcov11",ppcov11);
   fChain->SetBranchAddress("ppcov20",ppcov20);
   fChain->SetBranchAddress("ppcov21",ppcov21);
   fChain->SetBranchAddress("ppcov22",ppcov22);
   fChain->SetBranchAddress("xPocaTrk",xPocaTrk);
   fChain->SetBranchAddress("yPocaTrk",yPocaTrk);
   fChain->SetBranchAddress("zPocaTrk",zPocaTrk);
   fChain->SetBranchAddress("thetaTrk",thetaTrk);
   fChain->SetBranchAddress("phiTrk",phiTrk);
   fChain->SetBranchAddress("muonIdTrk",muonIdTrk);
   fChain->SetBranchAddress("elecIdTrk",elecIdTrk);
   fChain->SetBranchAddress("kaonIdTrk",kaonIdTrk);
   fChain->SetBranchAddress("pionIdTrk",pionIdTrk);
   if (isMC) {
     fChain->SetBranchAddress("idTrk",idTrk);
     fChain->SetBranchAddress("IndexTrk",IndexTrk);
     fChain->SetBranchAddress("IndexNtTrk",IndexNtTrk);
   }
   fChain->SetBranchAddress("B0RecTrk",B0RecTrk);
   fChain->SetBranchAddress("chBRecTrk",chBRecTrk);
   fChain->SetBranchAddress("nGam",&nGam);
   fChain->SetBranchAddress("IfrLayGam",IfrLayGam);
   fChain->SetBranchAddress("IfrNsGam",IfrNsGam);
   fChain->SetBranchAddress("IfrInnerGam",IfrInnerGam);
   fChain->SetBranchAddress("IfrBarrelGam",IfrBarrelGam);
   fChain->SetBranchAddress("IfrFWDGam",IfrFWDGam);
   fChain->SetBranchAddress("IfrBWDGam",IfrBWDGam);
   fChain->SetBranchAddress("IfrMeasIntLenGam",IfrMeasIntLenGam);
   fChain->SetBranchAddress("IfrFirstHitGam",IfrFirstHitGam);
   fChain->SetBranchAddress("IfrLastHitGam",IfrLastHitGam);
   fChain->SetBranchAddress("IfrExpIntLenGam",IfrExpIntLenGam);
   fChain->SetBranchAddress("IfrIntLenBeforeIronGam",IfrIntLenBeforeIronGam);
   fChain->SetBranchAddress("IfrTrkMatchGam",IfrTrkMatchGam);
   fChain->SetBranchAddress("IfrEmcMatchGam",IfrEmcMatchGam);
   fChain->SetBranchAddress("IfrLastBarrelGam",IfrLastBarrelGam);
   fChain->SetBranchAddress("IfrCLFitChi2Gam",IfrCLFitChi2Gam);
   fChain->SetBranchAddress("IfrStrips0",IfrStrips0);
   fChain->SetBranchAddress("IfrStrips1",IfrStrips1);
   fChain->SetBranchAddress("IfrStrips2",IfrStrips2);
   fChain->SetBranchAddress("IfrStrips3",IfrStrips3);
   fChain->SetBranchAddress("IfrStrips4",IfrStrips4);
   fChain->SetBranchAddress("IfrStrips5",IfrStrips5);
   fChain->SetBranchAddress("IfrStrips6",IfrStrips6);
   fChain->SetBranchAddress("IfrStrips7",IfrStrips7);
   fChain->SetBranchAddress("IfrStrips8",IfrStrips8);
   fChain->SetBranchAddress("IfrStrips9",IfrStrips9);
   fChain->SetBranchAddress("IfrStrips10",IfrStrips10);
   fChain->SetBranchAddress("IfrStrips11",IfrStrips11);
   fChain->SetBranchAddress("IfrStrips12",IfrStrips12);
   fChain->SetBranchAddress("IfrStrips13",IfrStrips13);
   fChain->SetBranchAddress("IfrStrips14",IfrStrips14);
   fChain->SetBranchAddress("IfrStrips15",IfrStrips15);
   fChain->SetBranchAddress("IfrStrips16",IfrStrips16);
   fChain->SetBranchAddress("IfrStrips17",IfrStrips17);
   fChain->SetBranchAddress("IfrStrips18",IfrStrips18);
   fChain->SetBranchAddress("IfrStrips19",IfrStrips19);
   fChain->SetBranchAddress("lMomGam",lMomGam);
   fChain->SetBranchAddress("ZMom42Gam",ZMom42Gam);
   fChain->SetBranchAddress("ecalGam",ecalGam);
   fChain->SetBranchAddress("ecalXGam",ecalXGam);
   fChain->SetBranchAddress("ecalYGam",ecalYGam);
   fChain->SetBranchAddress("ecalZGam",ecalZGam);
   fChain->SetBranchAddress("nCryGam",nCryGam);
   fChain->SetBranchAddress("nBumpGam",nBumpGam);
   fChain->SetBranchAddress("ZMom20Gam",ZMom20Gam);
   fChain->SetBranchAddress("secMomGam",secMomGam);
   fChain->SetBranchAddress("s1s9Gam",s1s9Gam);
   fChain->SetBranchAddress("s9s25Gam",s9s25Gam);
   fChain->SetBranchAddress("erawGam",erawGam);
   fChain->SetBranchAddress("phiClusterGam",phiClusterGam);
   fChain->SetBranchAddress("thetaClusterGam",thetaClusterGam);
   fChain->SetBranchAddress("covEEGam",covEEGam);
   fChain->SetBranchAddress("covTTGam",covTTGam);
   fChain->SetBranchAddress("covPPGam",covPPGam);
   fChain->SetBranchAddress("covRRGam",covRRGam);
   fChain->SetBranchAddress("emcStatusGam",emcStatusGam);
   fChain->SetBranchAddress("thetaGam",thetaGam);
   fChain->SetBranchAddress("phiGam",phiGam);
   fChain->SetBranchAddress("energyGam",energyGam);
   if(isMC){
     fChain->SetBranchAddress("idGam",idGam);
     fChain->SetBranchAddress("IndexGam",IndexGam);
     fChain->SetBranchAddress("IndexNtGam",IndexNtGam);
   }
   fChain->SetBranchAddress("B0RecGam",B0RecGam);
   fChain->SetBranchAddress("chBRecGam",chBRecGam);

   Notify();
}
// ----------------------------------------------------------------------
Bool_t baseClass::Notify() {
//   called when loading a new file
//   get branch pointers
   b_event = fChain->GetBranch("event");
   b_runNumber = fChain->GetBranch("runNumber");
   b_platform = fChain->GetBranch("platform");
   b_partition = fChain->GetBranch("partition");
   b_upperID = fChain->GetBranch("upperID");
   b_lowerID = fChain->GetBranch("lowerID");
//Just for Killing
   // b_upper = fChain->GetBranch("upper");
   // b_lower = fChain->GetBranch("lower");
   //b_run   = fChain->GetBranch("run");
   //b_pur   = fChain->GetBranch("pur");
   //b_mode  = fChain->GetBranch("mode");
//Just for Killing
   b_primVtxX = fChain->GetBranch("primVtxX");
   b_primVtxY = fChain->GetBranch("primVtxY");
   b_primVtxZ = fChain->GetBranch("primVtxZ");
   b_beamSX = fChain->GetBranch("beamSX");
   b_beamSY = fChain->GetBranch("beamSY");
   b_beamSZ = fChain->GetBranch("beamSZ");
   b_beamSCovXX = fChain->GetBranch("beamSCovXX");
   b_beamSCovYY = fChain->GetBranch("beamSCovYY");
   b_beamSCovZZ = fChain->GetBranch("beamSCovZZ");
   b_beamSCovXZ = fChain->GetBranch("beamSCovXZ");
   b_pxUps = fChain->GetBranch("pxUps");
   b_pyUps = fChain->GetBranch("pyUps");
   b_pzUps = fChain->GetBranch("pzUps");
   b_eUps = fChain->GetBranch("eUps");
   b_nTrkTot = fChain->GetBranch("nTrkTot");
   b_W2 = fChain->GetBranch("W2");
   b_FoxWol2 = fChain->GetBranch("FoxWol2");
   b_FoxWol2Neu = fChain->GetBranch("FoxWol2Neu");
   b_thrust = fChain->GetBranch("thrust");
   b_thrustNeu = fChain->GetBranch("thrustNeu");
   b_nMc = fChain->GetBranch("nMc");
   b_pMc = fChain->GetBranch("pMc");
   b_massMc = fChain->GetBranch("massMc");
   b_thetaMc = fChain->GetBranch("thetaMc");
   b_phiMc = fChain->GetBranch("phiMc");
   b_idMc = fChain->GetBranch("idMc");
   b_mothMc = fChain->GetBranch("mothMc");
   b_nDauMc = fChain->GetBranch("nDauMc");
   b_xMc = fChain->GetBranch("xMc");
   b_yMc = fChain->GetBranch("yMc");
   b_zMc = fChain->GetBranch("zMc");
   b_nB0 = fChain->GetBranch("nB0");
   b_massB0 = fChain->GetBranch("massB0");
   b_pB0 = fChain->GetBranch("pB0");
   b_thB0 = fChain->GetBranch("thB0");
   b_phiB0 = fChain->GetBranch("phiB0");
   b_errMassB0 = fChain->GetBranch("errMassB0");
   b_m0B0 = fChain->GetBranch("m0B0");
   b_xB0 = fChain->GetBranch("xB0");
   b_yB0 = fChain->GetBranch("yB0");
   b_zB0 = fChain->GetBranch("zB0");
   b_s2xB0 = fChain->GetBranch("s2xB0");
   b_s2yB0 = fChain->GetBranch("s2yB0");
   b_s2zB0 = fChain->GetBranch("s2zB0");
   b_chi2B0 = fChain->GetBranch("chi2B0");
   b_dofB0 = fChain->GetBranch("dofB0");
   b_stB0 = fChain->GetBranch("stB0");
   b_ndauB0 = fChain->GetBranch("ndauB0");
   b_MCB0 = fChain->GetBranch("MCB0");
   b_mseB0 = fChain->GetBranch("mseB0");
   b_mHatB0 = fChain->GetBranch("mHatB0");
   b_deltaeB0 = fChain->GetBranch("deltaeB0");
   b_ThruB0 = fChain->GetBranch("ThruB0");
   b_thThruB0 = fChain->GetBranch("thThruB0");
   b_phiThruB0 = fChain->GetBranch("phiThruB0");
   b_cosTBB0 = fChain->GetBranch("cosTBB0");
   b_d1B0Index = fChain->GetBranch("d1B0Index");
   b_d1B0Lund = fChain->GetBranch("d1B0Lund");
   b_d2B0Index = fChain->GetBranch("d2B0Index");
   b_d2B0Lund = fChain->GetBranch("d2B0Lund");
   b_d3B0Index = fChain->GetBranch("d3B0Index");
   b_d3B0Lund = fChain->GetBranch("d3B0Lund");
   b_d4B0Index = fChain->GetBranch("d4B0Index");
   b_d4B0Lund = fChain->GetBranch("d4B0Lund");
   b_d5B0Index = fChain->GetBranch("d5B0Index");
   b_d5B0Lund = fChain->GetBranch("d5B0Lund");
   b_d6B0Index = fChain->GetBranch("d6B0Index");
   b_d6B0Lund = fChain->GetBranch("d6B0Lund");
   b_d7B0Index = fChain->GetBranch("d7B0Index");
   b_d7B0Lund = fChain->GetBranch("d7B0Lund");
   b_modeB0 = fChain->GetBranch("modeB0");
   b_purB0 = fChain->GetBranch("purB0");
   b_intpurB0 = fChain->GetBranch("intpurB0");
   b_VtxXLepB0 = fChain->GetBranch("VtxXLepB0");
   b_VtxYLepB0 = fChain->GetBranch("VtxYLepB0");
   b_VtxZLepB0 = fChain->GetBranch("VtxZLepB0");
   b_VtxCovXXLepB0 = fChain->GetBranch("VtxCovXXLepB0");
   b_VtxCovYYLepB0 = fChain->GetBranch("VtxCovYYLepB0");
   b_VtxCovXYLepB0 = fChain->GetBranch("VtxCovXYLepB0");
   b_VtxCovZZLepB0 = fChain->GetBranch("VtxCovZZLepB0");
   b_VtxCovXZLepB0 = fChain->GetBranch("VtxCovXZLepB0");
   b_VtxCovYZLepB0 = fChain->GetBranch("VtxCovYZLepB0");
   b_VtxChiSqLepB0 = fChain->GetBranch("VtxChiSqLepB0");
   b_VtxNDofLepB0 = fChain->GetBranch("VtxNDofLepB0");
   b_VtxStatLepB0 = fChain->GetBranch("VtxStatLepB0");
   b_VtxNUsedLepB0 = fChain->GetBranch("VtxNUsedLepB0");
   b_DocaLepB0 = fChain->GetBranch("DocaLepB0");
   b_DocaErrLepB0 = fChain->GetBranch("DocaErrLepB0");
   b_VtxXXB0 = fChain->GetBranch("VtxXXB0");
   b_VtxYXB0 = fChain->GetBranch("VtxYXB0");
   b_VtxZXB0 = fChain->GetBranch("VtxZXB0");
   b_VtxCovXXXB0 = fChain->GetBranch("VtxCovXXXB0");
   b_VtxCovYYXB0 = fChain->GetBranch("VtxCovYYXB0");
   b_VtxCovXYXB0 = fChain->GetBranch("VtxCovXYXB0");
   b_VtxCovZZXB0 = fChain->GetBranch("VtxCovZZXB0");
   b_VtxCovXZXB0 = fChain->GetBranch("VtxCovXZXB0");
   b_VtxCovYZXB0 = fChain->GetBranch("VtxCovYZXB0");
   b_VtxChiSqXB0 = fChain->GetBranch("VtxChiSqXB0");
   b_VtxNDofXB0 = fChain->GetBranch("VtxNDofXB0");
   b_VtxStatXB0 = fChain->GetBranch("VtxStatXB0");
   b_VtxNUsedXB0 = fChain->GetBranch("VtxNUsedXB0");
   b_VtxPXB0 = fChain->GetBranch("VtxPXB0");
   b_VtxPhiXB0 = fChain->GetBranch("VtxPhiXB0");
   b_VtxThetaXB0 = fChain->GetBranch("VtxThetaXB0");
   b_ThrustXB0 = fChain->GetBranch("ThrustXB0");
   b_ThrustXPhiB0 = fChain->GetBranch("ThrustXPhiB0");
   b_ThrustXThetaB0 = fChain->GetBranch("ThrustXThetaB0");
   b_MassPB0 = fChain->GetBranch("MassPB0");
   b_MassPhiB0 = fChain->GetBranch("MassPhiB0");
   b_MassThetaB0 = fChain->GetBranch("MassThetaB0");
   b_Cov00B0 = fChain->GetBranch("Cov00B0");
   b_Cov10B0 = fChain->GetBranch("Cov10B0");
   b_Cov11B0 = fChain->GetBranch("Cov11B0");
   b_Cov20B0 = fChain->GetBranch("Cov20B0");
   b_Cov21B0 = fChain->GetBranch("Cov21B0");
   b_Cov22B0 = fChain->GetBranch("Cov22B0");
   b_Cov30B0 = fChain->GetBranch("Cov30B0");
   b_Cov31B0 = fChain->GetBranch("Cov31B0");
   b_Cov32B0 = fChain->GetBranch("Cov32B0");
   b_Cov33B0 = fChain->GetBranch("Cov33B0");
   b_nChB = fChain->GetBranch("nChB");
   b_massChB = fChain->GetBranch("massChB");
   b_pChB = fChain->GetBranch("pChB");
   b_thChB = fChain->GetBranch("thChB");
   b_phiChB = fChain->GetBranch("phiChB");
   b_errMassChB = fChain->GetBranch("errMassChB");
   b_m0ChB = fChain->GetBranch("m0ChB");
   b_xChB = fChain->GetBranch("xChB");
   b_yChB = fChain->GetBranch("yChB");
   b_zChB = fChain->GetBranch("zChB");
   b_s2xChB = fChain->GetBranch("s2xChB");
   b_s2yChB = fChain->GetBranch("s2yChB");
   b_s2zChB = fChain->GetBranch("s2zChB");
   b_chi2ChB = fChain->GetBranch("chi2ChB");
   b_dofChB = fChain->GetBranch("dofChB");
   b_stChB = fChain->GetBranch("stChB");
   b_ndauChB = fChain->GetBranch("ndauChB");
   b_MCChB = fChain->GetBranch("MCChB");
   b_mseChB = fChain->GetBranch("mseChB");
   b_mHatChB = fChain->GetBranch("mHatChB");
   b_deltaeChB = fChain->GetBranch("deltaeChB");
   b_ThruChB = fChain->GetBranch("ThruChB");
   b_thThruChB = fChain->GetBranch("thThruChB");
   b_phiThruChB = fChain->GetBranch("phiThruChB");
   b_cosTBChB = fChain->GetBranch("cosTBChB");
   b_d1ChBIndex = fChain->GetBranch("d1ChBIndex");
   b_d1ChBLund = fChain->GetBranch("d1ChBLund");
   b_d2ChBIndex = fChain->GetBranch("d2ChBIndex");
   b_d2ChBLund = fChain->GetBranch("d2ChBLund");
   b_d3ChBIndex = fChain->GetBranch("d3ChBIndex");
   b_d3ChBLund = fChain->GetBranch("d3ChBLund");
   b_d4ChBIndex = fChain->GetBranch("d4ChBIndex");
   b_d4ChBLund = fChain->GetBranch("d4ChBLund");
   b_d5ChBIndex = fChain->GetBranch("d5ChBIndex");
   b_d5ChBLund = fChain->GetBranch("d5ChBLund");
   b_d6ChBIndex = fChain->GetBranch("d6ChBIndex");
   b_d6ChBLund = fChain->GetBranch("d6ChBLund");
   b_d7ChBIndex = fChain->GetBranch("d7ChBIndex");
   b_d7ChBLund = fChain->GetBranch("d7ChBLund");
   b_modeChB = fChain->GetBranch("modeChB");
   b_purChB = fChain->GetBranch("purChB");
   b_intpurChB = fChain->GetBranch("intpurChB");
   b_VtxXLepChB = fChain->GetBranch("VtxXLepChB");
   b_VtxYLepChB = fChain->GetBranch("VtxYLepChB");
   b_VtxZLepChB = fChain->GetBranch("VtxZLepChB");
   b_VtxCovXXLepChB = fChain->GetBranch("VtxCovXXLepChB");
   b_VtxCovYYLepChB = fChain->GetBranch("VtxCovYYLepChB");
   b_VtxCovXYLepChB = fChain->GetBranch("VtxCovXYLepChB");
   b_VtxCovZZLepChB = fChain->GetBranch("VtxCovZZLepChB");
   b_VtxCovXZLepChB = fChain->GetBranch("VtxCovXZLepChB");
   b_VtxCovYZLepChB = fChain->GetBranch("VtxCovYZLepChB");
   b_VtxChiSqLepChB = fChain->GetBranch("VtxChiSqLepChB");
   b_VtxNDofLepChB = fChain->GetBranch("VtxNDofLepChB");
   b_VtxStatLepChB = fChain->GetBranch("VtxStatLepChB");
   b_VtxNUsedLepChB = fChain->GetBranch("VtxNUsedLepChB");
   b_DocaLepChB = fChain->GetBranch("DocaLepChB");
   b_DocaErrLepChB = fChain->GetBranch("DocaErrLepChB");
   b_VtxXXChB = fChain->GetBranch("VtxXXChB");
   b_VtxYXChB = fChain->GetBranch("VtxYXChB");
   b_VtxZXChB = fChain->GetBranch("VtxZXChB");
   b_VtxCovXXXChB = fChain->GetBranch("VtxCovXXXChB");
   b_VtxCovYYXChB = fChain->GetBranch("VtxCovYYXChB");
   b_VtxCovXYXChB = fChain->GetBranch("VtxCovXYXChB");
   b_VtxCovZZXChB = fChain->GetBranch("VtxCovZZXChB");
   b_VtxCovXZXChB = fChain->GetBranch("VtxCovXZXChB");
   b_VtxCovYZXChB = fChain->GetBranch("VtxCovYZXChB");
   b_VtxChiSqXChB = fChain->GetBranch("VtxChiSqXChB");
   b_VtxNDofXChB = fChain->GetBranch("VtxNDofXChB");
   b_VtxStatXChB = fChain->GetBranch("VtxStatXChB");
   b_VtxNUsedXChB = fChain->GetBranch("VtxNUsedXChB");
   b_VtxPXChB = fChain->GetBranch("VtxPXChB");
   b_VtxPhiXChB = fChain->GetBranch("VtxPhiXChB");
   b_VtxThetaXChB = fChain->GetBranch("VtxThetaXChB");
   b_ThrustXChB = fChain->GetBranch("ThrustXChB");
   b_ThrustXPhiChB = fChain->GetBranch("ThrustXPhiChB");
   b_ThrustXThetaChB = fChain->GetBranch("ThrustXThetaChB");
   b_MassPChB = fChain->GetBranch("MassPChB");
   b_MassPhiChB = fChain->GetBranch("MassPhiChB");
   b_MassThetaChB = fChain->GetBranch("MassThetaChB");
   b_Cov00ChB = fChain->GetBranch("Cov00ChB");
   b_Cov10ChB = fChain->GetBranch("Cov10ChB");
   b_Cov11ChB = fChain->GetBranch("Cov11ChB");
   b_Cov20ChB = fChain->GetBranch("Cov20ChB");
   b_Cov21ChB = fChain->GetBranch("Cov21ChB");
   b_Cov22ChB = fChain->GetBranch("Cov22ChB");
   b_Cov30ChB = fChain->GetBranch("Cov30ChB");
   b_Cov31ChB = fChain->GetBranch("Cov31ChB");
   b_Cov32ChB = fChain->GetBranch("Cov32ChB");
   b_Cov33ChB = fChain->GetBranch("Cov33ChB");
   b_nDstar = fChain->GetBranch("nDstar");
   b_massDstar = fChain->GetBranch("massDstar");
   b_pDstar = fChain->GetBranch("pDstar");
   b_thDstar = fChain->GetBranch("thDstar");
   b_phiDstar = fChain->GetBranch("phiDstar");
   b_errMassDstar = fChain->GetBranch("errMassDstar");
   b_m0Dstar = fChain->GetBranch("m0Dstar");
   b_xDstar = fChain->GetBranch("xDstar");
   b_yDstar = fChain->GetBranch("yDstar");
   b_zDstar = fChain->GetBranch("zDstar");
   b_s2xDstar = fChain->GetBranch("s2xDstar");
   b_s2yDstar = fChain->GetBranch("s2yDstar");
   b_s2zDstar = fChain->GetBranch("s2zDstar");
   b_chi2Dstar = fChain->GetBranch("chi2Dstar");
   b_dofDstar = fChain->GetBranch("dofDstar");
   b_stDstar = fChain->GetBranch("stDstar");
   b_ndauDstar = fChain->GetBranch("ndauDstar");
   b_MCDstar = fChain->GetBranch("MCDstar");
   b_d1DstarIndex = fChain->GetBranch("d1DstarIndex");
   b_d1DstarLund = fChain->GetBranch("d1DstarLund");
   b_d2DstarIndex = fChain->GetBranch("d2DstarIndex");
   b_d2DstarLund = fChain->GetBranch("d2DstarLund");
   b_nDstarBS = fChain->GetBranch("nDstarBS");
   b_massDstarBS = fChain->GetBranch("massDstarBS");
   b_chi2DstarBS = fChain->GetBranch("chi2DstarBS");
   b_dofDstarBS = fChain->GetBranch("dofDstarBS");
   //     b_spixDstarBS = fChain->GetBranch("spixDstarBS");
   //     b_spiyDstarBS = fChain->GetBranch("spiyDstarBS");
   //     b_spizDstarBS = fChain->GetBranch("spizDstarBS");
   b_nDstar0 = fChain->GetBranch("nDstar0");
   b_massDstar0 = fChain->GetBranch("massDstar0");
   b_pDstar0 = fChain->GetBranch("pDstar0");
   b_thDstar0 = fChain->GetBranch("thDstar0");
   b_phiDstar0 = fChain->GetBranch("phiDstar0");
   b_errMassDstar0 = fChain->GetBranch("errMassDstar0");
   b_m0Dstar0 = fChain->GetBranch("m0Dstar0");
   b_xDstar0 = fChain->GetBranch("xDstar0");
   b_yDstar0 = fChain->GetBranch("yDstar0");
   b_zDstar0 = fChain->GetBranch("zDstar0");
   b_s2xDstar0 = fChain->GetBranch("s2xDstar0");
   b_s2yDstar0 = fChain->GetBranch("s2yDstar0");
   b_s2zDstar0 = fChain->GetBranch("s2zDstar0");
   b_chi2Dstar0 = fChain->GetBranch("chi2Dstar0");
   b_dofDstar0 = fChain->GetBranch("dofDstar0");
   b_stDstar0 = fChain->GetBranch("stDstar0");
   b_ndauDstar0 = fChain->GetBranch("ndauDstar0");
   b_MCDstar0 = fChain->GetBranch("MCDstar0");
   b_d1Dstar0Index = fChain->GetBranch("d1Dstar0Index");
   b_d1Dstar0Lund = fChain->GetBranch("d1Dstar0Lund");
   b_d2Dstar0Index = fChain->GetBranch("d2Dstar0Index");
   b_d2Dstar0Lund = fChain->GetBranch("d2Dstar0Lund");
   b_nD0 = fChain->GetBranch("nD0");
   b_massD0 = fChain->GetBranch("massD0");
   b_pD0 = fChain->GetBranch("pD0");
   b_thD0 = fChain->GetBranch("thD0");
   b_phiD0 = fChain->GetBranch("phiD0");
   b_errMassD0 = fChain->GetBranch("errMassD0");
   b_m0D0 = fChain->GetBranch("m0D0");
   b_xD0 = fChain->GetBranch("xD0");
   b_yD0 = fChain->GetBranch("yD0");
   b_zD0 = fChain->GetBranch("zD0");
   b_s2xD0 = fChain->GetBranch("s2xD0");
   b_s2yD0 = fChain->GetBranch("s2yD0");
   b_s2zD0 = fChain->GetBranch("s2zD0");
   b_chi2D0 = fChain->GetBranch("chi2D0");
   b_dofD0 = fChain->GetBranch("dofD0");
   b_stD0 = fChain->GetBranch("stD0");
   b_ndauD0 = fChain->GetBranch("ndauD0");
   b_MCD0 = fChain->GetBranch("MCD0");
   b_d1D0Index = fChain->GetBranch("d1D0Index");
   b_d1D0Lund = fChain->GetBranch("d1D0Lund");
   b_d2D0Index = fChain->GetBranch("d2D0Index");
   b_d2D0Lund = fChain->GetBranch("d2D0Lund");
   b_d3D0Index = fChain->GetBranch("d3D0Index");
   b_d3D0Lund = fChain->GetBranch("d3D0Lund");
   b_d4D0Index = fChain->GetBranch("d4D0Index");
   b_d4D0Lund = fChain->GetBranch("d4D0Lund");
   b_nChD = fChain->GetBranch("nChD");
   b_massChD = fChain->GetBranch("massChD");
   b_pChD = fChain->GetBranch("pChD");
   b_thChD = fChain->GetBranch("thChD");
   b_phiChD = fChain->GetBranch("phiChD");
   b_errMassChD = fChain->GetBranch("errMassChD");
   b_m0ChD = fChain->GetBranch("m0ChD");
   b_xChD = fChain->GetBranch("xChD");
   b_yChD = fChain->GetBranch("yChD");
   b_zChD = fChain->GetBranch("zChD");
   b_s2xChD = fChain->GetBranch("s2xChD");
   b_s2yChD = fChain->GetBranch("s2yChD");
   b_s2zChD = fChain->GetBranch("s2zChD");
   b_chi2ChD = fChain->GetBranch("chi2ChD");
   b_dofChD = fChain->GetBranch("dofChD");
   b_stChD = fChain->GetBranch("stChD");
   b_ndauChD = fChain->GetBranch("ndauChD");
   b_MCChD = fChain->GetBranch("MCChD");
   b_d1ChDIndex = fChain->GetBranch("d1ChDIndex");
   b_d1ChDLund = fChain->GetBranch("d1ChDLund");
   b_d2ChDIndex = fChain->GetBranch("d2ChDIndex");
   b_d2ChDLund = fChain->GetBranch("d2ChDLund");
   b_d3ChDIndex = fChain->GetBranch("d3ChDIndex");
   b_d3ChDLund = fChain->GetBranch("d3ChDLund");
   b_d4ChDIndex = fChain->GetBranch("d4ChDIndex");
   b_d4ChDLund = fChain->GetBranch("d4ChDLund");
   b_nKs = fChain->GetBranch("nKs");
   b_massKs = fChain->GetBranch("massKs");
   b_pKs = fChain->GetBranch("pKs");
   b_thKs = fChain->GetBranch("thKs");
   b_phiKs = fChain->GetBranch("phiKs");
   b_errMassKs = fChain->GetBranch("errMassKs");
   b_m0Ks = fChain->GetBranch("m0Ks");
   b_xKs = fChain->GetBranch("xKs");
   b_yKs = fChain->GetBranch("yKs");
   b_zKs = fChain->GetBranch("zKs");
   b_s2xKs = fChain->GetBranch("s2xKs");
   b_s2yKs = fChain->GetBranch("s2yKs");
   b_s2zKs = fChain->GetBranch("s2zKs");
   b_chi2Ks = fChain->GetBranch("chi2Ks");
   b_dofKs = fChain->GetBranch("dofKs");
   b_stKs = fChain->GetBranch("stKs");
   b_ndauKs = fChain->GetBranch("ndauKs");
   b_MCKs = fChain->GetBranch("MCKs");
   b_d1KsIndex = fChain->GetBranch("d1KsIndex");
   b_d1KsLund = fChain->GetBranch("d1KsLund");
   b_d2KsIndex = fChain->GetBranch("d2KsIndex");
   b_d2KsLund = fChain->GetBranch("d2KsLund");
   b_nPi0 = fChain->GetBranch("nPi0");
   b_massPi0 = fChain->GetBranch("massPi0");
   b_pPi0 = fChain->GetBranch("pPi0");
   b_thPi0 = fChain->GetBranch("thPi0");
   b_phiPi0 = fChain->GetBranch("phiPi0");
   b_errMassPi0 = fChain->GetBranch("errMassPi0");
   b_m0Pi0 = fChain->GetBranch("m0Pi0");
   b_xPi0 = fChain->GetBranch("xPi0");
   b_yPi0 = fChain->GetBranch("yPi0");
   b_zPi0 = fChain->GetBranch("zPi0");
   b_s2xPi0 = fChain->GetBranch("s2xPi0");
   b_s2yPi0 = fChain->GetBranch("s2yPi0");
   b_s2zPi0 = fChain->GetBranch("s2zPi0");
   b_chi2Pi0 = fChain->GetBranch("chi2Pi0");
   b_dofPi0 = fChain->GetBranch("dofPi0");
   b_stPi0 = fChain->GetBranch("stPi0");
   b_ndauPi0 = fChain->GetBranch("ndauPi0");
   b_MCPi0 = fChain->GetBranch("MCPi0");
   b_d1Pi0Index = fChain->GetBranch("d1Pi0Index");
   b_d1Pi0Lund = fChain->GetBranch("d1Pi0Lund");
   b_d2Pi0Index = fChain->GetBranch("d2Pi0Index");
   b_d2Pi0Lund = fChain->GetBranch("d2Pi0Lund");
   b_nGConv = fChain->GetBranch("nGConv");
   b_massGConv = fChain->GetBranch("massGConv");
   b_pGConv = fChain->GetBranch("pGConv");
   b_thGConv = fChain->GetBranch("thGConv");
   b_phiGConv = fChain->GetBranch("phiGConv");
   b_errMassGConv = fChain->GetBranch("errMassGConv");
   b_m0GConv = fChain->GetBranch("m0GConv");
   b_xGConv = fChain->GetBranch("xGConv");
   b_yGConv = fChain->GetBranch("yGConv");
   b_zGConv = fChain->GetBranch("zGConv");
   b_s2xGConv = fChain->GetBranch("s2xGConv");
   b_s2yGConv = fChain->GetBranch("s2yGConv");
   b_s2zGConv = fChain->GetBranch("s2zGConv");
   b_chi2GConv = fChain->GetBranch("chi2GConv");
   b_dofGConv = fChain->GetBranch("dofGConv");
   b_stGConv = fChain->GetBranch("stGConv");
   b_ndauGConv = fChain->GetBranch("ndauGConv");
   b_MCGConv = fChain->GetBranch("MCGConv");
   b_d1GConvIndex = fChain->GetBranch("d1GConvIndex");
   b_d1GConvLund = fChain->GetBranch("d1GConvLund");
   b_d2GConvIndex = fChain->GetBranch("d2GConvIndex");
   b_d2GConvLund = fChain->GetBranch("d2GConvLund");
   if (fNewFormat) {
     b_nDalitz = fChain->GetBranch("nDalitz");
     b_massDalitz = fChain->GetBranch("massDalitz");
     b_pDalitz = fChain->GetBranch("pDalitz");
     b_thDalitz = fChain->GetBranch("thDalitz");
     b_phiDalitz = fChain->GetBranch("phiDalitz");
     b_errMassDalitz = fChain->GetBranch("errMassDalitz");
     b_m0Dalitz = fChain->GetBranch("m0Dalitz");
     b_xDalitz = fChain->GetBranch("xDalitz");
     b_yDalitz = fChain->GetBranch("yDalitz");
     b_zDalitz = fChain->GetBranch("zDalitz");
     b_s2xDalitz = fChain->GetBranch("s2xDalitz");
     b_s2yDalitz = fChain->GetBranch("s2yDalitz");
     b_s2zDalitz = fChain->GetBranch("s2zDalitz");
     b_chi2Dalitz = fChain->GetBranch("chi2Dalitz");
     b_dofDalitz = fChain->GetBranch("dofDalitz");
     b_stDalitz = fChain->GetBranch("stDalitz");
     b_ndauDalitz = fChain->GetBranch("ndauDalitz");
     b_MCDalitz = fChain->GetBranch("MCDalitz");
     b_d1DalitzIndex = fChain->GetBranch("d1DalitzIndex");
     b_d1DalitzLund = fChain->GetBranch("d1DalitzLund");
     b_d2DalitzIndex = fChain->GetBranch("d2DalitzIndex");
     b_d2DalitzLund = fChain->GetBranch("d2DalitzLund");
     b_nJpsi = fChain->GetBranch("nJpsi");
     b_massJpsi = fChain->GetBranch("massJpsi");
     b_pJpsi = fChain->GetBranch("pJpsi");
     b_thJpsi = fChain->GetBranch("thJpsi");
     b_phiJpsi = fChain->GetBranch("phiJpsi");
     b_errMassJpsi = fChain->GetBranch("errMassJpsi");
     b_m0Jpsi = fChain->GetBranch("m0Jpsi");
     b_xJpsi = fChain->GetBranch("xJpsi");
     b_yJpsi = fChain->GetBranch("yJpsi");
     b_zJpsi = fChain->GetBranch("zJpsi");
     b_s2xJpsi = fChain->GetBranch("s2xJpsi");
     b_s2yJpsi = fChain->GetBranch("s2yJpsi");
     b_s2zJpsi = fChain->GetBranch("s2zJpsi");
     b_chi2Jpsi = fChain->GetBranch("chi2Jpsi");
     b_dofJpsi = fChain->GetBranch("dofJpsi");
     b_stJpsi = fChain->GetBranch("stJpsi");
     b_ndauJpsi = fChain->GetBranch("ndauJpsi");
     b_MCJpsi = fChain->GetBranch("MCJpsi");
     b_d1JpsiIndex = fChain->GetBranch("d1JpsiIndex");
     b_d1JpsiLund = fChain->GetBranch("d1JpsiLund");
     b_d2JpsiIndex = fChain->GetBranch("d2JpsiIndex");
     b_d2JpsiLund = fChain->GetBranch("d2JpsiLund");
   }
   b_nTrk = fChain->GetBranch("nTrk");
   b_IfrLayTrk = fChain->GetBranch("IfrLayTrk");
   b_IfrNsTrk = fChain->GetBranch("IfrNsTrk");
   b_IfrInnerTrk = fChain->GetBranch("IfrInnerTrk");
   b_IfrBarrelTrk = fChain->GetBranch("IfrBarrelTrk");
   b_IfrFWDTrk = fChain->GetBranch("IfrFWDTrk");
   b_IfrBWDTrk = fChain->GetBranch("IfrBWDTrk");
   b_IfrMeasIntLenTrk = fChain->GetBranch("IfrMeasIntLenTrk");
   b_IfrFirstHitTrk = fChain->GetBranch("IfrFirstHitTrk");
   b_IfrLastHitTrk = fChain->GetBranch("IfrLastHitTrk");
   b_lMomTrk = fChain->GetBranch("lMomTrk");
   b_ZMom42Trk = fChain->GetBranch("ZMom42Trk");
   b_ecalTrk = fChain->GetBranch("ecalTrk");
   b_ecalXTrk = fChain->GetBranch("ecalXTrk");
   b_ecalYTrk = fChain->GetBranch("ecalYTrk");
   b_ecalZTrk = fChain->GetBranch("ecalZTrk");
   b_nCryTrk = fChain->GetBranch("nCryTrk");
   b_nBumpTrk = fChain->GetBranch("nBumpTrk");
   b_ZMom20Trk = fChain->GetBranch("ZMom20Trk");
   b_secMomTrk = fChain->GetBranch("secMomTrk");
   b_s1s9Trk = fChain->GetBranch("s1s9Trk");
   b_s9s25Trk = fChain->GetBranch("s9s25Trk");
   b_erawTrk = fChain->GetBranch("erawTrk");
   b_phiClusterTrk = fChain->GetBranch("phiClusterTrk");
   b_thetaClusterTrk = fChain->GetBranch("thetaClusterTrk");
   b_covEETrk = fChain->GetBranch("covEETrk");
   b_covTTTrk = fChain->GetBranch("covTTTrk");
   b_covPPTrk = fChain->GetBranch("covPPTrk");
   b_covRRTrk = fChain->GetBranch("covRRTrk");
   b_phicMatTrk = fChain->GetBranch("phicMatTrk");
   b_trkcMatTrk = fChain->GetBranch("trkcMatTrk");
   b_nPidTrk = fChain->GetBranch("nPidTrk");
   b_emcStatusTrk = fChain->GetBranch("emcStatusTrk");
   b_phiAtEMCTrk = fChain->GetBranch("phiAtEMCTrk");
   b_thetaAtEMCTrk = fChain->GetBranch("thetaAtEMCTrk");
   b_isvtTrk = fChain->GetBranch("isvtTrk");
   b_nsvtTrk = fChain->GetBranch("nsvtTrk");
   b_fhitTrk = fChain->GetBranch("fhitTrk");
   b_ndchTrk = fChain->GetBranch("ndchTrk");
   b_lhitTrk = fChain->GetBranch("lhitTrk");
   b_tLenTrk = fChain->GetBranch("tLenTrk");
   //     b_ntdofTrk = fChain->GetBranch("ntdofTrk");
   //     b_tproTrk = fChain->GetBranch("tproTrk");
   //     b_tChi2Trk = fChain->GetBranch("tChi2Trk");
   //     b_cPidTrk = fChain->GetBranch("cPidTrk");
   //     b_sfRangeTrk = fChain->GetBranch("sfRangeTrk");
   //     b_trkFitStatusTrk = fChain->GetBranch("trkFitStatusTrk");
   b_chargeTrk = fChain->GetBranch("chargeTrk");
   b_momentumTrk = fChain->GetBranch("momentumTrk");
   b_ppcov00 = fChain->GetBranch("ppcov00");
   b_ppcov10 = fChain->GetBranch("ppcov10");
   b_ppcov11 = fChain->GetBranch("ppcov11");
   b_ppcov20 = fChain->GetBranch("ppcov20");
   b_ppcov21 = fChain->GetBranch("ppcov21");
   b_ppcov22 = fChain->GetBranch("ppcov22");
   b_xPocaTrk = fChain->GetBranch("xPocaTrk");
   b_yPocaTrk = fChain->GetBranch("yPocaTrk");
   b_zPocaTrk = fChain->GetBranch("zPocaTrk");
   b_thetaTrk = fChain->GetBranch("thetaTrk");
   b_phiTrk = fChain->GetBranch("phiTrk");
   b_muonIdTrk = fChain->GetBranch("muonIdTrk");
   b_elecIdTrk = fChain->GetBranch("elecIdTrk");
   b_kaonIdTrk = fChain->GetBranch("kaonIdTrk");
   b_pionIdTrk = fChain->GetBranch("pionIdTrk");
   b_idTrk = fChain->GetBranch("idTrk");
   b_IndexTrk = fChain->GetBranch("IndexTrk");
   b_IndexNtTrk = fChain->GetBranch("IndexNtTrk");
   b_B0RecTrk = fChain->GetBranch("B0RecTrk");
   b_chBRecTrk = fChain->GetBranch("chBRecTrk");
   b_nGam = fChain->GetBranch("nGam");
   b_IfrLayGam = fChain->GetBranch("IfrLayGam");
   b_IfrNsGam = fChain->GetBranch("IfrNsGam");
   b_IfrInnerGam = fChain->GetBranch("IfrInnerGam");
   b_IfrBarrelGam = fChain->GetBranch("IfrBarrelGam");
   b_IfrFWDGam = fChain->GetBranch("IfrFWDGam");
   b_IfrBWDGam = fChain->GetBranch("IfrBWDGam");
   b_IfrMeasIntLenGam = fChain->GetBranch("IfrMeasIntLenGam");
   b_IfrFirstHitGam = fChain->GetBranch("IfrFirstHitGam");
   b_IfrLastHitGam = fChain->GetBranch("IfrLastHitGam");
   b_IfrExpIntLenGam = fChain->GetBranch("IfrExpIntLenGam");
   b_IfrIntLenBeforeIronGam = fChain->GetBranch("IfrIntLenBeforeIronGam");
   b_IfrTrkMatchGam = fChain->GetBranch("IfrTrkMatchGam");
   b_IfrEmcMatchGam = fChain->GetBranch("IfrEmcMatchGam");
   b_IfrLastBarrelGam = fChain->GetBranch("IfrLastBarrelGam");
   b_IfrCLFitChi2Gam = fChain->GetBranch("IfrCLFitChi2Gam");
   b_IfrStrips0 = fChain->GetBranch("IfrStrips0");
   b_IfrStrips1 = fChain->GetBranch("IfrStrips1");
   b_IfrStrips2 = fChain->GetBranch("IfrStrips2");
   b_IfrStrips3 = fChain->GetBranch("IfrStrips3");
   b_IfrStrips4 = fChain->GetBranch("IfrStrips4");
   b_IfrStrips5 = fChain->GetBranch("IfrStrips5");
   b_IfrStrips6 = fChain->GetBranch("IfrStrips6");
   b_IfrStrips7 = fChain->GetBranch("IfrStrips7");
   b_IfrStrips8 = fChain->GetBranch("IfrStrips8");
   b_IfrStrips9 = fChain->GetBranch("IfrStrips9");
   b_IfrStrips10 = fChain->GetBranch("IfrStrips10");
   b_IfrStrips11 = fChain->GetBranch("IfrStrips11");
   b_IfrStrips12 = fChain->GetBranch("IfrStrips12");
   b_IfrStrips13 = fChain->GetBranch("IfrStrips13");
   b_IfrStrips14 = fChain->GetBranch("IfrStrips14");
   b_IfrStrips15 = fChain->GetBranch("IfrStrips15");
   b_IfrStrips16 = fChain->GetBranch("IfrStrips16");
   b_IfrStrips17 = fChain->GetBranch("IfrStrips17");
   b_IfrStrips18 = fChain->GetBranch("IfrStrips18");
   b_IfrStrips19 = fChain->GetBranch("IfrStrips19");
   b_lMomGam = fChain->GetBranch("lMomGam");
   b_ZMom42Gam = fChain->GetBranch("ZMom42Gam");
   b_ecalGam = fChain->GetBranch("ecalGam");
   b_ecalXGam = fChain->GetBranch("ecalXGam");
   b_ecalYGam = fChain->GetBranch("ecalYGam");
   b_ecalZGam = fChain->GetBranch("ecalZGam");
   b_nCryGam = fChain->GetBranch("nCryGam");
   b_nBumpGam = fChain->GetBranch("nBumpGam");
   b_ZMom20Gam = fChain->GetBranch("ZMom20Gam");
   b_secMomGam = fChain->GetBranch("secMomGam");
   b_s1s9Gam = fChain->GetBranch("s1s9Gam");
   b_s9s25Gam = fChain->GetBranch("s9s25Gam");
   b_erawGam = fChain->GetBranch("erawGam");
   b_phiClusterGam = fChain->GetBranch("phiClusterGam");
   b_thetaClusterGam = fChain->GetBranch("thetaClusterGam");
   b_covEEGam = fChain->GetBranch("covEEGam");
   b_covTTGam = fChain->GetBranch("covTTGam");
   b_covPPGam = fChain->GetBranch("covPPGam");
   b_covRRGam = fChain->GetBranch("covRRGam");
   b_emcStatusGam = fChain->GetBranch("emcStatusGam");
   b_thetaGam = fChain->GetBranch("thetaGam");
   b_phiGam = fChain->GetBranch("phiGam");
   b_energyGam = fChain->GetBranch("energyGam");
   b_idGam = fChain->GetBranch("idGam");
   b_IndexGam = fChain->GetBranch("IndexGam");
   b_IndexNtGam = fChain->GetBranch("IndexNtGam");
   b_B0RecGam = fChain->GetBranch("B0RecGam");
   b_chBRecGam = fChain->GetBranch("chBRecGam");
   return kTRUE;
}

// ----------------------------------------------------------------------
void baseClass::Show(Int_t entry) {
// Print contents of entry.
// If entry is not specified, print current entry
   if (!fChain) return;
   fChain->Show(entry);
}

// ----------------------------------------------------------------------
Int_t baseClass::Cut(Int_t entry) {
// This function may be called from Loop.
// returns  1 if entry is accepted.
// returns -1 otherwise.
   return 1;
}



