//
// File generated by /afs/slac.stanford.edu/g/babar/package/root/5.14-00e/Linux24SL3_i386_gcc323/bin/rootcint at Tue Mar  2 05:31:30 2010

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "PIDDataDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TCollectionProxy.h"
#include "TIsAProxy.h"
// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void PIDData_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_PIDData(void *p = 0);
   static void *newArray_PIDData(Long_t size, void *p);
   static void delete_PIDData(void *p);
   static void deleteArray_PIDData(void *p);
   static void destruct_PIDData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::PIDData*)
   {
      ::PIDData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PIDData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PIDData", ::PIDData::Class_Version(), "PIDData.hh", 8,
                  typeid(::PIDData), DefineBehavior(ptr, ptr),
                  &::PIDData::Dictionary, isa_proxy, 0,
                  sizeof(::PIDData) );
      instance.SetNew(&new_PIDData);
      instance.SetNewArray(&newArray_PIDData);
      instance.SetDelete(&delete_PIDData);
      instance.SetDeleteArray(&deleteArray_PIDData);
      instance.SetDestructor(&destruct_PIDData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::PIDData*)
   {
      return GenerateInitInstanceLocal((::PIDData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PIDData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *PIDData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *PIDData::Class_Name()
{
   return "PIDData";
}

//______________________________________________________________________________
const char *PIDData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PIDData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PIDData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PIDData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PIDData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PIDData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PIDData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PIDData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void PIDData::Streamer(TBuffer &R__b)
{
   // Stream an object of class PIDData.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> _pmin;
      R__b >> _pmax;
      R__b >> _tmin;
      R__b >> _tmax;
      R__b >> _fmin;
      R__b >> _fmax;
      R__b >> _e;
      R__b >> _s;
      R__b >> _pass;
      R__b >> _tot;
      R__b.CheckByteCount(R__s, R__c, PIDData::IsA());
   } else {
      R__c = R__b.WriteVersion(PIDData::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << _pmin;
      R__b << _pmax;
      R__b << _tmin;
      R__b << _tmax;
      R__b << _fmin;
      R__b << _fmax;
      R__b << _e;
      R__b << _s;
      R__b << _pass;
      R__b << _tot;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void PIDData::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class PIDData.
      TClass *R__cl = ::PIDData::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_pmin", &_pmin);
      R__insp.Inspect(R__cl, R__parent, "_pmax", &_pmax);
      R__insp.Inspect(R__cl, R__parent, "_tmin", &_tmin);
      R__insp.Inspect(R__cl, R__parent, "_tmax", &_tmax);
      R__insp.Inspect(R__cl, R__parent, "_fmin", &_fmin);
      R__insp.Inspect(R__cl, R__parent, "_fmax", &_fmax);
      R__insp.Inspect(R__cl, R__parent, "_e", &_e);
      R__insp.Inspect(R__cl, R__parent, "_s", &_s);
      R__insp.Inspect(R__cl, R__parent, "_pass", &_pass);
      R__insp.Inspect(R__cl, R__parent, "_tot", &_tot);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_PIDData(void *p) {
      return  p ? new(p) ::PIDData : new ::PIDData;
   }
   static void *newArray_PIDData(Long_t nElements, void *p) {
      return p ? new(p) ::PIDData[nElements] : new ::PIDData[nElements];
   }
   // Wrapper around operator delete
   static void delete_PIDData(void *p) {
      delete ((::PIDData*)p);
   }
   static void deleteArray_PIDData(void *p) {
      delete [] ((::PIDData*)p);
   }
   static void destruct_PIDData(void *p) {
      typedef ::PIDData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::PIDData

/********************************************************
* PIDDataDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtablePIDDataDict();

extern "C" void G__set_cpp_environmentPIDDataDict() {
  G__add_compiledheader("TROOT.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("PIDData.hh");
  G__cpp_reset_tagtablePIDDataDict();
}
#include <new>
extern "C" int G__cpp_dllrevPIDDataDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* PIDData */
static int G__PIDDataDict_131_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PIDData* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new PIDData[n];
     } else {
       p = new((void*) gvp) PIDData[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new PIDData;
     } else {
       p = new((void*) gvp) PIDData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__PIDDataDictLN_PIDData);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PIDData* p = NULL;
   long gvp = G__getgvp();
   switch (libp->paran) {
   case 10:
     //m: 10
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new PIDData(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
     } else {
       p = new((void*) gvp) PIDData(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new PIDData(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) PIDData(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new PIDData(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) PIDData(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new PIDData(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) PIDData(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new PIDData(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) PIDData(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__PIDDataDictLN_PIDData);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PIDData* p = NULL;
   long gvp = G__getgvp();
   //m: 1
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new PIDData(*(PIDData*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) PIDData(*(PIDData*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__PIDDataDictLN_PIDData);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         PIDData* pobj;
         PIDData xobj = ((PIDData*) G__getstructoffset())->operator=(*(PIDData*) libp->para[0].ref);
         pobj = new PIDData(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const PIDData*) G__getstructoffset())->operator>=(*(PIDData*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const PIDData*) G__getstructoffset())->operator<(*(PIDData*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const PIDData*) G__getstructoffset())->operator==(*(PIDData*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((PIDData*) G__getstructoffset())->isCell((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDData*) G__getstructoffset())->calcEffAndErr();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDData*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((PIDData*) G__getstructoffset())->increment((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((PIDData*) G__getstructoffset())->increment((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((PIDData*) G__getstructoffset())->increment((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDData*) G__getstructoffset())->merge(*((PIDData*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((PIDData*) G__getstructoffset())->isZero());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((PIDData*) G__getstructoffset())->sameValue((PIDData*) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((PIDData*) G__getstructoffset())->sameValue((PIDData*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PIDData*) G__getstructoffset())->getPctr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PIDData*) G__getstructoffset())->getTctr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PIDData*) G__getstructoffset())->getFctr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PIDData*) G__getstructoffset())->getPmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PIDData*) G__getstructoffset())->getTmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PIDData*) G__getstructoffset())->getFmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PIDData*) G__getstructoffset())->getPmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PIDData*) G__getstructoffset())->getTmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PIDData*) G__getstructoffset())->getFmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PIDData*) G__getstructoffset())->getE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PIDData*) G__getstructoffset())->getS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PIDData*) G__getstructoffset())->getPass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PIDData*) G__getstructoffset())->getTot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDData*) G__getstructoffset())->setPmax((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDData*) G__getstructoffset())->setTmax((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDData*) G__getstructoffset())->setFmax((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDData*) G__getstructoffset())->setPmin((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDData*) G__getstructoffset())->setTmin((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDData*) G__getstructoffset())->setFmin((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDData*) G__getstructoffset())->setE((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDData*) G__getstructoffset())->setS((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDData*) G__getstructoffset())->setPass((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDData*) G__getstructoffset())->setTot((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PIDData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PIDData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PIDData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PIDData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const PIDData*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDData*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDData*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PIDData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PIDData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PIDData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PIDData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PIDDataDict_131_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PIDData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PIDData G__TPIDData;
static int G__PIDDataDict_131_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (PIDData*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PIDData*) (soff+(sizeof(PIDData)*i)))->~G__TPIDData();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (PIDData*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((PIDData*) (soff))->~G__TPIDData();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* PIDData */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncPIDDataDict {
 public:
  G__Sizep2memfuncPIDDataDict() {p=&G__Sizep2memfuncPIDDataDict::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncPIDDataDict::*p)();
};

size_t G__get_sizep2memfuncPIDDataDict()
{
  G__Sizep2memfuncPIDDataDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancePIDDataDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PIDDataDictLN_PIDData))) {
     PIDData *G__Lderived;
     G__Lderived=(PIDData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PIDDataDictLN_PIDData),G__get_linked_tagnum(&G__PIDDataDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablePIDDataDict() {

   /* Setting up typedef entry */
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__PIDDataDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PIDDataDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PIDDataDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PIDDataDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PIDDataDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* PIDData */
static void G__setup_memvarPIDData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PIDDataDictLN_PIDData));
   { PIDData *p; p=(PIDData*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"_pmin=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"_pmax=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"_tmin=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"_tmax=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"_fmin=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"_fmax=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"_e=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"_s=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"_pass=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"_tot=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__PIDDataDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarPIDDataDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncPIDData(void) {
   /* PIDData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PIDDataDictLN_PIDData));
   G__memfunc_setup("PIDData",599,G__PIDDataDict_131_0_1, 105, G__get_linked_tagnum(&G__PIDDataDictLN_PIDData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PIDData",599,G__PIDDataDict_131_0_2, 105, G__get_linked_tagnum(&G__PIDDataDictLN_PIDData), -1, 0, 10, 1, 1, 0, 
"d - - 0 - p d - - 0 - pmax "
"d - - 0 - th d - - 0 - tmax "
"d - - 0 - phi d - - 0 - fmax "
"d - - 0 0. e d - - 0 0. s "
"d - - 0 0. pass d - - 0 0. tot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PIDData",599,G__PIDDataDict_131_0_3, 105, G__get_linked_tagnum(&G__PIDDataDictLN_PIDData), -1, 0, 1, 1, 1, 0, "u 'PIDData' - 11 - orig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__PIDDataDict_131_0_4, 117, G__get_linked_tagnum(&G__PIDDataDictLN_PIDData), -1, 0, 1, 1, 1, 0, "u 'PIDData' - 11 - cmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>=",999,G__PIDDataDict_131_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'PIDData' - 1 - cmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__PIDDataDict_131_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'PIDData' - 11 - cmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__PIDDataDict_131_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'PIDData' - 11 - cmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isCell",604,G__PIDDataDict_131_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"d - - 0 - p d - - 0 - t "
"d - - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calcEffAndErr",1248,G__PIDDataDict_131_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__PIDDataDict_131_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("increment",965,G__PIDDataDict_131_0_11, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - pass i - - 0 - tot "
"d - - 0 1. w1 d - - 0 1. w2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("merge",528,G__PIDDataDict_131_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'PIDData' - 0 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isZero",636,G__PIDDataDict_131_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sameValue",931,G__PIDDataDict_131_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'PIDData' - 0 - - d - - 0 1.e-3 epsilon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPctr",729,G__PIDDataDict_131_0_15, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTctr",733,G__PIDDataDict_131_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFctr",719,G__PIDDataDict_131_0_17, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPmax",726,G__PIDDataDict_131_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTmax",730,G__PIDDataDict_131_0_19, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFmax",716,G__PIDDataDict_131_0_20, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPmin",724,G__PIDDataDict_131_0_21, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTmin",728,G__PIDDataDict_131_0_22, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFmin",714,G__PIDDataDict_131_0_23, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getE",389,G__PIDDataDict_131_0_24, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getS",403,G__PIDDataDict_131_0_25, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPass",727,G__PIDDataDict_131_0_26, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTot",631,G__PIDDataDict_131_0_27, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPmax",738,G__PIDDataDict_131_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTmax",742,G__PIDDataDict_131_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - th", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFmax",728,G__PIDDataDict_131_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPmin",736,G__PIDDataDict_131_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTmin",740,G__PIDDataDict_131_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - th", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFmin",726,G__PIDDataDict_131_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setE",401,G__PIDDataDict_131_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setS",415,G__PIDDataDict_131_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPass",739,G__PIDDataDict_131_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTot",643,G__PIDDataDict_131_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PIDDataDict_131_0_38, 85, G__get_linked_tagnum(&G__PIDDataDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&PIDData::Class), 0);
   G__memfunc_setup("Class_Name",982,G__PIDDataDict_131_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&PIDData::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__PIDDataDict_131_0_40, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&PIDData::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__PIDDataDict_131_0_41, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&PIDData::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__PIDDataDict_131_0_42, 85, G__get_linked_tagnum(&G__PIDDataDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__PIDDataDict_131_0_43, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__PIDDataDict_131_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PIDDataDict_131_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PIDDataDict_131_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&PIDData::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PIDDataDict_131_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&PIDData::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__PIDDataDict_131_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&PIDData::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PIDDataDict_131_0_49, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&PIDData::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~PIDData", 725, G__PIDDataDict_131_0_50, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncPIDDataDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalPIDDataDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcPIDDataDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__PIDDataDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__PIDDataDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__PIDDataDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__PIDDataDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__PIDDataDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__PIDDataDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__PIDDataDictLN_PIDData = { "PIDData" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablePIDDataDict() {
  G__PIDDataDictLN_TClass.tagnum = -1 ;
  G__PIDDataDictLN_TBuffer.tagnum = -1 ;
  G__PIDDataDictLN_TMemberInspector.tagnum = -1 ;
  G__PIDDataDictLN_TObject.tagnum = -1 ;
  G__PIDDataDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__PIDDataDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PIDDataDictLN_PIDData.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablePIDDataDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__PIDDataDictLN_TClass);
   G__get_linked_tagnum(&G__PIDDataDictLN_TBuffer);
   G__get_linked_tagnum(&G__PIDDataDictLN_TMemberInspector);
   G__get_linked_tagnum(&G__PIDDataDictLN_TObject);
   G__get_linked_tagnum(&G__PIDDataDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__PIDDataDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__PIDDataDictLN_PIDData),sizeof(PIDData),-1,65280,"Testing PIDData",G__setup_memvarPIDData,G__setup_memfuncPIDData);
}
extern "C" void G__cpp_setupPIDDataDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupPIDDataDict()");
  G__set_cpp_environmentPIDDataDict();
  G__cpp_setup_tagtablePIDDataDict();

  G__cpp_setup_inheritancePIDDataDict();

  G__cpp_setup_typetablePIDDataDict();

  G__cpp_setup_memvarPIDDataDict();

  G__cpp_setup_memfuncPIDDataDict();
  G__cpp_setup_globalPIDDataDict();
  G__cpp_setup_funcPIDDataDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncPIDDataDict();
  return;
}
class G__cpp_setup_initPIDDataDict {
  public:
    G__cpp_setup_initPIDDataDict() { G__add_setup_func("PIDDataDict",(G__incsetup)(&G__cpp_setupPIDDataDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initPIDDataDict() { G__remove_setup_func("PIDDataDict"); }
};
G__cpp_setup_initPIDDataDict G__cpp_setup_initializerPIDDataDict;

