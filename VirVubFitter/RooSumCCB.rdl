/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
 * Copyright (c) 2000-2005, Regents of the University of California          *
 *                          and Stanford University. All rights reserved.    *
 *                                                                           *
 * Redistribution and use in source and binary forms,                        *
 * with or without modification, are permitted according to the terms        *
 * listed in LICENSE (http://roofit.sourceforge.net/license.txt)             *
 *****************************************************************************/

#ifndef ROOSUMCCB
#define ROOSUMCCB

#include <vector>

#include "RooFitCore/RooAbsPdf.hh"
#include "RooFitCore/RooRealProxy.hh"
#include "RooFitCore/RooAbsReal.hh"
#include "RooFitModels/RooCBShape.hh" 

class RooSumCCB : public RooAbsPdf {
public:
  RooSumCCB(const char *name, const char *title,
	    RooAbsReal& _x,
	    RooAbsReal& _mean, RooAbsReal& _sigma, RooAbsReal& _alpha, RooAbsReal& _n, RooAbsReal& _endpoint,
	    std::vector<double> vWeight, std::vector<double> vEndpoint);
  RooSumCCB(const RooSumCCB& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooSumCCB(*this,newname); }
  inline virtual ~RooSumCCB() { }

protected:

  RooRealProxy x ;
  RooRealProxy mean ;
  RooRealProxy sigma ;
  RooRealProxy alpha ;
  RooRealProxy n ;
  RooRealProxy endpoint ;

  std::vector<double> _vWeight;
  std::vector<double> _vEndpoint;

  Double_t evaluate(const Double_t x, const Double_t endpoint) const;
  Double_t evaluate() const;

private:

  ClassDef(RooSumCCB,0) // Your description goes here...
};
 
#endif
